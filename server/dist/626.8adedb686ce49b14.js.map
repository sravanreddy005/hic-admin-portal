{"version":3,"file":"626.8adedb686ce49b14.js","mappings":"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I,UAAU,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,QAAQ,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,QAAQ,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,WAAW,OAAI,SAAS,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,OAAI,WAAW,OAAI,UAAU,OAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,OAAI,UAAU,OAAI,UAAU,OAAI,WAAW,OAAI,WAAW,OAAI,SAAS,OAAI,SAAS,SAAI,UAAU,SAAI,SAAS,SAAI,SAAS,SAAI,WAAW,SAAI,SAAS,SAAI,QAAQ,SAAI,QAAQ,SAAI,QAAQ,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,UAAU,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,WAAW,SAAI,SAAS,OAAI,SAAS,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,UAAU,OAAI,YAAY,OAAI,SAAS,OAAI,QAAQ,OAAI,UAAU,OAAI,SAAS,OAAI,UAAU,OAAI,WAAW,OAA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","names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","args","options","arguments","length","undefined","width","String","defaultWidth","format","formats","formatLong","date","buildFormatLongFn","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","code","formatDistance","token","count","result","tokenValue","n","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","buildLocalizeFn","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parseResult","parsePattern","buildMatchPatternFn","parseInt","buildMatchFn","any","index","weekStartsOn","firstWeekContainsDate","NaN","isNaN","Math","ceil","floor","required","TypeError","argument","requiredArgs","argStr","Object","prototype","call","Date","getTime","console","warn","Error","stack","dirtyDate","dirtyAmount","timestamp","toDate","amount","toInteger","addMilliseconds","target","dirtyObject","property","p","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","dateLongFormatter","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","protectedDayOfYearTokens","protectedWeekYearTokens","indexOf","input","RangeError","concat","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","startOfUTCWeek","firstWeekOfThisYear","startOfThisYear","dirtyDay","currentDay","remainder","dayIndex","fourthOfJanuaryOfNextYear","startOfUTCISOWeek","fourthOfJanuaryOfThisYear","getUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCISOWeekYear","round","getUTCWeekYear","firstWeek","startOfUTCWeekYear","numericPatterns","timezonePatterns","parseNumericPattern","RegExp","enumValue","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","parseNDigits","unit","validate","normalizedTwoDigitYear","normalizeTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","getUTCWeek","setUTCWeek","I","dirtyISOWeek","isoWeek","getUTCISOWeek","setUTCISOWeek","d","subPriority","isLeapYear","isLeapYearIndex","getUTCMonth","D","E","setUTCDay","e","wholeWeekDays","c","i","setUTCISODay","a","dayPeriodEnumToHours","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","parseTimezonePattern","timestampIsSet","x","t","_token","parseAnyDigitsSigned","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","isDate","targetLength","sign","output","abs","signedYear","addLeadingZeros","Te","numberOfDigits","milliseconds","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezone","lightFormatters","signedWeekYear","weekYear","dayOfYear","startOfYearTimestamp","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","toLowerCase","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","O","formatTimezoneShort","z","getDay","setDate","_options$locale","_options$locale$optio","startOfWeek","getWeekYear","dateFnsServiceProvider","provide","NbDateService","useClass","NbDateFnsDateService","NbNativeDateService","constructor","super","this","dirtyFormatStr","formatStr","defaultLocale","originalDate","isValid","getTimezoneOffsetInMilliseconds","subMilliseconds","formatterOptions","map","substring","firstCharacter","longFormatter","longFormatters","join","cleanEscapedString","formatter","formatters","useAdditionalWeekYearTokens","isProtectedWeekYearToken","throwProtectedError","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","formatDate","formatOptions","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","parsers","incompatibleToken","_i","usedToken","fullToken","push","uniquePrioritySetters","setter","sort","filter","setterArray","assign","parseOptions","getId","getWeekNumber","startOfWeekYear","getWeek","getWeekOptions","getDateFormat","ɵfac","i0","LOCALE_ID","NB_DATE_SERVICE_OPTIONS","ɵprov","factory","NbDateFnsDateModule","static","ngModule","providers","useValue","ɵmod","ɵinj","rf","ctx","ɵngcc0","part_r1","$implicit","ctx_r0","isMatch","matchClass","text","_c0","a0","a1","_c1","ctx_r7","_textSearching","ctx_r8","_textNoResults","item_r10","image","CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template","CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template","ctx_r13","description","searchStr","_c2","CompleterCmp_div_3_div_1_div_3_div_2_Template","CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template","rowIndex_r11","ctx_r9","title","CompleterCmp_div_3_div_1_div_1_Template","CompleterCmp_div_3_div_1_div_2_Template","CompleterCmp_div_3_div_1_div_3_Template","ctx_r19","searchActive_r3","searching","items_r2","results","ctx_r6","displaySearching","CompleterCmp_div_3_div_1_Template","isInitialized_r4","searchInitialized","isOpen_r5","isOpen","ctx_r1","displayNoResults","Subject","_searchFields","_titleField","_descriptionField","_imageField","cancel","searchFields","titleField","descriptionField","imageField","convertToItem","data","formattedText","formattedDesc","extractTitle","JSON","stringify","extractValue","isNil","originalObject","extractMatches","term","matches","split","item","extractBySearchFields","some","field","reduce","acc","titlePart","obj","keys","processResults","searchField","CompleterBaseData","dataSourceChange","EventEmitter","_data","savedTerm","Observable","data$","pipe","catchError","subscribe","res","search","emit","next","http","_remoteUrl","remoteSearch","_urlFormater","_dataField","remoteUrl","urlFormater","dataField","requestOptions","_requestOptions","url","encodeURIComponent","get","unsubscribe","LocalDataFactory","create","LocalData","RemoteDataFactory","RemoteData","ɵngcc1","__decorate","__metadata","HttpClient","CompleterService","localDataFactory","remoteDataFactory","local","localData","remote","remoteData","CtrCompleter","selected","highlighted","opened","list","dropdown","_hasHighlighted","_hasSelected","_cancelBlur","_isOpen","_autoHighlightIndex","registerList","registerDropdown","onHighlighted","onSelected","clearList","clear","onDataSourceChange","hasSelected","selectCurrent","nextRow","prevRow","hasHighlighted","cancelBlur","isCancelBlur","open","autoHighlightIndex","highlightRow","ɵdir","type","selectors","outputs","Output","row","CtrDropdown","completer","el","zone","rows","isScrollOn","_rowMouseDown","ngOnDestroy","ngAfterViewInit","css","getComputedStyle","nativeElement","maxHeight","overflowY","run","onMouseDown","event","registerRow","arrIndex","_row","unregisterRow","rowIndex","splice","currHighlighted","find","setHighlighted","getDataItem","rowTop","dropdownRowTop","dropdownScrollTopTo","getNativeElement","dropdownHeight","getBoundingClientRect","bottom","dropdownRowOffsetHeight","top","paddingTop","rowMouseDown","nextRowIndex","scrollTop","parentElement","offsetHeight","marginTop","marginBottom","hostBindings","$event","HostListener","Function","__param","Host","ElementRef","NgZone","CtrInput","ngModel","clearSelected","clearUnselected","overrideSuggested","fillHighlighted","openOnFocus","openOnClick","selectOnClick","selectOnFocus","ngModelChange","_searchStr","_displayStr","blurTimer","valueChanges","keyupHandler","keyCode","preventDefault","restoreSearchValue","stopPropagation","pasteHandler","keydownHandler","which","handleSelection","o","ctrlKey","metaKey","altKey","onBlur","setTimeout","focus","timer","take","doBlur","onfocus","select","onClick","ɵngcc2","inputs","Input","NgModel","CtrList","templateRef","viewContainer","cd","ctrListMinSearchLength","ctrListPause","ctrListAutoMatch","ctrListAutoHighlight","ctrListDisplaySearching","_dataService","searchTimer","clearTimer","CtrListContext","_initialValue","viewRef","ngOnInit","createEmbeddedView","dataService","newService","dataServiceSubscribe","initialValue","initialItem","refreshTemplate","searchTimerComplete","_clear","destroyed","detectChanges","markForCheck","getBestMatchIndex","bestMatch","toLocaleLowerCase","startsWith","includes","error","TemplateRef","ViewContainerRef","ChangeDetectorRef","CtrRow","renderer","_rowIndex","_item","ctrRow","CtrRowItem","dataItem","onMouseEnter","addClass","removeClass","Renderer2","CompleterListItemCmp","parts","matchStr","matchPos","startIndex","matchText","matchPart","ɵcmp","decls","vars","consts","template","CompleterListItemCmp_span_1_Template","directives","ɵngcc3","encapsulation","noop","COMPLETER_CONTROL_VALUE_ACCESSOR","multi","NG_VALUE_ACCESSOR","useExisting","forwardRef","CompleterCmp","completerService","cdr","inputName","inputId","pause","minSearchLength","maxChars","placeholder","autoMatch","disableInput","autofocus","autoHighlight","blurEvent","click","focusEvent","keyup","keydown","control","FormControl","_onTouchedCallback","_onChangeCallback","_focus","_open","v","ngAfterViewChecked","ctrInput","onTouched","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","datasource","source","textNoResults","textSearching","onFocus","onKeyup","onKeydown","onChange","close","blur","Ng2CompleterModule_1","viewQuery","_t","first","fieldTabindex","inputClass","features","CompleterCmp_div_3_Template","styles","ViewChild","Ng2CompleterModule","imports","CommonModule","FormsModule","CellModule","FilterModule","ReactiveFormsModule","PagerModule","TBodyModule","THeadModule","Ng2SmartTableModule","PagesComponent","accessService","currentUserModules","val","modulesList","menu","icon","link","home","group","children","hidden","onDocumentClick","dropdowns","document","getElementsByClassName","openDropdown","classList","contains","remove","DashboardComponent","adminService","authenticateService","__awaiter","resp","getData","responseCode","totalBranchesCount","totalUsersCount","totalUsers","totalActiveUsersCount","activeUsers","totalInActiveUsersCount","countData","totalShipmentsWithTrackingNoCount","shipmentsWithTrackingNoCount","totalShipmentsWithoutTrackingNoCount","shipmentsWithoutTrackingNoCount","totalStockPendingRequestsCount","pendingStockCount","totalPendingComplaintsCount","pendingCount","totalClosedComplaintsCount","closedCount","currentUserData","currentUserValue","role_type","isSuperAdmin","branchesAccessData","getActionAccess","usersAccessData","shipmentsAccessData","stockRequestsAccessData","complaintsAccessData","userAccess","branches","users","shipmentsList","stockRequests","complaints","getBranchesCount","getUsersCount","getShipmentsCount","getStockRequestsCount","getComplaintsCount","_r8","previous","ctx_r5","previousLabel","screenReaderPageLabel","PaginationControlsComponent_ul_2_li_1_a_1_Template","PaginationControlsComponent_ul_2_li_1_span_2_Template","_r0","isFirstPage","getCurrent","_r15","page_r10","setCurrent","ctx_r11","label","ctx_r12","screenReaderCurrentLabel","PaginationControlsComponent_ul_2_li_4_a_1_Template","PaginationControlsComponent_ul_2_li_4_ng_container_2_Template","_r23","ctx_r20","nextLabel","ctx_r21","PaginationControlsComponent_ul_2_li_5_a_1_Template","PaginationControlsComponent_ul_2_li_5_span_2_Template","isLastPage","PaginationControlsComponent_ul_2_li_1_Template","PaginationControlsComponent_ul_2_li_4_Template","PaginationControlsComponent_ul_2_li_5_Template","responsive","screenReaderPaginationLabel","directionLinks","getLastPage","pages","trackByIndex","PaginationService","change","instances","DEFAULT_ID","defaultId","register","instance","id","updateInstance","changed","prop","getCurrentPage","currentPage","setCurrentPage","page","totalItems","itemsPerPage","setTotalItems","setItemsPerPage","getInstance","clone","Reflect","metadata","LARGE_NUMBER","MAX_SAFE_INTEGER","PaginatePipe","service","state","transform","collection","_id","start","end","serverSideMode","createInstance","perPage","emitChange","stateIsIdentical","saveState","config","checkConfig","missing","size","every","element","decorators","desc","r","getOwnPropertyDescriptor","decorate","defineProperty","__decorate$1","ɵpipe","name","pure","__decorate$2","__metadata$1","maxSize","pageChange","pageBoundsCorrection","_directionLinks","_autoHide","_responsive","PaginationControlsComponent","coerceToBoolean","enumerable","configurable","Boolean","autoHide","PaginationControlsComponent_ul_2_Template","PaginationControlsDirective","pipes","changeDetection","__decorate$3","__metadata$2","changeDetectorRef","_this","changeSub","updatePageLinks","ngOnChanges","changes","checkValidId","inst","getTotalItems","correctedCurrentPage","outOfBoundCorrection","createPageArray","totalPages","paginationRange","max","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","pageNumber","calculatePageNumber","exportAs","NgxPaginationModule","FilterPipe","items","defaultFilter","filterKeys","keyName","_r10","MAs","ModulesListComponent","formBuilder","view","edit","delete","pageSize","modulesResp","modules","totalCount","updateForm","setValue","module_id","module_name","submitted","addForm","invalid","addResp","addOrUpdateData","getModules","successAlert","errorAlert","message","reset","l","getElementById","_a","updateResp","_b","accessData","Validators","alphaRegx","form","controls","editForm","oxw","ctx_r34","ctx_r35","ctx_r36","ctx_r37","ctx_r38","ctx_r45","ctx_r59","ctx_r60","ctx_r61","ctx_r62","ctx_r63","RolesComponent","showEditRole","showAddRole","addBtnDisable","addRoleForm","role_name","module","check","selectedIds","module_val","module_value","checked","roleData","editRoleForm","role_id","accessModules","access_modules","roleTypesResp","roleTypes","rolesResp","rolesList","roles","parentKey","childKey","formData","getRoles","roleID","getRoleTypes","ctx_r17","ctx_r27","ctx_r30","ctx_r33","ctx_r96","ref_r55","CHM","ctx_r99","ctx_r100","ctx_r101","ctx_r145","ref_r104","ctx_r148","ctx_r149","ctx_r150","BranchesComponent","dialogService","toggle","branchesList","pincodeDetails","getPincodeDetails","country","city","mapURL","google_map_link","urlRegx","displayMap","iframe","createElement","src","height","innerHTML","appendChild","selectedFile","files","modalVal","branch_type","branch_name","branch_email","branch_mobile_number","address1","address2","pincode","show_in_website","show_in_category","openModal","FormData","append","getBranchesList","currentStatus","active","status","changeConfirmAlert","statusResp","current_status","deleteConfirmAlert","deleteResp","deleteData","alnumSpecialRegx","emailRegx","mobileRegx","addressRegx","pincodeRegx","dialog","closeOnBackdropClick","SmartFilterPipe","entry","key1","key2","ctx_r26","ctx_r29","ctx_r32","ctx_r89","ref_r62","ctx_r123","ref_r94","UsersComponent","adminsResp","adminsList","admin_id","role","branch_id","first_name","last_name","email","mobile_number","address","getUsersList","PricesService","environment","apiName","post","nodeURL","lastValueFrom","ctx_r22","_r16","CountriesComponent","pricesService","country_id","country_name","country_code","countriesResp","countries","getCountries","countryID","alphaWithoutSpaceRegx","ctx_r23","_r13","ctx_r50","ref_r44","CarriersComponent","carrier_name","carriers","getCarriers","ctx_r31","_r24","ctx_r54","ctx_r56","ctx_r57","ctx_r58","ctx_r70","CarrierZonesComponent","carriersList","countriesList","carrierID","carrier_id","carrier_zones","carrierZonesList","getCarrierZones","downLoadFiles","countryValues","reqData","err","msg","uploadForm","_c","alnumRegx","zones_file","fileRegx","upload_form","ctx_r16","ctx_r18","ctx_r73","ref_r58","ctx_r77","ctx_r83","ref_r79","ctx_r86","ctx_r87","ctx_r105","ref_r90","PricesComponent","weight_from","weight_to","price_per_kg","medicine_price_per_kg","prices","getPrices","floatRegx","prices_file","ctx_r28","_r21","ref_r52","CommodityListComponent","product_name","hsn_code","commodity_list","getCommodityList","nonHTMLRegx","commodity_file","TrimDirective","_el","trim","NumberDirective","onInputChange","initalValue","CapitalStringDirective","toUpperCase","ctx_r95","ctx_r97","ctx_r98","ctx_r198","ctx_r200","ctx_r201","ctx_r202","ctx_r203","AddShipmentsComponent","sidebarService","toISOString","no_of_pieces","boxesCount","addBoxDetails","removeBoxDetails","totalActualWeight","totalVolumetricWeight","totalChargeableWeight","boxDetails","boxWeight","box_weight","getBoxDetailsFormGroup","valumetricWeight","actualWeight","actual_weight","parseFloat","chargeableWeight","roundOffWeight","valumetric_weight","chargeable_weight","chargable_weight","calculatePrices","noOfPieces","medicineShipment","medicine_shipment","medicineShipmentValue","finalWeight","priceData","pricesList","basicAmount","commercialChargesAmount","commercial_charges_amount","jewelleryAppraisalAmount","jewellery_appraisal_amount","pickupChargesAmount","pickup_charges_amount","packingChargesAmount","packing_charges_amount","priceAmount","gstAmount","otherAmount","other_amount","totalAmount","basic_amount","gst_amount","total_amount","numRegx","getCommodityFormGroup","box_number","setErrors","maxValue","service_type","destination_country","warning","commodityList","commodityDetails","quantity","unit_price","commodityValue","commodity_value","checkTotalCommodityValue","totalCommodityValue","getSumByKey","c2cMaxAmountReached","shipment_type","newValue","commodityName","commodityNamesArray","commodityVal","commodity_name","commodity_items_summery","paymentMode","mode_of_payment","transactionID","transaction_id","countriesWithoutZip","sender_pincode","receiver_pincode","sender_city","sender_state","pin","receiver_city","receiver_state","idProofType","sender_id_proof_type","idProofNo","sender_id_proof_number","adhaarRegx","panCardRegx","gstnRegx","passportRegx","selectedFiles","markAllAsTouched","scrollIntoView","addFormInitialValues","toggleSidebar","userBranch","showBranchField","branch","invoice_number","currentDate","boxes_details","product_type","floatWithNegativeRegx","sender_name","sender_company_name","sender_address1","sender_address2","sender_address3","sender_country","sender_phone_number","sender_email","receiver_name","receiver_company_name","receiver_address1","receiver_address2","receiver_address3","receiver_phone_number","receiver_email","newCommodityFields","remarks","kyc_doc","getAllErrors","hasError","errors","FormGroup","FormArray","uom","addCommodity","commoditiesLength","removeCommodity","removeAt","newBoxDetailsFields","handleBoxDetailsChange","ctx_r24","_r9","ref_r51","EmptyTrackingShipmentsComponent","tracking_no1","tracking_no2","tracking_no3","tracking_no4","branchID","shipments","getShipmentsList","createdAt","createdDate","futureDate","ref_r60","ShipmentsListComponent","updateTrackingInfoForm","tracking_no1_old","searchForm","to_date","fromDate","from_date","now","setAttribute","sheetName","fileName","Branch","carrier","boxes_3kg","boxes_5kg","boxes_10kg","boxes_15kg","Custom","boxes_custom","Others","Remarks","toLocaleString","updatedAt","exportToExcel","fileNames","downLoadInvoicePDF","backDate","pastDate","trackingForm","ctx_r110","ctx_r116","ctx_r137","ctx_r139","ctx_r140","ctx_r141","ctx_r142","ctx_r220","ctx_r222","ctx_r223","ctx_r224","ctx_r225","ctx_r226","UpdateShipmentsComponent","route","router","A","shipmentID","shipmentDetails","info","setCommodityFields","setBoxesDetailsFields","getPricesUsingCountryAndCarrrier","navigate","snapshot","paramMap","isSuperadmin","getShipmentDetails","forEach","ViewShipmentDetailsComponent","controlName","matchingControlName","matchingControl","confirmNewIsNotOld","confirmedValidator","compareFloatValidator","value1","value2","compareValidator","ref_r18","SettingsComponent","changeEmailForm","userData","confirmPswdForm","updateData","new_email","password","accessToken","setCurrentUserSubject","confirmAlert","logout","_d","changePswdForm","old_password","new_password","passwordRegx","confirm_new_password","validator","ConfirmNewIsNotOld","ConfirmedValidator","emailForm","pswdForm","NotFoundComponent","menuService","goToHome","navigateHome","AccessDeniedComponent","ctx_r40","ctx_r43","ctx_r46","_r19","ctx_r85","ref_r73","ctx_r113","ref_r101","ctx_r126","BankTransactionsComponent","transaction_date","mode_of_deposit","transaction_proof","transactionsList","transactions","getBankTransactions","BranchPaymentDetailsComponent","paymentDetails","shipmentsTotalCount","totalWeight","totalBasicAmount","totalGSTAmount","totalCardAmount","getSumByKeyWithFilter","totalUPIAmount","totalOtherAmount","commisionsResp","commisionPaymentsResp","totalCommissionPaymentPaid","totalCommission","filterData","data1","commission_amount","totalCommissionDue","approved","cashTransactions","onlineTransactions","totalCashAmount","totalBankOnlineAmount","getBranchPaymentDetails","ctx_r71","ref_r53","ctx_r74","ref_r77","ManageBranchCommissionsComponent","getBranchCommissions","dateRegx","CompareValidator","ref_r66","ctx_r103","ctx_r112","ref_r92","ctx_r115","BranchCommissionPaymentsComponent","getBranchCommissionPayments","ctx_r15","_r22","ref_r71","ctx_r121","ctx_r136","ref_r106","ExpensesComponent","expense_type","paid_by","paid_to","Amount","Description","getExpenses","ctx_r10","ctx_r25","ctx_r67","ref_r54","StockPurchasesComponent","purchased_date","stock_type","formVal","totalList","filteredList","datetotimestamp","total3kgCount","total5kgCount","total10kgCount","total15kgCount","totalTapesCount","totalCoversPacketCount","totalBillBooksCount","total3kgFilteredCount","total5kgFilteredCount","total10kgFilteredCount","total15kgFilteredCount","totalTapesFilteredCount","totalCoversPacketFilteredCount","totalBillBooksFilteredCount","getStockPurchases","_r20","ctx_r81","ctx_r88","ref_r70","ctx_r91","ctx_r106","ctx_r119","StockRequestsComponent","request_quantity","approved_quantity","total3kgRequestsCount","total5kgRequestsCount","total10kgRequestsCount","total15kgRequestsCount","totalTapesRequestsCount","totalCoversPacketRequestsCount","totalBillBooksRequestsCount","total3kgApprovedCount","getSumByKeyWithFilters","total5kgApprovedCount","total10kgApprovedCount","total15kgApprovedCount","totalTapesApprovedCount","totalCoversPacketApprovedCount","totalBillBooksApprovedCount","getStockRequests","StockAvailabilityComponent","stockPurchasesList","total3kgPurchaseCount","total5kgPurchaseCount","total10kgPurchaseCount","total15kgPurchaseCount","totalTapesPurchaseCount","totalCoversPacketPurchaseCount","totalBillBooksPurchaseCount","resp1","stockRequestsList","getStockAvailability","ctx_r4","BranchStockAvailabilityComponent","getShipmentsByBranch","getUsedStockList","total3kgUsedCount","total5kgUsedCount","total10kgUsedCount","total15kgUsedCount","usedStockList","totalTapesUsedCount","totalCoversPacketUsedCount","totalBillBooksUsedCount","ctx_r76","ctx_r90","ref_r81","UsedStockComponent","_r17","ctx_r107","ref_r86","SalariesComponent","employee_name","salary_amount","salary_date","transaction_number","esi","pf","hra","ESI","PF","HRA","getSalaries","getTinymce","window","tinymce","Events","onBeforePaste","onContextMenu","onCopy","onCut","onDblclick","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onPaste","onSelectionChange","onActivate","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onClearUndos","onDeactivate","onDirty","onExecCommand","onGetContent","onHide","onInit","onInitNgModel","onLoadContent","onNodeChange","onPostProcess","onPostRender","onPreInit","onPreProcess","onProgressState","onRedo","onRemove","onReset","onResizeEditor","onSaveContent","onSetAttrib","onObjectResizeStart","onObjectResized","onObjectSelected","onSetContent","onShow","onSubmit","onUndo","onVisualAid","validEvents","listenTinyMCEEvent","editor","eventName","destroy$","fromEvent","takeUntil","parseStringProperty","defaultValue","unique","isTextarea","tagName","normalizePluginArray","plugins","mergePlugins","initPlugins","inputPlugins","isNullOrUndefined","ScriptLoader","CreateScriptLoader","script$","load","doc","defer","scriptTag","referrerPolicy","head","mapTo","configOrBufferSize","windowTime","scheduler","bufferSize","refCount","Infinity","share","connector","ReplaySubject","resetOnError","resetOnComplete","resetOnRefCountZero","shareReplay","reinitialize","TINYMCE_SCRIPT_SRC","InjectionToken","EDITOR_COMPONENT_VALUE_ACCESSOR","EditorComponent","elementRef","ngZone","platformId","tinymceScriptSrc","cloudChannel","apiKey","modelEvents","onTouchedCallback","initialise","finalInit","init","selector","_element","inline","readonly","disabled","toolbar","setup","_editor","initEditor","ignoredEvents","ignoreEvents","allowedEvents","getValidEvents","eventEmitter","observers","bindHandlers","style","visibility","runOutsideAngular","_elementRef","_disabled","initialized","mode","setMode","setContent","onChangeCallback","isPlatformBrowser","prefix","random","uuid","fo","ownerDocument","getScriptSrc","emitOnChange","getContent","outputFormat","PLATFORM_ID","EditorModule","SafeHtmlPipe","sanitized","bypassSecurityTrustHtml","decode","ctx_r78","ref_r65","ctx_r84","ref_r87","ctx_r104","ComplaintsComponent","menubar","invoiceNumberAvailable","customer_name","updateDesc","addDesc","markAsTouched","getComplaints","routes","path","component","canActivate","AuthGuard","redirectTo","pathMatch","PagesRoutingModule","RouterModule","PagesModule","SharedModule","NgSelectModule","HttpClientModule","ThemeModule","NbMenuModule","NbActionsModule","NbButtonModule","NbInputModule","NbCardModule","NbTabsetModule","NbRadioModule","NbSelectModule","NbListModule","NbCheckboxModule","NbIconModule","NbDatepickerModule","__assign","apply","named_references_1","require","numeric_unicode_map_1","surrogate_pairs_1","allNamedReferences","namedReferences","all","html5","encodeRegExps","specialChars","nonAscii","nonAsciiPrintable","extensive","defaultEncodeOptions","level","numeric","exports","encodeRegExp","references","_e","characters","isHex","lastIndex","exec","result_1","code_1","getCodePoint","charCodeAt","defaultDecodeOptions","scope","strict","attribute","baseDecodeRegExps","xml","body","bodyRegExps","html4","decodeRegExps","fromCharCode","outOfBoundsChar","defaultDecodeEntityOptions","entity","decodeResultByReference_1","entities","decodeSecondChar_1","decodeCode_1","substr","fromCodePoint","numericUnicodeMap","decodeRegExp","isAttribute","isStrict","replaceResult_1","replaceMatch_1","replaceLastIndex_1","replaceInput_1","decodeResult_1","decodeEntityLastChar_2","decodeResultByReference_2","decodeSecondChar_2","decodeCode_2","_","$","fj","astralCodePoint","codePointAt","position"],"sourceRoot":"webpack:///","sources":["./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","./node_modules/date-fns/esm/locale/en-US/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","./node_modules/date-fns/esm/_lib/toInteger/index.js","./node_modules/date-fns/esm/_lib/requiredArgs/index.js","./node_modules/date-fns/esm/toDate/index.js","./node_modules/date-fns/esm/addMilliseconds/index.js","./node_modules/date-fns/esm/subMilliseconds/index.js","./node_modules/date-fns/esm/_lib/assign/index.js","./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","./node_modules/date-fns/esm/_lib/protectedTokens/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/setUTCDay/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","./node_modules/date-fns/esm/parse/_lib/parsers/index.js","./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","./node_modules/date-fns/esm/parse/index.js","./node_modules/date-fns/esm/isDate/index.js","./node_modules/date-fns/esm/isValid/index.js","./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","./node_modules/date-fns/esm/_lib/format/formatters/index.js","./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","./node_modules/date-fns/esm/format/index.js","./node_modules/date-fns/esm/startOfWeek/index.js","./node_modules/date-fns/esm/getWeekYear/index.js","./node_modules/date-fns/esm/startOfWeekYear/index.js","./node_modules/date-fns/esm/getWeek/index.js","./node_modules/@nebular/date-fns/fesm2015/nebular-date-fns.mjs","./node_modules/ng2-completer/__ivy_ngcc__/esm2015/ng2-completer.js","./node_modules/ng2-smart-table/__ivy_ngcc__/fesm2015/ng2-smart-table.js","./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.component.ts","./node_modules/ngx-pagination/__ivy_ngcc__/dist/ngx-pagination.js","./src/app/helpers/table-filter.pipe.ts","./src/app/pages/modules-list/modules-list.component.html","./src/app/pages/modules-list/modules-list.component.ts","./src/app/pages/roles/roles.component.html","./src/app/pages/roles/roles.component.ts","./src/app/pages/branches/branches.component.html","./src/app/pages/branches/branches.component.ts","./src/app/helpers/table-smart-filter.pipe.ts","./src/app/pages/users/users.component.html","./src/app/pages/users/users.component.ts","./src/app/services/prices/prices.service.ts","./src/app/pages/countries/countries.component.html","./src/app/pages/countries/countries.component.ts","./src/app/pages/carriers/carriers.component.html","./src/app/pages/carriers/carriers.component.ts","./src/app/pages/carrier-zones/carrier-zones.component.html","./src/app/pages/carrier-zones/carrier-zones.component.ts","./src/app/pages/prices/prices.component.html","./src/app/pages/prices/prices.component.ts","./src/app/pages/commodity-list/commodity-list.component.html","./src/app/pages/commodity-list/commodity-list.component.ts","./src/app/helpers/trim-string.directive.ts","./src/app/helpers/numbers-only.directive.ts","./src/app/helpers/capital-string.directive.ts","./src/app/pages/add-shipments/add-shipments.component.html","./src/app/pages/add-shipments/add-shipments.component.ts","./src/app/pages/empty-tracking-shipments/empty-tracking-shipments.component.html","./src/app/pages/empty-tracking-shipments/empty-tracking-shipments.component.ts","./src/app/pages/shipments-list/shipments-list.component.html","./src/app/pages/shipments-list/shipments-list.component.ts","./src/app/pages/update-shipments/update-shipments.component.html","./src/app/pages/update-shipments/update-shipments.component.ts","./src/app/pages/view-shipment-details/view-shipment-details.component.html","./src/app/pages/view-shipment-details/view-shipment-details.component.ts","./src/app/helpers/confirmed.validator.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/settings/settings.component.ts","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/pages/access-denied/access-denied.component.ts","./src/app/pages/access-denied/access-denied.component.html","./src/app/pages/bank-transactions/bank-transactions.component.html","./src/app/pages/bank-transactions/bank-transactions.component.ts","./src/app/pages/branch-payment-details/branch-payment-details.component.html","./src/app/pages/branch-payment-details/branch-payment-details.component.ts","./src/app/pages/manage-branch-commissions/manage-branch-commissions.component.html","./src/app/pages/manage-branch-commissions/manage-branch-commissions.component.ts","./src/app/pages/branch-commission-payments/branch-commission-payments.component.html","./src/app/pages/branch-commission-payments/branch-commission-payments.component.ts","./src/app/pages/expenses/expenses.component.html","./src/app/pages/expenses/expenses.component.ts","./src/app/pages/stock-purchases/stock-purchases.component.html","./src/app/pages/stock-purchases/stock-purchases.component.ts","./src/app/pages/stock-requests/stock-requests.component.html","./src/app/pages/stock-requests/stock-requests.component.ts","./src/app/pages/stock-availability/stock-availability.component.ts","./src/app/pages/stock-availability/stock-availability.component.html","./src/app/pages/branch-stock-availability/branch-stock-availability.component.html","./src/app/pages/branch-stock-availability/branch-stock-availability.component.ts","./src/app/pages/used-stock/used-stock.component.html","./src/app/pages/used-stock/used-stock.component.ts","./src/app/pages/salaries/salaries.component.html","./src/app/pages/salaries/salaries.component.ts","./node_modules/@tinymce/tinymce-angular/fesm2015/tinymce-tinymce-angular.mjs","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./src/app/helpers/safe-html.pipe.ts","./src/app/pages/complaints/complaints.component.html","./src/app/pages/complaints/complaints.component.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./node_modules/html-entities/lib/index.js","./node_modules/html-entities/lib/named-references.js","./node_modules/html-entities/lib/numeric-unicode-map.js","./node_modules/html-entities/lib/surrogate-pairs.js"],"sourcesContent":["var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport default function getWeekYear(dirtyDate, options) {\n  var _options$locale, _options$locale$optio;\n\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var localeFirstWeekContainsDate = options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = (options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from \"../getWeekYear/index.js\";\nimport startOfWeek from \"../startOfWeek/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport startOfWeekYear from \"../startOfWeekYear/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import * as i0 from '@angular/core';\nimport { LOCALE_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { NbNativeDateService, NB_DATE_SERVICE_OPTIONS, NbDateService } from '@nebular/theme';\nimport parse from 'date-fns/parse';\nimport formatDate from 'date-fns/format';\nimport getWeek from 'date-fns/getWeek';\n\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbDateFnsDateService extends NbNativeDateService {\n    constructor(locale, options) {\n        super(locale);\n        this.options = options || {};\n    }\n    format(date, format) {\n        if (date) {\n            return formatDate(date, format || this.options.format, this.options.formatOptions);\n        }\n        return '';\n    }\n    parse(date, format) {\n        return parse(date, format || this.options.format, new Date(), this.options.parseOptions);\n    }\n    getId() {\n        return 'date-fns';\n    }\n    getWeekNumber(date) {\n        return getWeek(date, this.options.getWeekOptions);\n    }\n    getDateFormat() {\n        return 'YYYY-MM-dd';\n    }\n}\nNbDateFnsDateService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateService, deps: [{ token: LOCALE_ID }, { token: NB_DATE_SERVICE_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNbDateFnsDateService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [LOCALE_ID]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NB_DATE_SERVICE_OPTIONS]\n                    }] }];\n    } });\n\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nconst dateFnsServiceProvider = { provide: NbDateService, useClass: NbDateFnsDateService };\nclass NbDateFnsDateModule {\n    static forRoot(options) {\n        return {\n            ngModule: NbDateFnsDateModule,\n            providers: [\n                dateFnsServiceProvider,\n                { provide: NB_DATE_SERVICE_OPTIONS, useValue: options },\n            ],\n        };\n    }\n    static forChild(options) {\n        return {\n            ngModule: NbDateFnsDateModule,\n            providers: [\n                dateFnsServiceProvider,\n                { provide: NB_DATE_SERVICE_OPTIONS, useValue: options },\n            ],\n        };\n    }\n}\nNbDateFnsDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNbDateFnsDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateModule });\nNbDateFnsDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateModule, providers: [dateFnsServiceProvider] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDateFnsDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [dateFnsServiceProvider],\n                }]\n        }] });\n\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NbDateFnsDateModule, NbDateFnsDateService };\n","/**\n * @license ng2-completer\n * MIT license\n */\nimport { EventEmitter, Injectable, Output, Directive, HostListener, Host, ElementRef, NgZone, Input, TemplateRef, ViewContainerRef, ChangeDetectorRef, Renderer2, Component, forwardRef, ViewChild, NgModule } from '@angular/core';\nimport { Subject, Observable, timer } from 'rxjs';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { HttpClient } from '@angular/common/http';\nimport { NgModel, NG_VALUE_ACCESSOR, FormControl, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/common';\n\nfunction CompleterListItemCmp_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", part_r1.isMatch ? ctx_r0.matchClass : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1.text);\n} }\nconst _c0 = function (a0, a1) { return { \"completer-title\": a0, \"completer-description\": a1 }; };\nconst _c1 = [\"ctrInput\"];\nfunction CompleterCmp_div_3_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._textSearching);\n} }\nfunction CompleterCmp_div_3_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8._textNoResults);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 21);\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", item_r10.image, ɵngcc0.ɵɵsanitizeUrl);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 22);\n} }\nfunction CompleterCmp_div_3_div_1_div_3_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_3_div_2_img_1_Template, 1, 1, \"img\", 19);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_div_2_Template, 1, 0, \"div\", 20);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image != \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image === \"\");\n} }\nfunction CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"completer-list-item\", 23);\n} if (rf & 2) {\n    const item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.description)(\"matchClass\", ctx_r13.matchClass)(\"searchStr\", ctx_r13.searchStr)(\"type\", \"description\");\n} }\nconst _c2 = function (a0) { return { \"completer-item-text-image\": a0 }; };\nfunction CompleterCmp_div_3_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_3_div_2_Template, 3, 2, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 15);\n    ɵngcc0.ɵɵelement(4, \"completer-list-item\", 16);\n    ɵngcc0.ɵɵtemplate(5, CompleterCmp_div_3_div_1_div_3_completer_list_item_5_Template, 1, 4, \"completer-list-item\", 17);\n    ɵngcc0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    const rowIndex_r11 = ctx.index;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ctrRow\", rowIndex_r11)(\"dataItem\", item_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.image || item_r10.image === \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c2, item_r10.image || item_r10.image === \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"text\", item_r10.title)(\"matchClass\", ctx_r9.matchClass)(\"searchStr\", ctx_r9.searchStr)(\"type\", \"title\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r10.description && item_r10.description != \"\");\n} }\nfunction CompleterCmp_div_3_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_div_1_Template, 2, 1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, CompleterCmp_div_3_div_1_div_2_Template, 2, 1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_div_1_div_3_Template, 6, 11, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    const searchActive_r3 = ctx_r19.searching;\n    const items_r2 = ctx_r19.results;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", searchActive_r3 && ctx_r6.displaySearching);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !searchActive_r3 && (!items_r2 || (items_r2 == null ? null : items_r2.length) === 0));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", items_r2);\n} }\nfunction CompleterCmp_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, CompleterCmp_div_3_div_1_Template, 4, 3, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const items_r2 = ctx.results;\n    const searchActive_r3 = ctx.searching;\n    const isInitialized_r4 = ctx.searchInitialized;\n    const isOpen_r5 = ctx.isOpen;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", isInitialized_r4 && isOpen_r5 && ((items_r2 == null ? null : items_r2.length) > 0 || ctx_r1.displayNoResults && !searchActive_r3 || searchActive_r3 && ctx_r1.displaySearching));\n} }\nconst MAX_CHARS = 524288; // the default max length per the html maxlength attribute\nconst MIN_SEARCH_LENGTH = 3;\nconst PAUSE = 10;\nconst TEXT_SEARCHING = \"Searching...\";\nconst TEXT_NO_RESULTS = \"No results found\";\nconst CLEAR_TIMEOUT = 50;\nfunction isNil(value) {\n    return typeof value === \"undefined\" || value === null;\n}\n\nclass CompleterBaseData extends Subject {\n    constructor() {\n        super();\n        this._searchFields = null;\n        this._titleField = null;\n        this._descriptionField = undefined;\n        this._imageField = undefined;\n    }\n    cancel() {\n        return;\n    }\n    searchFields(searchFields) {\n        this._searchFields = searchFields;\n        return this;\n    }\n    titleField(titleField) {\n        this._titleField = titleField;\n        return this;\n    }\n    descriptionField(descriptionField) {\n        this._descriptionField = descriptionField;\n        return this;\n    }\n    imageField(imageField) {\n        this._imageField = imageField;\n        return this;\n    }\n    convertToItem(data) {\n        let image = null;\n        let formattedText;\n        let formattedDesc = null;\n        if (this._titleField) {\n            formattedText = this.extractTitle(data);\n        }\n        else {\n            formattedText = data;\n        }\n        if (typeof formattedText !== \"string\") {\n            formattedText = JSON.stringify(formattedText);\n        }\n        if (this._descriptionField) {\n            formattedDesc = this.extractValue(data, this._descriptionField);\n        }\n        if (this._imageField) {\n            image = this.extractValue(data, this._imageField);\n        }\n        if (isNil(formattedText)) {\n            return null;\n        }\n        return {\n            description: formattedDesc,\n            image,\n            originalObject: data,\n            title: formattedText\n        };\n    }\n    extractMatches(data, term) {\n        let matches = [];\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n            matches = data.filter((item) => {\n                const values = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\n                return values.some((value) => value\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(term.toString().toLowerCase()) >= 0);\n            });\n        }\n        else {\n            matches = data;\n        }\n        return matches;\n    }\n    extractTitle(item) {\n        // split title fields and run extractValue for each and join with ' '\n        if (!this._titleField) {\n            return \"\";\n        }\n        return this._titleField.split(\",\")\n            .map((field) => {\n            return this.extractValue(item, field);\n        })\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n    }\n    extractValue(obj, key) {\n        let keys;\n        let result;\n        if (key) {\n            keys = key.split(\".\");\n            result = obj;\n            for (key of keys) {\n                if (result) {\n                    result = result[key];\n                }\n            }\n        }\n        else {\n            result = obj;\n        }\n        return result;\n    }\n    processResults(matches) {\n        let i;\n        const results = [];\n        if (matches && matches.length > 0) {\n            for (i = 0; i < matches.length; i++) {\n                const item = this.convertToItem(matches[i]);\n                if (item) {\n                    results.push(item);\n                }\n            }\n        }\n        return results;\n    }\n    extractBySearchFields(searchFields, item) {\n        return searchFields\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\n    }\n}\n\nclass LocalData extends CompleterBaseData {\n    constructor() {\n        super();\n        this.dataSourceChange = new EventEmitter();\n        this._data = [];\n        this.savedTerm = null;\n    }\n    data(data) {\n        if (data instanceof Observable) {\n            const data$ = data;\n            data$\n                .pipe(catchError(() => []))\n                .subscribe((res) => {\n                this._data = res;\n                if (this.savedTerm) {\n                    this.search(this.savedTerm);\n                }\n                this.dataSourceChange.emit();\n            });\n        }\n        else {\n            this._data = data;\n        }\n        this.dataSourceChange.emit();\n        return this;\n    }\n    search(term) {\n        if (!this._data) {\n            this.savedTerm = term;\n        }\n        else {\n            this.savedTerm = null;\n            const matches = this.extractMatches(this._data, term);\n            this.next(this.processResults(matches));\n        }\n    }\n    convertToItem(data) {\n        return super.convertToItem(data);\n    }\n}\n\nclass RemoteData extends CompleterBaseData {\n    constructor(http) {\n        super();\n        this.http = http;\n        this.dataSourceChange = new EventEmitter();\n        this._remoteUrl = null;\n        this.remoteSearch = null;\n        this._urlFormater = null;\n        this._dataField = null;\n    }\n    remoteUrl(remoteUrl) {\n        this._remoteUrl = remoteUrl;\n        this.dataSourceChange.emit();\n        return this;\n    }\n    urlFormater(urlFormater) {\n        this._urlFormater = urlFormater;\n    }\n    dataField(dataField) {\n        this._dataField = dataField;\n    }\n    requestOptions(requestOptions) {\n        this._requestOptions = requestOptions;\n    }\n    search(term) {\n        this.cancel();\n        // let params = {};\n        let url = \"\";\n        if (this._urlFormater) {\n            url = this._urlFormater(term);\n        }\n        else {\n            url = this._remoteUrl + encodeURIComponent(term);\n        }\n        this.remoteSearch = this.http\n            .get(url, Object.assign({}, this._requestOptions))\n            .pipe(map((data) => {\n            const matches = this.extractValue(data, this._dataField);\n            return this.extractMatches(matches, term);\n        }), catchError(() => []))\n            .subscribe((matches) => {\n            const results = this.processResults(matches);\n            this.next(results);\n        });\n    }\n    cancel() {\n        if (this.remoteSearch) {\n            this.remoteSearch.unsubscribe();\n        }\n    }\n    convertToItem(data) {\n        return super.convertToItem(data);\n    }\n}\n\nlet LocalDataFactory = class LocalDataFactory {\n    create() {\n        return new LocalData();\n    }\n};\nLocalDataFactory.ɵfac = function LocalDataFactory_Factory(t) { return new (t || LocalDataFactory)(); };\nLocalDataFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LocalDataFactory, factory: function (t) { return LocalDataFactory.ɵfac(t); } });\n\nlet RemoteDataFactory = class RemoteDataFactory {\n    constructor(http) {\n        this.http = http;\n    }\n    create() {\n        return new RemoteData(this.http);\n    }\n};\nRemoteDataFactory.ɵfac = function RemoteDataFactory_Factory(t) { return new (t || RemoteDataFactory)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\nRemoteDataFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RemoteDataFactory, factory: function (t) { return RemoteDataFactory.ɵfac(t); } });\nRemoteDataFactory = __decorate([ __metadata(\"design:paramtypes\", [HttpClient])\n], RemoteDataFactory);\n\nlet CompleterService = class CompleterService {\n    constructor(localDataFactory, // Using any instead of () => LocalData because of AoT errors\n    remoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ) {\n        this.localDataFactory = localDataFactory;\n        this.remoteDataFactory = remoteDataFactory;\n    }\n    local(data, searchFields = \"\", titleField = \"\") {\n        const localData = this.localDataFactory.create();\n        return localData\n            .data(data)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n    remote(url, searchFields = \"\", titleField = \"\") {\n        const remoteData = this.remoteDataFactory.create();\n        return remoteData\n            .remoteUrl(url)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n};\nCompleterService.ɵfac = function CompleterService_Factory(t) { return new (t || CompleterService)(ɵngcc0.ɵɵinject(LocalDataFactory), ɵngcc0.ɵɵinject(RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n)); };\nCompleterService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CompleterService, factory: function (t) { return CompleterService.ɵfac(t); } });\nCompleterService = __decorate([ __metadata(\"design:paramtypes\", [LocalDataFactory,\n        RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ])\n], CompleterService);\n\nlet CtrCompleter = class CtrCompleter {\n    constructor() {\n        this.selected = new EventEmitter();\n        this.highlighted = new EventEmitter();\n        this.opened = new EventEmitter();\n        this.dataSourceChange = new EventEmitter();\n        this.list = null;\n        this.dropdown = null;\n        this._hasHighlighted = false;\n        this._hasSelected = false;\n        this._cancelBlur = false;\n        this._isOpen = false;\n        this._autoHighlightIndex = null;\n    }\n    registerList(list) {\n        this.list = list;\n    }\n    registerDropdown(dropdown) {\n        this.dropdown = dropdown;\n    }\n    onHighlighted(item) {\n        this.highlighted.emit(item);\n        this._hasHighlighted = !!item;\n    }\n    onSelected(item, clearList = true) {\n        this.selected.emit(item);\n        if (item) {\n            this._hasSelected = true;\n        }\n        if (clearList) {\n            this.clear();\n        }\n    }\n    onDataSourceChange() {\n        if (this.hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        this.dataSourceChange.emit();\n    }\n    search(term) {\n        if (this._hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        if (this.list) {\n            this.list.search(term);\n        }\n    }\n    clear() {\n        this._hasHighlighted = false;\n        this.isOpen = false;\n        if (this.dropdown) {\n            this.dropdown.clear();\n        }\n        if (this.list) {\n            this.list.clear();\n        }\n    }\n    selectCurrent() {\n        if (this.dropdown) {\n            this.dropdown.selectCurrent();\n        }\n    }\n    nextRow() {\n        if (this.dropdown) {\n            this.dropdown.nextRow();\n        }\n    }\n    prevRow() {\n        if (this.dropdown) {\n            this.dropdown.prevRow();\n        }\n    }\n    hasHighlighted() {\n        return this._hasHighlighted;\n    }\n    cancelBlur(cancel) {\n        this._cancelBlur = cancel;\n    }\n    isCancelBlur() {\n        return this._cancelBlur;\n    }\n    open() {\n        if (!this._isOpen && !!this.list) {\n            this.isOpen = true;\n            this.list.open();\n        }\n    }\n    get isOpen() {\n        return this._isOpen;\n    }\n    set isOpen(open) {\n        this._isOpen = open;\n        this.opened.emit(this._isOpen);\n        if (this.list) {\n            this.list.isOpen(open);\n        }\n    }\n    get autoHighlightIndex() {\n        return this._autoHighlightIndex;\n    }\n    set autoHighlightIndex(index) {\n        this._autoHighlightIndex = index;\n        if (this.dropdown) {\n            this.dropdown.highlightRow(this._autoHighlightIndex);\n        }\n    }\n    get hasSelected() {\n        return this._hasSelected;\n    }\n};\nCtrCompleter.ɵfac = function CtrCompleter_Factory(t) { return new (t || CtrCompleter)(); };\nCtrCompleter.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrCompleter, selectors: [[\"\", \"ctrCompleter\", \"\"]], outputs: { selected: \"selected\", highlighted: \"highlighted\", opened: \"opened\", dataSourceChange: \"dataSourceChange\" } });\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"highlighted\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"opened\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CtrCompleter.prototype, \"dataSourceChange\", void 0);\n\nclass CtrRowItem {\n    constructor(row, index) {\n        this.row = row;\n        this.index = index;\n    }\n}\nlet CtrDropdown = class CtrDropdown {\n    constructor(completer, el, zone) {\n        this.completer = completer;\n        this.el = el;\n        this.zone = zone;\n        this.rows = [];\n        this.isScrollOn = false;\n        this._rowMouseDown = false;\n        this.completer.registerDropdown(this);\n    }\n    ngOnDestroy() {\n        this.completer.registerDropdown(null);\n    }\n    ngAfterViewInit() {\n        const css = getComputedStyle(this.el.nativeElement);\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n        if (autoHighlightIndex) {\n            this.zone.run(() => {\n                this.highlightRow(autoHighlightIndex);\n            });\n        }\n    }\n    onMouseDown(event) {\n        // Support for canceling blur on IE (issue #158)\n        if (!this._rowMouseDown) {\n            this.completer.cancelBlur(true);\n            this.zone.run(() => {\n                this.completer.cancelBlur(false);\n            });\n        }\n        else {\n            this._rowMouseDown = false;\n        }\n    }\n    registerRow(row) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\n        if (arrIndex >= 0) {\n            this.rows[arrIndex] = row;\n        }\n        else {\n            this.rows.push(row);\n        }\n    }\n    unregisterRow(rowIndex) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\n        this.rows.splice(arrIndex, 1);\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n            this.highlightRow(null);\n        }\n    }\n    highlightRow(index) {\n        const highlighted = this.rows.find(row => row.index === index);\n        if (isNil(index) || index < 0) {\n            if (this.currHighlighted) {\n                this.currHighlighted.row.setHighlighted(false);\n            }\n            this.currHighlighted = undefined;\n            this.completer.onHighlighted(null);\n            return;\n        }\n        if (!highlighted) {\n            return;\n        }\n        if (this.currHighlighted) {\n            this.currHighlighted.row.setHighlighted(false);\n        }\n        this.currHighlighted = highlighted;\n        this.currHighlighted.row.setHighlighted(true);\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n        if (this.isScrollOn && this.currHighlighted) {\n            const rowTop = this.dropdownRowTop();\n            if (!rowTop) {\n                return;\n            }\n            if (rowTop < 0) {\n                this.dropdownScrollTopTo(rowTop - 1);\n            }\n            else {\n                const row = this.currHighlighted.row.getNativeElement();\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10)));\n                    }\n                }\n            }\n        }\n    }\n    clear() {\n        this.rows = [];\n    }\n    onSelected(item) {\n        this.completer.onSelected(item);\n    }\n    rowMouseDown() {\n        this._rowMouseDown = true;\n    }\n    selectCurrent() {\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\n            this.onSelected(this.currHighlighted.row.getDataItem());\n        }\n        else if (this.rows.length > 0) {\n            this.onSelected(this.rows[0].row.getDataItem());\n        }\n    }\n    nextRow() {\n        let nextRowIndex = 0;\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index + 1;\n        }\n        this.highlightRow(nextRowIndex);\n    }\n    prevRow() {\n        let nextRowIndex = -1;\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index - 1;\n        }\n        this.highlightRow(nextRowIndex);\n    }\n    dropdownScrollTopTo(offset) {\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n    }\n    dropdownRowTop() {\n        if (!this.currHighlighted) {\n            return;\n        }\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n            (this.el.nativeElement.getBoundingClientRect().top +\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop, 10));\n    }\n    dropdownHeight() {\n        return this.el.nativeElement.getBoundingClientRect().top +\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight, 10);\n    }\n    dropdownRowOffsetHeight(row) {\n        const css = getComputedStyle(row.parentElement);\n        return row.parentElement.offsetHeight +\n            parseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n    }\n};\nCtrDropdown.ɵfac = function CtrDropdown_Factory(t) { return new (t || CtrDropdown)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCtrDropdown.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrDropdown, selectors: [[\"\", \"ctrDropdown\", \"\"]], hostBindings: function CtrDropdown_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function CtrDropdown_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });\n    } } });\n__decorate([\n    HostListener(\"mousedown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrDropdown.prototype, \"onMouseDown\", null);\nCtrDropdown = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter, ElementRef, NgZone])\n], CtrDropdown);\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\nconst KEY_BK = 8;\nconst KEY_SH = 16;\nconst KEY_CL = 20;\nconst KEY_F1 = 112;\nconst KEY_F12 = 123;\nlet CtrInput = class CtrInput {\n    constructor(completer, ngModel, el) {\n        this.completer = completer;\n        this.ngModel = ngModel;\n        this.el = el;\n        this.clearSelected = false;\n        this.clearUnselected = false;\n        this.overrideSuggested = false;\n        this.fillHighlighted = true;\n        this.openOnFocus = false;\n        this.openOnClick = false;\n        this.selectOnClick = false;\n        this.selectOnFocus = false;\n        this.ngModelChange = new EventEmitter();\n        this._searchStr = \"\";\n        this._displayStr = \"\";\n        this.blurTimer = null;\n        this.completer.selected.subscribe((item) => {\n            if (!item) {\n                return;\n            }\n            if (this.clearSelected) {\n                this.searchStr = \"\";\n            }\n            else {\n                this.searchStr = item.title;\n            }\n            this.ngModelChange.emit(this.searchStr);\n        });\n        this.completer.highlighted.subscribe((item) => {\n            if (this.fillHighlighted) {\n                if (item) {\n                    this._displayStr = item.title;\n                    this.ngModelChange.emit(item.title);\n                }\n                else {\n                    this._displayStr = this.searchStr;\n                    this.ngModelChange.emit(this.searchStr);\n                }\n            }\n        });\n        this.completer.dataSourceChange.subscribe(() => {\n            this.completer.search(this.searchStr);\n        });\n        if (this.ngModel.valueChanges) {\n            this.ngModel.valueChanges.subscribe((value) => {\n                if (!isNil(value) && this._displayStr !== value) {\n                    if (this.searchStr !== value) {\n                        this.completer.search(value);\n                    }\n                    this.searchStr = value;\n                }\n            });\n        }\n    }\n    keyupHandler(event) {\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n            // do nothing\n            return;\n        }\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n            event.preventDefault();\n        }\n        else if (event.keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.search(this.searchStr);\n        }\n        else if (event.keyCode === KEY_ES) {\n            if (this.completer.isOpen) {\n                this.restoreSearchValue();\n                this.completer.clear();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n    pasteHandler(event) {\n        this.completer.open();\n    }\n    keydownHandler(event) {\n        const keyCode = event.keyCode || event.which;\n        if (keyCode === KEY_EN) {\n            if (this.completer.hasHighlighted()) {\n                event.preventDefault();\n            }\n            this.handleSelection();\n        }\n        else if (keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.open();\n            this.completer.nextRow();\n        }\n        else if (keyCode === KEY_UP) {\n            event.preventDefault();\n            this.completer.prevRow();\n        }\n        else if (keyCode === KEY_TAB) {\n            this.handleSelection();\n        }\n        else if (keyCode === KEY_BK) {\n            this.completer.open();\n        }\n        else if (keyCode === KEY_ES) {\n            // This is very specific to IE10/11 #272\n            // without this, IE clears the input text\n            event.preventDefault();\n            if (this.completer.isOpen) {\n                event.stopPropagation();\n            }\n        }\n        else {\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\n                !event.ctrlKey && !event.metaKey && !event.altKey) {\n                this.completer.open();\n            }\n        }\n    }\n    onBlur(event) {\n        // Check if we need to cancel Blur for IE\n        if (this.completer.isCancelBlur()) {\n            setTimeout(() => {\n                // get the focus back\n                this.el.nativeElement.focus();\n            }, 0);\n            return;\n        }\n        if (this.completer.isOpen) {\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\n        }\n    }\n    onfocus() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n        if (this.selectOnFocus) {\n            this.el.nativeElement.select();\n        }\n        if (this.openOnFocus) {\n            this.completer.open();\n        }\n    }\n    onClick(event) {\n        if (this.selectOnClick) {\n            this.el.nativeElement.select();\n        }\n        if (this.openOnClick) {\n            if (this.completer.isOpen) {\n                this.completer.clear();\n            }\n            else {\n                this.completer.open();\n            }\n        }\n    }\n    get searchStr() {\n        return this._searchStr;\n    }\n    set searchStr(term) {\n        this._searchStr = term;\n        this._displayStr = term;\n    }\n    handleSelection() {\n        if (this.completer.hasHighlighted()) {\n            this._searchStr = \"\";\n            this.completer.selectCurrent();\n        }\n        else if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        }\n        else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            this.completer.clear();\n        }\n    }\n    restoreSearchValue() {\n        if (this.fillHighlighted) {\n            if (this._displayStr !== this.searchStr) {\n                this._displayStr = this.searchStr;\n                this.ngModelChange.emit(this.searchStr);\n            }\n        }\n    }\n    doBlur() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n        if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        }\n        else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            else {\n                this.restoreSearchValue();\n            }\n        }\n        this.completer.clear();\n    }\n};\nCtrInput.ɵfac = function CtrInput_Factory(t) { return new (t || CtrInput)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCtrInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrInput, selectors: [[\"\", \"ctrInput\", \"\"]], hostBindings: function CtrInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup\", function CtrInput_keyup_HostBindingHandler($event) { return ctx.keyupHandler($event); })(\"paste\", function CtrInput_paste_HostBindingHandler($event) { return ctx.pasteHandler($event); })(\"keydown\", function CtrInput_keydown_HostBindingHandler($event) { return ctx.keydownHandler($event); })(\"blur\", function CtrInput_blur_HostBindingHandler($event) { return ctx.onBlur($event); })(\"focus\", function CtrInput_focus_HostBindingHandler() { return ctx.onfocus(); })(\"click\", function CtrInput_click_HostBindingHandler($event) { return ctx.onClick($event); });\n    } }, inputs: { clearSelected: \"clearSelected\", clearUnselected: \"clearUnselected\", overrideSuggested: \"overrideSuggested\", fillHighlighted: \"fillHighlighted\", openOnFocus: \"openOnFocus\", openOnClick: \"openOnClick\", selectOnClick: \"selectOnClick\", selectOnFocus: \"selectOnFocus\" }, outputs: { ngModelChange: \"ngModelChange\" } });\n__decorate([\n    Input(\"clearSelected\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"clearSelected\", void 0);\n__decorate([\n    Input(\"clearUnselected\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"clearUnselected\", void 0);\n__decorate([\n    Input(\"overrideSuggested\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"overrideSuggested\", void 0);\n__decorate([\n    Input(\"fillHighlighted\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"fillHighlighted\", void 0);\n__decorate([\n    Input(\"openOnFocus\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"openOnFocus\", void 0);\n__decorate([\n    Input(\"openOnClick\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"openOnClick\", void 0);\n__decorate([\n    Input(\"selectOnClick\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"selectOnClick\", void 0);\n__decorate([\n    Input(\"selectOnFocus\"),\n    __metadata(\"design:type\", Object)\n], CtrInput.prototype, \"selectOnFocus\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CtrInput.prototype, \"ngModelChange\", void 0);\n__decorate([\n    HostListener(\"keyup\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"keyupHandler\", null);\n__decorate([\n    HostListener(\"paste\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"pasteHandler\", null);\n__decorate([\n    HostListener(\"keydown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"keydownHandler\", null);\n__decorate([\n    HostListener(\"blur\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onBlur\", null);\n__decorate([\n    HostListener(\"focus\", []),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onfocus\", null);\n__decorate([\n    HostListener(\"click\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrInput.prototype, \"onClick\", null);\nCtrInput = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter, NgModel, ElementRef])\n], CtrInput);\n\nclass CtrListContext {\n    constructor(results, searching, searchInitialized, isOpen) {\n        this.results = results;\n        this.searching = searching;\n        this.searchInitialized = searchInitialized;\n        this.isOpen = isOpen;\n    }\n}\nlet CtrList = class CtrList {\n    constructor(completer, templateRef, viewContainer, cd, zone) {\n        this.completer = completer;\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.zone = zone;\n        this.ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n        this.ctrListPause = PAUSE;\n        this.ctrListAutoMatch = false;\n        this.ctrListAutoHighlight = false;\n        this.ctrListDisplaySearching = true;\n        this._dataService = null;\n        // private results: CompleterItem[] = [];\n        this.term = null;\n        // private searching = false;\n        this.searchTimer = null;\n        this.clearTimer = null;\n        this.ctx = new CtrListContext([], false, false, false);\n        this._initialValue = null;\n        this.viewRef = null;\n    }\n    ngOnInit() {\n        this.completer.registerList(this);\n        this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, new CtrListContext([], false, false, false));\n    }\n    set dataService(newService) {\n        this._dataService = newService;\n        this.dataServiceSubscribe();\n    }\n    set initialValue(value) {\n        if (this._dataService &&\n            typeof this._dataService.convertToItem === \"function\") {\n            this.zone.run(() => {\n                const initialItem = this._dataService && this._dataService.convertToItem(value);\n                if (initialItem) {\n                    this.completer.onSelected(initialItem, false);\n                }\n            });\n        }\n        else if (!this._dataService) {\n            this._initialValue = value;\n        }\n    }\n    search(term) {\n        if (!isNil(term) &&\n            term.length >= this.ctrListMinSearchLength &&\n            this.term !== term) {\n            if (this.searchTimer) {\n                this.searchTimer.unsubscribe();\n                this.searchTimer = null;\n            }\n            if (!this.ctx.searching) {\n                if (this.ctrListDisplaySearching) {\n                    this.ctx.results = [];\n                }\n                this.ctx.searching = true;\n                this.ctx.searchInitialized = true;\n                this.refreshTemplate();\n            }\n            if (this.clearTimer) {\n                this.clearTimer.unsubscribe();\n            }\n            this.searchTimer = timer(this.ctrListPause)\n                .pipe(take(1))\n                .subscribe(() => {\n                this.searchTimerComplete(term);\n            });\n        }\n        else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n            this.clear();\n            this.term = \"\";\n        }\n    }\n    clear() {\n        if (this.searchTimer) {\n            this.searchTimer.unsubscribe();\n        }\n        this.clearTimer = timer(CLEAR_TIMEOUT)\n            .pipe(take(1))\n            .subscribe(() => {\n            this._clear();\n        });\n    }\n    open() {\n        if (!this.ctx.searchInitialized) {\n            this.search(\"\");\n        }\n        this.refreshTemplate();\n    }\n    isOpen(open) {\n        this.ctx.isOpen = open;\n    }\n    _clear() {\n        if (this.searchTimer) {\n            this.searchTimer.unsubscribe();\n            this.searchTimer = null;\n        }\n        if (this.dataService) {\n            this.dataService.cancel();\n        }\n        this.viewContainer.clear();\n        this.viewRef = null;\n    }\n    searchTimerComplete(term) {\n        // Begin the search\n        if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n            this.ctx.searching = false;\n            return;\n        }\n        this.term = term;\n        if (this._dataService) {\n            this._dataService.search(term);\n        }\n    }\n    refreshTemplate() {\n        // create the template if it doesn't exist\n        if (!this.viewRef) {\n            this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef, this.ctx);\n        }\n        else if (!this.viewRef.destroyed) {\n            // refresh the template\n            this.viewRef.context.isOpen = this.ctx.isOpen;\n            this.viewRef.context.results = this.ctx.results;\n            this.viewRef.context.searching = this.ctx.searching;\n            this.viewRef.context.searchInitialized = this.ctx.searchInitialized;\n            this.viewRef.detectChanges();\n        }\n        this.cd.markForCheck();\n    }\n    getBestMatchIndex() {\n        if (!this.ctx.results || !this.term) {\n            return null;\n        }\n        // First try to find the exact term\n        let bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase() === this.term.toLocaleLowerCase());\n        // If not try to find the first item that starts with the term\n        if (bestMatch < 0) {\n            bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase().startsWith(this.term.toLocaleLowerCase()));\n        }\n        // If not try to find the first item that includes the term\n        if (bestMatch < 0) {\n            bestMatch = this.ctx.results.findIndex((item) => item.title.toLowerCase().includes(this.term.toLocaleLowerCase()));\n        }\n        return bestMatch < 0 ? null : bestMatch;\n    }\n    dataServiceSubscribe() {\n        if (this._dataService) {\n            this._dataService.subscribe((results) => {\n                this.ctx.searchInitialized = true;\n                this.ctx.searching = false;\n                this.ctx.results = results;\n                if (this.ctrListAutoMatch &&\n                    results &&\n                    results.length === 1 &&\n                    results[0].title &&\n                    !isNil(this.term) &&\n                    results[0].title.toLocaleLowerCase() ===\n                        this.term.toLocaleLowerCase()) {\n                    // Do automatch\n                    this.completer.onSelected(results[0]);\n                    return;\n                }\n                this.refreshTemplate();\n                if (this.ctrListAutoHighlight) {\n                    this.completer.autoHighlightIndex = this.getBestMatchIndex();\n                }\n            }, (error) => {\n                // tslint:disable-next-line:no-console\n                console.error(error);\n                // tslint:disable-next-line:no-console\n                console.error(\"Unexpected error in dataService: errors should be handled by the dataService Observable\");\n                return [];\n            });\n            if (this._dataService.dataSourceChange) {\n                this._dataService.dataSourceChange.subscribe(() => {\n                    this.term = null;\n                    this.ctx.searchInitialized = false;\n                    this.ctx.searching = false;\n                    this.ctx.results = [];\n                    this.refreshTemplate();\n                    this.completer.onDataSourceChange();\n                });\n            }\n        }\n    }\n};\nCtrList.ɵfac = function CtrList_Factory(t) { return new (t || CtrList)(ɵngcc0.ɵɵdirectiveInject(CtrCompleter, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCtrList.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrList, selectors: [[\"\", \"ctrList\", \"\"]], inputs: { ctrListMinSearchLength: \"ctrListMinSearchLength\", ctrListPause: \"ctrListPause\", ctrListAutoMatch: \"ctrListAutoMatch\", ctrListAutoHighlight: \"ctrListAutoHighlight\", ctrListDisplaySearching: \"ctrListDisplaySearching\", dataService: [\"ctrList\", \"dataService\"], initialValue: [\"ctrListInitialValue\", \"initialValue\"] } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListMinSearchLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListPause\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListAutoMatch\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListAutoHighlight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CtrList.prototype, \"ctrListDisplaySearching\", void 0);\n__decorate([\n    Input(\"ctrList\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrList.prototype, \"dataService\", null);\n__decorate([\n    Input(\"ctrListInitialValue\"),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrList.prototype, \"initialValue\", null);\nCtrList = __decorate([ __param(0, Host()),\n    __metadata(\"design:paramtypes\", [CtrCompleter,\n        TemplateRef,\n        ViewContainerRef,\n        ChangeDetectorRef,\n        NgZone])\n], CtrList);\n\nlet CtrRow = class CtrRow {\n    constructor(el, renderer, dropdown) {\n        this.el = el;\n        this.renderer = renderer;\n        this.dropdown = dropdown;\n        this.selected = false;\n        this._rowIndex = 0;\n        this._item = null;\n    }\n    ngOnDestroy() {\n        if (this._rowIndex) {\n            this.dropdown.unregisterRow(this._rowIndex);\n        }\n    }\n    set ctrRow(index) {\n        this._rowIndex = index;\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n    }\n    set dataItem(item) {\n        this._item = item;\n    }\n    onClick(event) {\n        this.dropdown.onSelected(this._item);\n    }\n    onMouseEnter(event) {\n        this.dropdown.highlightRow(this._rowIndex);\n    }\n    onMouseDown(event) {\n        this.dropdown.rowMouseDown();\n    }\n    setHighlighted(selected) {\n        this.selected = selected;\n        if (this.selected) {\n            this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n        else {\n            this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n    }\n    getNativeElement() {\n        return this.el.nativeElement;\n    }\n    getDataItem() {\n        return this._item;\n    }\n};\nCtrRow.ɵfac = function CtrRow_Factory(t) { return new (t || CtrRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(CtrDropdown, 1)); };\nCtrRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CtrRow, selectors: [[\"\", \"ctrRow\", \"\"]], hostBindings: function CtrRow_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CtrRow_click_HostBindingHandler($event) { return ctx.onClick($event); })(\"mouseenter\", function CtrRow_mouseenter_HostBindingHandler($event) { return ctx.onMouseEnter($event); })(\"mousedown\", function CtrRow_mousedown_HostBindingHandler($event) { return ctx.onMouseDown($event); });\n    } }, inputs: { ctrRow: \"ctrRow\", dataItem: \"dataItem\" } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], CtrRow.prototype, \"ctrRow\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CtrRow.prototype, \"dataItem\", null);\n__decorate([\n    HostListener(\"click\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onClick\", null);\n__decorate([\n    HostListener(\"mouseenter\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onMouseEnter\", null);\n__decorate([\n    HostListener(\"mousedown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], CtrRow.prototype, \"onMouseDown\", null);\nCtrRow = __decorate([ __param(2, Host()),\n    __metadata(\"design:paramtypes\", [ElementRef, Renderer2, CtrDropdown])\n], CtrRow);\n\nlet CompleterListItemCmp = class CompleterListItemCmp {\n    constructor() {\n        this.text = \"\";\n        this.searchStr = \"\";\n        this.matchClass = \"\";\n        this.type = \"\";\n        this.parts = [];\n    }\n    ngOnInit() {\n        if (!this.searchStr) {\n            this.parts.push({ isMatch: false, text: this.text });\n            return;\n        }\n        const matchStr = this.text.toLowerCase();\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n        let startIndex = 0;\n        while (matchPos >= 0) {\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n            if (matchPos === 0) {\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length;\n            }\n            else if (matchPos > 0) {\n                const matchPart = this.text.slice(startIndex, matchPos);\n                this.parts.push({ isMatch: false, text: matchPart });\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length + matchPart.length;\n            }\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n        }\n        if (startIndex < this.text.length) {\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n        }\n    }\n};\nCompleterListItemCmp.ɵfac = function CompleterListItemCmp_Factory(t) { return new (t || CompleterListItemCmp)(); };\nCompleterListItemCmp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterListItemCmp, selectors: [[\"completer-list-item\"]], inputs: { text: \"text\", searchStr: \"searchStr\", matchClass: \"matchClass\", type: \"type\" }, decls: 2, vars: 5, consts: [[1, \"completer-list-item-holder\", 3, \"ngClass\"], [\"class\", \"completer-list-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-list-item\", 3, \"ngClass\"]], template: function CompleterListItemCmp_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, CompleterListItemCmp_span_1_Template, 2, 2, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx.type === \"title\", ctx.type === \"description\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgForOf], encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"text\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"searchStr\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"matchClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterListItemCmp.prototype, \"type\", void 0);\n\nconst noop = () => {\n    return;\n};\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CompleterCmp),\n};\nlet CompleterCmp = class CompleterCmp {\n    constructor(completerService, cdr) {\n        this.completerService = completerService;\n        this.cdr = cdr;\n        this.inputName = \"\";\n        this.inputId = \"\";\n        this.pause = PAUSE;\n        this.minSearchLength = MIN_SEARCH_LENGTH;\n        this.maxChars = MAX_CHARS;\n        this.overrideSuggested = false;\n        this.clearSelected = false;\n        this.clearUnselected = false;\n        this.fillHighlighted = true;\n        this.placeholder = \"\";\n        this.autoMatch = false;\n        this.disableInput = false;\n        this.autofocus = false;\n        this.openOnFocus = false;\n        this.openOnClick = false;\n        this.selectOnClick = false;\n        this.selectOnFocus = false;\n        this.autoHighlight = false;\n        this.selected = new EventEmitter();\n        this.highlighted = new EventEmitter();\n        this.blurEvent = new EventEmitter();\n        this.click = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.opened = new EventEmitter();\n        this.keyup = new EventEmitter();\n        this.keydown = new EventEmitter();\n        this.control = new FormControl(\"\");\n        this.displaySearching = true;\n        this.displayNoResults = true;\n        this._textNoResults = TEXT_NO_RESULTS;\n        this._textSearching = TEXT_SEARCHING;\n        this._onTouchedCallback = noop;\n        this._onChangeCallback = noop;\n        this._focus = false;\n        this._open = false;\n        this._searchStr = \"\";\n    }\n    get value() { return this.searchStr; }\n    ;\n    set value(v) {\n        if (v !== this.searchStr) {\n            this.searchStr = v;\n        }\n        // Propagate the change in any case\n        this._onChangeCallback(v);\n    }\n    get searchStr() {\n        return this._searchStr;\n    }\n    set searchStr(value) {\n        if (typeof value === \"string\" || isNil(value)) {\n            this._searchStr = value;\n        }\n        else {\n            this._searchStr = JSON.stringify(value);\n        }\n    }\n    ngAfterViewInit() {\n        if (this.autofocus) {\n            this._focus = true;\n        }\n        if (!this.completer) {\n            return;\n        }\n        this.completer.selected.subscribe((item) => {\n            this.selected.emit(item);\n        });\n        this.completer.highlighted.subscribe((item) => {\n            this.highlighted.emit(item);\n        });\n        this.completer.opened.subscribe((isOpen) => {\n            this._open = isOpen;\n            this.opened.emit(isOpen);\n        });\n    }\n    ngAfterViewChecked() {\n        if (this._focus) {\n            setTimeout(() => {\n                if (!!this.ctrInput) {\n                    this.ctrInput.nativeElement.focus();\n                    this._focus = false;\n                }\n            }, 0);\n        }\n    }\n    onTouched() {\n        this._onTouchedCallback();\n    }\n    writeValue(value) {\n        this.searchStr = value;\n    }\n    registerOnChange(fn) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disableInput = isDisabled;\n    }\n    set datasource(source) {\n        if (source) {\n            if (source instanceof Array) {\n                this.dataService = this.completerService.local(source);\n            }\n            else if (typeof (source) === \"string\") {\n                this.dataService = this.completerService.remote(source);\n            }\n            else {\n                this.dataService = source;\n            }\n        }\n    }\n    set textNoResults(text) {\n        if (this._textNoResults !== text) {\n            this._textNoResults = text;\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n        }\n    }\n    set textSearching(text) {\n        if (this._textSearching !== text) {\n            this._textSearching = text;\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n        }\n    }\n    onBlur() {\n        this.blurEvent.emit();\n        this.onTouched();\n        this.cdr.detectChanges();\n    }\n    onFocus() {\n        this.focusEvent.emit();\n        this.onTouched();\n    }\n    onClick(event) {\n        this.click.emit(event);\n        this.onTouched();\n    }\n    onKeyup(event) {\n        this.keyup.emit(event);\n        event.stopPropagation();\n    }\n    onKeydown(event) {\n        this.keydown.emit(event);\n        event.stopPropagation();\n    }\n    onChange(value) {\n        this.value = value;\n    }\n    open() {\n        if (!this.completer) {\n            return;\n        }\n        this.completer.open();\n    }\n    close() {\n        if (!this.completer) {\n            return;\n        }\n        this.completer.clear();\n    }\n    focus() {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.focus();\n        }\n        else {\n            this._focus = true;\n        }\n    }\n    blur() {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.blur();\n        }\n        else {\n            this._focus = false;\n        }\n    }\n    isOpen() {\n        return this._open;\n    }\n};\nCompleterCmp.ɵfac = function CompleterCmp_Factory(t) { return new (t || CompleterCmp)(ɵngcc0.ɵɵdirectiveInject(CompleterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCompleterCmp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterCmp, selectors: [[\"ng2-completer\"]], viewQuery: function CompleterCmp_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CtrCompleter, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.completer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ctrInput = _t.first);\n    } }, inputs: { inputName: \"inputName\", inputId: \"inputId\", pause: \"pause\", minSearchLength: \"minSearchLength\", maxChars: \"maxChars\", overrideSuggested: \"overrideSuggested\", clearSelected: \"clearSelected\", clearUnselected: \"clearUnselected\", fillHighlighted: \"fillHighlighted\", placeholder: \"placeholder\", autoMatch: \"autoMatch\", disableInput: \"disableInput\", autofocus: \"autofocus\", openOnFocus: \"openOnFocus\", openOnClick: \"openOnClick\", selectOnClick: \"selectOnClick\", selectOnFocus: \"selectOnFocus\", autoHighlight: \"autoHighlight\", datasource: \"datasource\", dataService: \"dataService\", textNoResults: \"textNoResults\", textSearching: \"textSearching\", matchClass: \"matchClass\", fieldTabindex: \"fieldTabindex\", inputClass: \"inputClass\", initialValue: \"initialValue\" }, outputs: { selected: \"selected\", highlighted: \"highlighted\", blurEvent: \"blur\", click: \"click\", focusEvent: \"focus\", opened: \"opened\", keyup: \"keyup\", keydown: \"keydown\" }, features: [ɵngcc0.ɵɵProvidersFeature([COMPLETER_CONTROL_VALUE_ACCESSOR])], decls: 4, vars: 23, consts: [[\"ctrCompleter\", \"\", 1, \"completer-holder\"], [\"type\", \"search\", \"ctrInput\", \"\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"completer-input\", 3, \"ngClass\", \"ngModel\", \"placeholder\", \"tabindex\", \"disabled\", \"clearSelected\", \"clearUnselected\", \"overrideSuggested\", \"openOnFocus\", \"fillHighlighted\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"ngModelChange\", \"blur\", \"focus\", \"keyup\", \"keydown\", \"click\"], [\"ctrInput\", \"\"], [\"class\", \"completer-dropdown-holder\", 4, \"ctrList\", \"ctrListMinSearchLength\", \"ctrListPause\", \"ctrListAutoMatch\", \"ctrListInitialValue\", \"ctrListAutoHighlight\", \"ctrListDisplaySearching\"], [1, \"completer-dropdown-holder\"], [\"class\", \"completer-dropdown\", \"ctrDropdown\", \"\", 4, \"ngIf\"], [\"ctrDropdown\", \"\", 1, \"completer-dropdown\"], [\"class\", \"completer-searching\", 4, \"ngIf\"], [\"class\", \"completer-no-results\", 4, \"ngIf\"], [\"class\", \"completer-row-wrapper\", 4, \"ngFor\", \"ngForOf\"], [1, \"completer-searching\"], [1, \"completer-no-results\"], [1, \"completer-row-wrapper\"], [1, \"completer-row\", 3, \"ctrRow\", \"dataItem\"], [\"class\", \"completer-image-holder\", 4, \"ngIf\"], [1, \"completer-item-text\", 3, \"ngClass\"], [1, \"completer-title\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"], [\"class\", \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\", 4, \"ngIf\"], [1, \"completer-image-holder\"], [\"class\", \"completer-image\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"completer-image-default\", 4, \"ngIf\"], [1, \"completer-image\", 3, \"src\"], [1, \"completer-image-default\"], [1, \"completer-description\", 3, \"text\", \"matchClass\", \"searchStr\", \"type\"]], template: function CompleterCmp_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) { return ctx.searchStr = $event; })(\"ngModelChange\", function CompleterCmp_Template_input_ngModelChange_1_listener($event) { return ctx.onChange($event); })(\"blur\", function CompleterCmp_Template_input_blur_1_listener() { return ctx.onBlur(); })(\"focus\", function CompleterCmp_Template_input_focus_1_listener() { return ctx.onFocus(); })(\"keyup\", function CompleterCmp_Template_input_keyup_1_listener($event) { return ctx.onKeyup($event); })(\"keydown\", function CompleterCmp_Template_input_keydown_1_listener($event) { return ctx.onKeydown($event); })(\"click\", function CompleterCmp_Template_input_click_1_listener($event) { return ctx.onClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, CompleterCmp_div_3_Template, 2, 1, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.searchStr)(\"placeholder\", ctx.placeholder)(\"tabindex\", ctx.fieldTabindex)(\"disabled\", ctx.disableInput)(\"clearSelected\", ctx.clearSelected)(\"clearUnselected\", ctx.clearUnselected)(\"overrideSuggested\", ctx.overrideSuggested)(\"openOnFocus\", ctx.openOnFocus)(\"fillHighlighted\", ctx.fillHighlighted)(\"openOnClick\", ctx.openOnClick)(\"selectOnClick\", ctx.selectOnClick)(\"selectOnFocus\", ctx.selectOnFocus);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.inputId.length > 0 ? ctx.inputId : null)(\"name\", ctx.inputName)(\"maxlength\", ctx.maxChars);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ctrList\", ctx.dataService)(\"ctrListMinSearchLength\", ctx.minSearchLength)(\"ctrListPause\", ctx.pause)(\"ctrListAutoMatch\", ctx.autoMatch)(\"ctrListInitialValue\", ctx.initialValue)(\"ctrListAutoHighlight\", ctx.autoHighlight)(\"ctrListDisplaySearching\", ctx.displaySearching);\n    } }, directives: [CtrCompleter, ɵngcc2.DefaultValueAccessor, CtrInput, ɵngcc3.NgClass, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc2.MaxLengthValidator, CtrList, ɵngcc3.NgIf, CtrDropdown, ɵngcc3.NgForOf, CtrRow, CompleterListItemCmp], styles: [\".completer-dropdown[_ngcontent-%COMP%] {\\n        border-color: #ececec;\\n        border-width: 1px;\\n        border-style: solid;\\n        border-radius: 2px;\\n        width: 250px;\\n        padding: 6px;\\n        cursor: pointer;\\n        z-index: 9999;\\n        position: absolute;\\n        margin-top: -6px;\\n        background-color: #ffffff;\\n    }\\n\\n    .completer-row[_ngcontent-%COMP%] {\\n        padding: 5px;\\n        color: #000000;\\n        margin-bottom: 4px;\\n        clear: both;\\n        display: inline-block;\\n        width: 103%;\\n    }\\n\\n    .completer-selected-row[_ngcontent-%COMP%] {\\n        background-color: lightblue;\\n        color: #ffffff;\\n    }\\n\\n    .completer-description[_ngcontent-%COMP%] {\\n        font-size: 14px;\\n    }\\n\\n    .completer-image-default[_ngcontent-%COMP%] {\\n        width: 16px;\\n        height: 16px;\\n        background-image: url(\\\"demo/res/img/default.png\\\");\\n    }\\n\\n    .completer-image-holder[_ngcontent-%COMP%] {\\n        float: left;\\n        width: 10%;\\n    }\\n    .completer-item-text-image[_ngcontent-%COMP%] {\\n        float: right;\\n        width: 90%;\\n    }\"] });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"dataService\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"inputName\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], CompleterCmp.prototype, \"inputId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"pause\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"minSearchLength\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"maxChars\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"overrideSuggested\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"clearSelected\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"clearUnselected\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"fillHighlighted\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"placeholder\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"matchClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"fieldTabindex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autoMatch\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"disableInput\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"inputClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autofocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"openOnFocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"openOnClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selectOnClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selectOnFocus\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"initialValue\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"autoHighlight\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"highlighted\", void 0);\n__decorate([\n    Output(\"blur\"),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"blurEvent\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"click\", void 0);\n__decorate([\n    Output(\"focus\"),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"focusEvent\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"opened\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CompleterCmp.prototype, \"keyup\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], CompleterCmp.prototype, \"keydown\", void 0);\n__decorate([\n    ViewChild(CtrCompleter, { static: false }),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"completer\", void 0);\n__decorate([\n    ViewChild(\"ctrInput\", { static: false }),\n    __metadata(\"design:type\", Object)\n], CompleterCmp.prototype, \"ctrInput\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], CompleterCmp.prototype, \"datasource\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], CompleterCmp.prototype, \"textNoResults\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], CompleterCmp.prototype, \"textSearching\", null);\nCompleterCmp = __decorate([ __metadata(\"design:paramtypes\", [CompleterService, ChangeDetectorRef])\n], CompleterCmp);\n\nvar Ng2CompleterModule_1;\nconst providers = [\n    CompleterService,\n    LocalDataFactory,\n    RemoteDataFactory\n];\nlet Ng2CompleterModule = Ng2CompleterModule_1 = class Ng2CompleterModule {\n    static forRoot() {\n        return {\n            ngModule: Ng2CompleterModule_1,\n            providers\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: Ng2CompleterModule_1,\n            providers\n        };\n    }\n};\nNg2CompleterModule.ɵfac = function Ng2CompleterModule_Factory(t) { return new (t || Ng2CompleterModule)(); };\nNg2CompleterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2CompleterModule });\nNg2CompleterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: providers, imports: [[\n            CommonModule,\n            FormsModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalDataFactory, [{\n        type: Injectable\n    }], null, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RemoteDataFactory, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterService, [{\n        type: Injectable\n    }], function () { return [{ type: LocalDataFactory }, { type: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n     }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrCompleter, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrCompleter]\"\n            }]\n    }], function () { return []; }, { selected: [{\n            type: Output\n        }], highlighted: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], dataSourceChange: [{\n            type: Output\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrDropdown, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrDropdown]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { onMouseDown: [{\n            type: HostListener,\n            args: [\"mousedown\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrInput, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrInput]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc2.NgModel }, { type: ɵngcc0.ElementRef }]; }, { clearSelected: [{\n            type: Input,\n            args: [\"clearSelected\"]\n        }], clearUnselected: [{\n            type: Input,\n            args: [\"clearUnselected\"]\n        }], overrideSuggested: [{\n            type: Input,\n            args: [\"overrideSuggested\"]\n        }], fillHighlighted: [{\n            type: Input,\n            args: [\"fillHighlighted\"]\n        }], openOnFocus: [{\n            type: Input,\n            args: [\"openOnFocus\"]\n        }], openOnClick: [{\n            type: Input,\n            args: [\"openOnClick\"]\n        }], selectOnClick: [{\n            type: Input,\n            args: [\"selectOnClick\"]\n        }], selectOnFocus: [{\n            type: Input,\n            args: [\"selectOnFocus\"]\n        }], ngModelChange: [{\n            type: Output\n        }], keyupHandler: [{\n            type: HostListener,\n            args: [\"keyup\", [\"$event\"]]\n        }], pasteHandler: [{\n            type: HostListener,\n            args: [\"paste\", [\"$event\"]]\n        }], keydownHandler: [{\n            type: HostListener,\n            args: [\"keydown\", [\"$event\"]]\n        }], onBlur: [{\n            type: HostListener,\n            args: [\"blur\", [\"$event\"]]\n        }], onfocus: [{\n            type: HostListener,\n            args: [\"focus\", []]\n        }], onClick: [{\n            type: HostListener,\n            args: [\"click\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrList, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrList]\"\n            }]\n    }], function () { return [{ type: CtrCompleter, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { ctrListMinSearchLength: [{\n            type: Input\n        }], ctrListPause: [{\n            type: Input\n        }], ctrListAutoMatch: [{\n            type: Input\n        }], ctrListAutoHighlight: [{\n            type: Input\n        }], ctrListDisplaySearching: [{\n            type: Input\n        }], dataService: [{\n            type: Input,\n            args: [\"ctrList\"]\n        }], initialValue: [{\n            type: Input,\n            args: [\"ctrListInitialValue\"]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CtrRow, [{\n        type: Directive,\n        args: [{\n                selector: \"[ctrRow]\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: CtrDropdown, decorators: [{\n                type: Host\n            }] }]; }, { ctrRow: [{\n            type: Input\n        }], dataItem: [{\n            type: Input\n        }], onClick: [{\n            type: HostListener,\n            args: [\"click\", [\"$event\"]]\n        }], onMouseEnter: [{\n            type: HostListener,\n            args: [\"mouseenter\", [\"$event\"]]\n        }], onMouseDown: [{\n            type: HostListener,\n            args: [\"mousedown\", [\"$event\"]]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterListItemCmp, [{\n        type: Component,\n        args: [{\n                selector: \"completer-list-item\",\n                template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\n    </span>`\n            }]\n    }], function () { return []; }, { text: [{\n            type: Input\n        }], searchStr: [{\n            type: Input\n        }], matchClass: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterCmp, [{\n        type: Component,\n        args: [{\n                selector: \"ng2-completer\",\n                template: `\n        <div class=\"completer-holder\" ctrCompleter>\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\n\n            <div class=\"completer-dropdown-holder\"\n                *ctrList=\"dataService;\n                    minSearchLength: minSearchLength;\n                    pause: pause;\n                    autoMatch: autoMatch;\n                    initialValue: initialValue;\n                    autoHighlight: autoHighlight;\n                    displaySearching: displaySearching;\n                    let items = results;\n                    let searchActive = searching;\n                    let isInitialized = searchInitialized;\n                    let isOpen = isOpen;\">\n                <div class=\"completer-dropdown\" ctrDropdown\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\n                            </div>\n                            <div class=\"completer-item-text\"\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\n                                <completer-list-item\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\n                                class=\"completer-description\" [text]=\"item.description\"\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\n                                </completer-list-item>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n                styles: [`\n    .completer-dropdown {\n        border-color: #ececec;\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 2px;\n        width: 250px;\n        padding: 6px;\n        cursor: pointer;\n        z-index: 9999;\n        position: absolute;\n        margin-top: -6px;\n        background-color: #ffffff;\n    }\n\n    .completer-row {\n        padding: 5px;\n        color: #000000;\n        margin-bottom: 4px;\n        clear: both;\n        display: inline-block;\n        width: 103%;\n    }\n\n    .completer-selected-row {\n        background-color: lightblue;\n        color: #ffffff;\n    }\n\n    .completer-description {\n        font-size: 14px;\n    }\n\n    .completer-image-default {\n        width: 16px;\n        height: 16px;\n        background-image: url(\"demo/res/img/default.png\");\n    }\n\n    .completer-image-holder {\n        float: left;\n        width: 10%;\n    }\n    .completer-item-text-image {\n        float: right;\n        width: 90%;\n    }\n    `],\n                providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: CompleterService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { inputName: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], pause: [{\n            type: Input\n        }], minSearchLength: [{\n            type: Input\n        }], maxChars: [{\n            type: Input\n        }], overrideSuggested: [{\n            type: Input\n        }], clearSelected: [{\n            type: Input\n        }], clearUnselected: [{\n            type: Input\n        }], fillHighlighted: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], autoMatch: [{\n            type: Input\n        }], disableInput: [{\n            type: Input\n        }], autofocus: [{\n            type: Input\n        }], openOnFocus: [{\n            type: Input\n        }], openOnClick: [{\n            type: Input\n        }], selectOnClick: [{\n            type: Input\n        }], selectOnFocus: [{\n            type: Input\n        }], autoHighlight: [{\n            type: Input\n        }], selected: [{\n            type: Output\n        }], highlighted: [{\n            type: Output\n        }], blurEvent: [{\n            type: Output,\n            args: [\"blur\"]\n        }], click: [{\n            type: Output\n        }], focusEvent: [{\n            type: Output,\n            args: [\"focus\"]\n        }], opened: [{\n            type: Output\n        }], keyup: [{\n            type: Output\n        }], keydown: [{\n            type: Output\n        }], datasource: [{\n            type: Input\n        }], dataService: [{\n            type: Input\n        }], textNoResults: [{\n            type: Input\n        }], textSearching: [{\n            type: Input\n        }], matchClass: [{\n            type: Input\n        }], fieldTabindex: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], initialValue: [{\n            type: Input\n        }], completer: [{\n            type: ViewChild,\n            args: [CtrCompleter, { static: false }]\n        }], ctrInput: [{\n            type: ViewChild,\n            args: [\"ctrInput\", { static: false }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2CompleterModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CompleterListItemCmp,\n                    CtrCompleter,\n                    CtrDropdown,\n                    CtrInput,\n                    CtrList,\n                    CtrRow,\n                    CompleterCmp\n                ],\n                exports: [\n                    CompleterListItemCmp,\n                    CtrCompleter,\n                    CtrDropdown,\n                    CtrInput,\n                    CtrList,\n                    CtrRow,\n                    CompleterCmp\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                providers\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2CompleterModule, { declarations: function () { return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp]; }, imports: function () { return [CommonModule,\n        FormsModule]; }, exports: function () { return [CompleterListItemCmp, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, CompleterCmp]; } }); })();\n\nexport { CompleterCmp, CompleterListItemCmp, CompleterService, CtrCompleter, CtrDropdown, CtrInput, CtrList, CtrRow, LocalData, LocalDataFactory, Ng2CompleterModule, RemoteData, RemoteDataFactory, CtrListContext as ɵa, CompleterBaseData as ɵb };\n\n","import { EventEmitter, Component, Input, Output, ComponentFactoryResolver, ViewChild, ViewContainerRef, ChangeDetectionStrategy, NgModule, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, FormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport { CompleterService, Ng2CompleterModule } from 'ng2-completer';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { debounceTime, map, distinctUntilChanged, skip, takeUntil } from 'rxjs/operators';\nimport { HttpParams } from '@angular/common/http';\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng2-completer';\nimport * as ɵngcc3 from '@angular/forms';\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nconst _c0 = [\"dynamicTarget\"];\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"select-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onClick($event); })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onStopEditing(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onClick($event); })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onStopEditing(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onClick($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"completer-editor\", 7);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r3.cell);\n} }\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input-editor\", 5);\n    ɵngcc0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onClick($event); })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.onEdited($event); })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onStopEditing(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n} }\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onEdited($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    ɵngcc0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onEdited($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nconst _c1 = \"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{line-height:normal;padding:.375em .75em;width:100%}\";\nfunction SelectEditorComponent_option_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n} }\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"custom-view-component\", 4);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction ViewCellComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction ViewCellComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n} }\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    ɵngcc0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    ɵngcc0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction FilterComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    ɵngcc0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n} }\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"select-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n} }\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n} }\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"completer-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n} }\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input-filter\", 3);\n    ɵngcc0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onFilter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n} }\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.resetFilter($event); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    let tmp_0_0;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n} }\nconst _c2 = [\"inputControl\"];\nfunction SelectFilterComponent_option_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", option_r2.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n} }\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 7);\n    ɵngcc0.ɵɵtext(3, \"(current)\");\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const page_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n} }\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const page_r3 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.paginate(page_r3); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(page_r3);\n} }\nconst _c3 = function (a0) { return { active: a0 }; };\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    ɵngcc0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c3, ctx_r2.getPage() == page_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n} }\nconst _c4 = function (a0) { return { disabled: a0 }; };\nfunction PagerComponent_nav_0_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1); });\n    ɵngcc0.ɵɵelementStart(4, \"span\", 6);\n    ɵngcc0.ɵɵtext(5, \"\\u00AB\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"span\", 7);\n    ɵngcc0.ɵɵtext(7, \"First\");\n    ɵngcc0.ɵɵelementEnd()()();\n    ɵngcc0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.getPage() == 1 ? false : ctx_r13.prev(); });\n    ɵngcc0.ɵɵelementStart(10, \"span\", 6);\n    ɵngcc0.ɵɵtext(11, \"<\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"span\", 7);\n    ɵngcc0.ɵɵtext(13, \"Prev\");\n    ɵngcc0.ɵɵelementEnd()()();\n    ɵngcc0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    ɵngcc0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next(); });\n    ɵngcc0.ɵɵelementStart(17, \"span\", 6);\n    ɵngcc0.ɵɵtext(18, \">\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(19, \"span\", 7);\n    ɵngcc0.ɵɵtext(20, \"Next\");\n    ɵngcc0.ɵɵelementEnd()()();\n    ɵngcc0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast()); });\n    ɵngcc0.ɵɵelementStart(23, \"span\", 6);\n    ɵngcc0.ɵɵtext(24, \"\\u00BB\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(25, \"span\", 7);\n    ɵngcc0.ɵɵtext(26, \"Last\");\n    ɵngcc0.ɵɵelementEnd()()()()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c4, ctx_r0.getPage() == 1));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c4, ctx_r0.getPage() == 1));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c4, ctx_r0.getPage() == ctx_r0.getLast()));\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c4, ctx_r0.getPage() == ctx_r0.getLast()));\n} }\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", item_r17);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r17);\n} }\nfunction PagerComponent_nav_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n    ɵngcc0.ɵɵtext(2, \" Per Page: \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"select\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onChangePerPage($event); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.currentPerPage = $event; });\n    ɵngcc0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n} }\nconst _c5 = [\"ng2-st-tbody\", \"\"];\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const row_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.multipleSelectRow.emit(row_r2); });\n    ɵngcc0.ɵɵelement(1, \"input\", 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\n    ɵngcc0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_custom_custom_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.custom.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\n    ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_edit_2_listener() { ɵngcc0.ɵɵrestoreView(_r14); const row_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_delete_2_listener() { ɵngcc0.ɵɵrestoreView(_r14); const row_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.editRowSelect.emit($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelement(1, \"ng2-smart-table-cell\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const cell_r22 = ctx.$implicit;\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵelement(1, \"ng2-st-tbody-create-cancel\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8)(1, \"ng2-st-tbody-custom\", 9);\n    ɵngcc0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_custom_custom_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.custom.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"ng2-st-tbody-edit-delete\", 10);\n    ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_edit_2_listener() { ɵngcc0.ɵɵrestoreView(_r26); const row_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.edit.emit(row_r2); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_delete_2_listener() { ɵngcc0.ɵɵrestoreView(_r26); const row_r2 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.delete.emit(row_r2); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_ng2_st_tbody_edit_delete_editRowSelect_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.editRowSelect.emit($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n} }\nconst _c6 = function (a0) { return { selected: a0 }; };\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.userSelectRow.emit(row_r2); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.rowHover.emit(row_r2); });\n    ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n    ɵngcc0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c6, row_r2.isSelected));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n} }\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onEdit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onDelete($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onCustom(action_r1, $event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", action_r1.title, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c7 = [\"ng2-st-thead\", \"\"];\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.sort.emit($event); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.selectAllRows.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.create.emit($event); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.filter.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 5);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n} }\nconst _c8 = [\"ng2-st-actions-title\", \"\"];\nconst _c9 = [\"ng2-st-add-button\", \"\"];\nfunction AddButtonComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onAdd($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c10 = [\"ng2-st-checkbox-select-all\", \"\"];\nfunction TitleComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._sort($event); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n} }\nfunction TitleComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.column.title);\n} }\nconst _c11 = [\"ng2-st-thead-filters-row\", \"\"];\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\");\n} }\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"th\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.create.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"th\")(1, \"ng2-smart-table-filter\", 5);\n    ɵngcc0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_ng2_smart_table_filter_filter_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.filter.emit($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n} }\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"th\", 6);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.create.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n} }\nconst _c12 = [\"ng2-st-thead-form-row\", \"\"];\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n} }\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onCreate($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\")(1, \"ng2-smart-table-cell\", 5);\n    ɵngcc0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_ng2_smart_table_cell_edited_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onCreate($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n} }\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onCreate($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nconst _c13 = [\"ng2-st-thead-titles-row\", \"\"];\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.selectAllRows.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n} }\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5)(1, \"ng2-st-column-title\", 6);\n    ɵngcc0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_ng2_st_column_title_sort_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.sort.emit($event); });\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-smart-th \", column_r6.id, \"\");\n    ɵngcc0.ɵɵstyleProp(\"width\", column_r6.width);\n    ɵngcc0.ɵɵproperty(\"ngClass\", column_r6.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n} }\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nfunction Ng2SmartTableComponent_thead_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"thead\", 4);\n    ɵngcc0.ɵɵlistener(\"create\", function Ng2SmartTableComponent_thead_1_Template_thead_create_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.create.emit($event); })(\"selectAllRows\", function Ng2SmartTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onSelectAllRows($event); })(\"sort\", function Ng2SmartTableComponent_thead_1_Template_thead_sort_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.sort($event); })(\"filter\", function Ng2SmartTableComponent_thead_1_Template_thead_filter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.filter($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n} }\nfunction Ng2SmartTableComponent_ng2_smart_table_pager_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ng2-smart-table-pager\", 5);\n    ɵngcc0.ɵɵlistener(\"changePage\", function Ng2SmartTableComponent_ng2_smart_table_pager_3_Template_ng2_smart_table_pager_changePage_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.changePage($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n} }\nconst deepExtend = function (...objects) {\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n        return false;\n    }\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n    const target = arguments[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(arguments, 1);\n    let val, src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n}\nfunction getPageForRowIndex(index, perPage) {\n    // we need to add 1 to convert 0-based index to 1-based page number.\n    return Math.floor(index / perPage) + 1;\n}\n\nfunction prepareValue(value) { return value; }\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        if (this.getRow().index === -1) {\n            return this.getColumn().isAddable;\n        }\n        else {\n            return this.getColumn().isEditable;\n        }\n    }\n}\nCell.PREPARE = prepareValue;\n\nclass Row {\n    constructor(index, data, _dataSet) {\n        this.index = index;\n        this.data = data;\n        this._dataSet = _dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        return this.cells.find(el => el.getColumn() === column);\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this._dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this._dataSet);\n    }\n}\n\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.type = '';\n        this.class = '';\n        this.width = '';\n        this.hide = false;\n        this.isSortable = false;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = '';\n        this.defaultSortDirection = '';\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    process() {\n        this.title = this.settings['title'];\n        this.class = this.settings['class'];\n        this.width = this.settings['width'];\n        this.hide = !!this.settings['hide'];\n        this.type = this.prepareType();\n        this.editor = this.settings['editor'];\n        this.filter = this.settings['filter'];\n        this.renderComponent = this.settings['renderComponent'];\n        this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\n        this.defaultSortDirection = ['asc', 'desc']\n            .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\n        this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\n        this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\n        this.isAddable = typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\n        this.sortDirection = this.prepareSortDirection();\n        this.compareFunction = this.settings['compareFunction'];\n        this.valuePrepareFunction = this.settings['valuePrepareFunction'];\n        this.filterFunction = this.settings['filterFunction'];\n        this.onComponentInitFunction = this.settings['onComponentInitFunction'];\n    }\n    prepareType() {\n        return this.settings['type'] || this.determineType();\n    }\n    prepareSortDirection() {\n        return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\n    }\n    determineType() {\n        // TODO: determine type by data\n        return 'text';\n    }\n}\n\nclass DataSet {\n    constructor(data = [], columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data) {\n        this.data = data;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getRows() {\n        return this.rows;\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        return this.rows.find((row) => row.getData() === data);\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.selectedRow;\n        }\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.selectedRow;\n        }\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            return;\n        }\n        if (!index) {\n            this.selectFirstRow();\n            return this.selectedRow;\n        }\n        if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            return;\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.selectedRow;\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el, index) => {\n            this.rows.push(new Row(index, el, this));\n        });\n    }\n}\n\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes['elements']);\n            if (this.getSetting('selectMode') !== 'multi') {\n                const row = this.determineRowToSelect(changes);\n                if (row) {\n                    this.onSelectRowSource.next(row);\n                }\n                else {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes['action'] === 'remove') {\n            if (changes['elements'].length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes['action'] === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes['action'] === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes['action'] === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes['action'] === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource['field'] && initialSource['direction']) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf['field'] = column.id;\n                sortConf['direction'] = column.defaultSortDirection;\n                sortConf['compare'] = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    selectAllRows(status) {\n        this.dataSet.getRows()\n            .forEach(r => r.isSelected = status);\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}\n\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    onEdited(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\nCellComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"ng2-smart-table-cell\"]], inputs: { inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\", grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n        ɵngcc0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n    } }, directives: function () { return [ɵngcc1.NgIf, ViewCellComponent, EditCellComponent]; }, encapsulation: 2 });\nCellComponent.propDecorators = {\n    grid: [{ type: Input }],\n    row: [{ type: Input }],\n    editConfirm: [{ type: Input }],\n    createConfirm: [{ type: Input }],\n    isNew: [{ type: Input }],\n    cell: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    mode: [{ type: Input }],\n    isInEditing: [{ type: Input }],\n    edited: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-smart-table-cell',\n                template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  `\n            }]\n    }], function () { return []; }, { inputClass: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], isInEditing: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], isNew: [{\n            type: Input\n        }], cell: [{\n            type: Input\n        }] }); })();\n\nclass EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    onEdited(event) {\n        this.edited.next(event);\n        return false;\n    }\n    onStopEditing() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    onClick(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\nEditCellDefault.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { inputClass: \"inputClass\", cell: \"cell\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\nEditCellDefault.propDecorators = {\n    cell: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    edited: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EditCellDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }], cell: [{\n            type: Input\n        }] }); })();\n\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n            this.customComponent.instance.onEdited.subscribe((event) => this.onEdited(event));\n            this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };\nCustomEditComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\nCustomEditComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver }\n];\nCustomEditComponent.propDecorators = {\n    dynamicTarget: [{ type: ViewChild, args: ['dynamicTarget', { read: ViewContainerRef, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CustomEditComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-custom-editor',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n        ɵngcc0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n        ɵngcc0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n        ɵngcc0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n        ɵngcc0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, directives: function () { return [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, ɵngcc1.NgSwitchDefault, InputEditorComponent]; }, encapsulation: 2 });\nDefaultEditComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultEditComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-default-editor',\n                template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\n                   [cell]=\\\"cell\\\"\\n                   [inputClass]=\\\"inputClass\\\"\\n                   (onClick)=\\\"onClick($event)\\\"\\n                   (onEdited)=\\\"onEdited($event)\\\"\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\n    </select-editor>\\n\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\"\\n                     (onEdited)=\\\"onEdited($event)\\\"\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\n    </textarea-editor>\\n\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\">\\n    </checkbox-editor>\\n\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\n                      [cell]=\\\"cell\\\">\\n    </completer-editor>\\n\\n    <input-editor *ngSwitchDefault\\n                  [cell]=\\\"cell\\\"\\n                  [inputClass]=\\\"inputClass\\\"\\n                  (onClick)=\\\"onClick($event)\\\"\\n                  (onEdited)=\\\"onEdited($event)\\\"\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\n    </input-editor>\\n</div>\"\n            }]\n    }], function () { return []; }, null); })();\n\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    onEdited(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\nEditCellComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { inputClass: \"inputClass\", cell: \"cell\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n        ɵngcc0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, CustomEditComponent, ɵngcc1.NgSwitchDefault, DefaultEditComponent], encapsulation: 2 });\nEditCellComponent.propDecorators = {\n    cell: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    edited: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EditCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-edit-mode',\n                template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    `\n            }]\n    }], function () { return []; }, { inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }], cell: [{\n            type: Input\n        }] }); })();\n\nclass DefaultEditor {\n    constructor() {\n        this.onStopEditing = new EventEmitter();\n        this.onEdited = new EventEmitter();\n        this.onClick = new EventEmitter();\n    }\n}\nDefaultEditor.ɵfac = function DefaultEditor_Factory(t) { return new (t || DefaultEditor)(); };\nDefaultEditor.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DefaultEditor, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { onStopEditing: \"onStopEditing\", onEdited: \"onEdited\", onClick: \"onClick\" }, decls: 0, vars: 0, template: function DefaultEditor_Template(rf, ctx) { }, encapsulation: 2 });\nDefaultEditor.propDecorators = {\n    cell: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    onStopEditing: [{ type: Output }],\n    onEdited: [{ type: Output }],\n    onClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultEditor, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { onStopEditing: [{\n            type: Output\n        }], onEdited: [{\n            type: Output\n        }], onClick: [{\n            type: Output\n        }], cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }] }); })();\n\nclass CheckboxEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"input\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_3_0;\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n    } }, directives: [ɵngcc1.NgClass], styles: [_c1] });\nCheckboxEditorComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'checkbox-editor',\n                template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `,\n                styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n            }]\n    }], function () { return []; }, null); })();\n\nclass CompleterEditorComponent extends DefaultEditor {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.CompleterService)); };\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n    } }, directives: [ɵngcc2.CompleterCmp, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], encapsulation: 2 });\nCompleterEditorComponent.ctorParameters = () => [\n    { type: CompleterService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-editor',\n                template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `\n            }]\n    }], function () { return [{ type: ɵngcc2.CompleterService }]; }, null); })();\n\nclass InputEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\nInputEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"input\", 0);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n    } }, directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], styles: [_c1] });\nInputEditorComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'input-editor',\n                template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `,\n                styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n            }]\n    }], function () { return []; }, null); })();\n\nclass SelectEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"select\", 0);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\n        ɵngcc0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_4_0;\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n    } }, directives: [ɵngcc3.SelectControlValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc1.NgForOf, ɵngcc3.NgSelectOption, ɵngcc3.ɵNgSelectMultipleOption], encapsulation: 2 });\nSelectEditorComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-editor',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            (keydown.enter)=\"onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `\n            }]\n    }], function () { return []; }, null); })();\n\nclass TextareaEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"textarea\", 0);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.onClick.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.onEdited.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.onStopEditing.emit(); });\n        ɵngcc0.ɵɵtext(1, \"    \");\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n    } }, directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], styles: [_c1] });\nTextareaEditorComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextareaEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'textarea-editor',\n                template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `,\n                styles: [\":host input,:host textarea{line-height:normal;padding:.375em .75em;width:100%}\"]\n            }]\n    }], function () { return []; }, null); })();\n\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };\nCustomViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\nCustomViewComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver }\n];\nCustomViewComponent.propDecorators = {\n    cell: [{ type: Input }],\n    dynamicTarget: [{ type: ViewChild, args: ['dynamicTarget', { read: ViewContainerRef, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CustomViewComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-view-component',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { cell: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\nViewCellComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n        ɵngcc0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, CustomViewComponent, ɵngcc1.NgSwitchDefault], encapsulation: 2, changeDetection: 0 });\nViewCellComponent.propDecorators = {\n    cell: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-view-mode',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `\n            }]\n    }], null, { cell: [{\n            type: Input\n        }] }); })();\n\nconst CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditor,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent,\n];\nclass CellModule {\n}\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\nCellModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CellModule });\nCellModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            Ng2CompleterModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CellModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    Ng2CompleterModule,\n                ],\n                declarations: [\n                    ...CELL_COMPONENTS,\n                ],\n                exports: [\n                    ...CELL_COMPONENTS,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CellModule, { declarations: function () { return [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        Ng2CompleterModule]; }, exports: function () { return [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent]; } }); })();\n\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action: action,\n            elements: elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort(),\n        }));\n    }\n}\n\nclass FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction(),\n        });\n    }\n}\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\nFilterDefault.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { inputClass: \"inputClass\", column: \"column\", source: \"source\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\nFilterDefault.propDecorators = {\n    column: [{ type: Input }],\n    source: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    filter: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { inputClass: [{\n            type: Input\n        }], filter: [{\n            type: Output\n        }], column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\nFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"ng2-smart-table-filter\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"ng2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"ng2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, CustomFilterComponent, ɵngcc1.NgSwitchDefault, DefaultFilterComponent]; }, styles: [\"[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     select{font-weight:400;line-height:normal;padding:.375em .75em;width:100%}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder, [_nghost-%COMP%]   .ng2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-smart-table-filter',\n                template: `\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `,\n                styles: [\":host .ng2-smart-filter ::ng-deep input,:host .ng2-smart-filter ::ng-deep select{font-weight:400;line-height:normal;padding:.375em .75em;width:100%}:host .ng2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .ng2-smart-filter ::ng-deep .completer-dropdown-holder,:host .ng2-smart-filter ::ng-deep a{font-weight:400}\"]\n            }]\n    }], null, null); })();\n\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n        ɵngcc0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n        ɵngcc0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n        ɵngcc0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, directives: function () { return [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, SelectFilterComponent, ɵngcc1.NgClass, CheckboxFilterComponent, CompleterFilterComponent, ɵngcc1.NgSwitchDefault, InputFilterComponent]; }, encapsulation: 2 });\nDefaultFilterComponent.propDecorators = {\n    query: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'default-table-filter',\n                template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `\n            }]\n    }], null, { query: [{\n            type: Input\n        }] }); })();\n\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { query: \"query\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\nCustomFilterComponent.ctorParameters = () => [\n    { type: ComponentFactoryResolver }\n];\nCustomFilterComponent.propDecorators = {\n    query: [{ type: Input }],\n    dynamicTarget: [{ type: ViewChild, args: ['dynamicTarget', { read: ViewContainerRef, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CustomFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-table-filter',\n                template: `<ng-template #dynamicTarget></ng-template>`\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { query: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nclass DefaultFilter {\n    constructor() {\n        this.delay = 300;\n        this.filter = new EventEmitter();\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\nDefaultFilter.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\nDefaultFilter.propDecorators = {\n    query: [{ type: Input }],\n    inputClass: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultFilter, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], function () { return []; }, { filter: [{\n            type: Output\n        }], query: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], column: [{\n            type: Input\n        }] }); })();\n\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new FormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n        ɵngcc0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n    } }, directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc1.NgClass, ɵngcc1.NgIf], encapsulation: 2 });\nCheckboxFilterComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'checkbox-filter',\n                template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `\n            }]\n    }], function () { return []; }, null); })();\n\nclass CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.CompleterService)); };\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n    } }, directives: [ɵngcc2.CompleterCmp, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], encapsulation: 2 });\nCompleterFilterComponent.ctorParameters = () => [\n    { type: CompleterService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CompleterFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-filter',\n                template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc2.CompleterService }]; }, null); })();\n\nclass InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new FormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\nInputFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    } }, directives: [ɵngcc3.DefaultValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective], encapsulation: 2 });\nInputFilterComponent.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'input-filter',\n                template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `\n            }]\n    }], function () { return []; }, null); })();\n\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        this.inputControl.valueChanges\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 7, NgControl);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\n        ɵngcc0.ɵɵelementStart(2, \"option\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n    } }, directives: [ɵngcc3.SelectControlValueAccessor, ɵngcc1.NgClass, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.NgSelectOption, ɵngcc3.ɵNgSelectMultipleOption, ɵngcc1.NgForOf], encapsulation: 2 });\nSelectFilterComponent.ctorParameters = () => [];\nSelectFilterComponent.propDecorators = {\n    inputControl: [{ type: ViewChild, args: ['inputControl', { read: NgControl, static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-filter',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `\n            }]\n    }], function () { return []; }, { inputControl: [{\n            type: ViewChild,\n            args: ['inputControl', { read: NgControl, static: true }]\n        }] }); })();\n\nconst FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent,\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\nFilterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FilterModule });\nFilterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            Ng2CompleterModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    Ng2CompleterModule,\n                ],\n                declarations: [\n                    ...FILTER_COMPONENTS,\n                ],\n                exports: [\n                    ...FILTER_COMPONENTS,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterModule, { declarations: function () { return [FilterDefault, DefaultFilter, FilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule]; }, exports: function () { return [FilterDefault, DefaultFilter, FilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent]; } }); })();\n\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\nPagerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"ng2-smart-table-pager\"]], inputs: { perPageSelect: \"perPageSelect\", source: \"source\" }, outputs: { changePage: \"changePage\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"ng2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"ng2-smart-pagination-nav\"], [1, \"ng2-smart-pagination\", \"pagination\"], [1, \"ng2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"ng2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"ng2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"ng2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"ng2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"ng2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"ng2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n        ɵngcc0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc3.SelectControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.NgSelectOption, ɵngcc3.ɵNgSelectMultipleOption], styles: [\".ng2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ng2-smart-pagination[_ngcontent-%COMP%]   .ng2-smart-page-item[_ngcontent-%COMP%]{display:inline}.ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .ng2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   label[_ngcontent-%COMP%], [_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{line-height:2.5rem}\"] });\nPagerComponent.propDecorators = {\n    source: [{ type: Input }],\n    perPageSelect: [{ type: Input }],\n    changePage: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-smart-table-pager',\n                template: `\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\n      <ul class=\"ng2-smart-pagination pagination\">\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"ng2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"ng2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"ng2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"ng2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `,\n                styles: [\".ng2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.ng2-smart-pagination .sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ng2-smart-pagination .ng2-smart-page-item{display:inline}.ng2-smart-pagination .page-link-next,.ng2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host label,:host select{margin:1rem 0 1rem 1rem}:host label{line-height:2.5rem}\"]\n            }]\n    }], function () { return []; }, { perPageSelect: [{\n            type: Input\n        }], changePage: [{\n            type: Output\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass PagerModule {\n}\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\nPagerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PagerModule });\nPagerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PagerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                ],\n                declarations: [\n                    PagerComponent,\n                ],\n                exports: [\n                    PagerComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PagerModule, { declarations: function () { return [PagerComponent]; }, imports: function () { return [CommonModule,\n        FormsModule]; }, exports: function () { return [PagerComponent]; } }); })();\n\nclass Ng2SmartTableTbodyComponent {\n    constructor() {\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"ng2-st-tbody\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c5, decls: 2, vars: 2, consts: [[\"class\", \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"ng2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"ng2-smart-actions ng2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\", \"ng2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, TbodyCustomComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent]; }, styles: [\"[_nghost-%COMP%]   .ng2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .ng2-smart-row[_ngcontent-%COMP%]   .ng2-smart-actions.ng2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     ng2-st-tbody-create-cancel a:first-child, [_nghost-%COMP%]     ng2-st-tbody-edit-delete a:first-child{margin-right:.25rem}\"] });\nNg2SmartTableTbodyComponent.propDecorators = {\n    grid: [{ type: Input }],\n    source: [{ type: Input }],\n    deleteConfirm: [{ type: Input }],\n    editConfirm: [{ type: Input }],\n    rowClassFunction: [{ type: Input }],\n    save: [{ type: Output }],\n    cancel: [{ type: Output }],\n    edit: [{ type: Output }],\n    delete: [{ type: Output }],\n    custom: [{ type: Output }],\n    edited: [{ type: Output }],\n    userSelectRow: [{ type: Output }],\n    editRowSelect: [{ type: Output }],\n    multipleSelectRow: [{ type: Output }],\n    rowHover: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-tbody]',\n                template: \"<tr *ngFor=\\\"let row of grid.getRows()\\\" (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"ng2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\n  <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"ng2-smart-actions ng2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\">\\n  </td>\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\n\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\n                              [editConfirm]=\\\"editConfirm\\\"\\n                              (edit)=\\\"edit.emit(row)\\\"\\n                              (delete)=\\\"delete.emit(row)\\\"\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n                              [row]=\\\"row\\\"\\n                              [source]=\\\"source\\\">\\n    </ng2-st-tbody-edit-delete>\\n  </td>\\n   <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <ng2-smart-table-cell [cell]=\\\"cell\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [row]=\\\"row\\\"\\n                          [isNew]=\\\"false\\\"\\n                          [mode]=\\\"mode\\\"\\n                          [editConfirm]=\\\"editConfirm\\\"\\n                          [inputClass]=\\\"editInputClass\\\"\\n                          [isInEditing]=\\\"row.isInEditing\\\">\\n    </ng2-smart-table-cell>\\n  </td>\\n\\n  <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></ng2-st-tbody-create-cancel>\\n  </td>\\n\\n  <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"ng2-smart-actions\\\">\\n    <ng2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></ng2-st-tbody-custom>\\n\\n    <ng2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                              [deleteConfirm]=\\\"deleteConfirm\\\"\\n                              [editConfirm]=\\\"editConfirm\\\"\\n                              [row]=\\\"row\\\"\\n                              [source]=\\\"source\\\"\\n                              (edit)=\\\"edit.emit(row)\\\"\\n                              (delete)=\\\"delete.emit(row)\\\"\\n                              (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\n    </ng2-st-tbody-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\",\n                styles: [\":host .ng2-smart-row.selected{background:rgba(0,0,0,.05)}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-create-cancel a:first-child,:host ::ng-deep ng2-st-tbody-edit-delete a:first-child{margin-right:.25rem}\"]\n            }]\n    }], function () { return []; }, { save: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], edited: [{\n            type: Output\n        }], userSelectRow: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }], multipleSelectRow: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], rowClassFunction: [{\n            type: Input\n        }] }); })();\n\nclass TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"ng2-st-tbody-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\nTbodyCreateCancelComponent.propDecorators = {\n    grid: [{ type: Input }],\n    row: [{ type: Input }],\n    editConfirm: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-tbody-create-cancel',\n                template: `\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }] }); })();\n\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"ng2-st-tbody-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n        ɵngcc0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2, changeDetection: 0 });\nTbodyEditDeleteComponent.propDecorators = {\n    grid: [{ type: Input }],\n    row: [{ type: Input }],\n    source: [{ type: Input }],\n    deleteConfirm: [{ type: Input }],\n    editConfirm: [{ type: Input }],\n    edit: [{ type: Output }],\n    delete: [{ type: Output }],\n    editRowSelect: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-tbody-edit-delete',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `\n            }]\n    }], function () { return []; }, { edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }] }); })();\n\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"ng2-st-tbody-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2, changeDetection: 0 });\nTbodyCustomComponent.propDecorators = {\n    grid: [{ type: Input }],\n    row: [{ type: Input }],\n    source: [{ type: Input }],\n    custom: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TbodyCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-tbody-custom',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n        `\n            }]\n    }], function () { return []; }, { custom: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nconst TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    Ng2SmartTableTbodyComponent\n];\nclass TBodyModule {\n}\nTBodyModule.ɵfac = function TBodyModule_Factory(t) { return new (t || TBodyModule)(); };\nTBodyModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TBodyModule });\nTBodyModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            CellModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TBodyModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    CellModule,\n                ],\n                declarations: [\n                    ...TBODY_COMPONENTS,\n                ],\n                exports: [\n                    ...TBODY_COMPONENTS,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TBodyModule, { declarations: function () { return [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, Ng2SmartTableTbodyComponent]; }, imports: function () { return [CommonModule,\n        FormsModule, CellModule]; }, exports: function () { return [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, Ng2SmartTableTbodyComponent]; } }); })();\n\nclass Ng2SmartTableTheadComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"ng2-st-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c7, decls: 3, vars: 3, consts: [[\"ng2-st-thead-titles-row\", \"\", \"class\", \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"ng2-st-thead-filters-row\", \"\", \"class\", \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"ng2-st-thead-titles-row\", \"\", 1, \"ng2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"ng2-st-thead-filters-row\", \"\", 1, \"ng2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"ng2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n        ɵngcc0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n    } }, directives: function () { return [ɵngcc1.NgIf, TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent]; }, encapsulation: 2 });\nNg2SmartTableTheadComponent.propDecorators = {\n    grid: [{ type: Input }],\n    source: [{ type: Input }],\n    isAllSelected: [{ type: Input }],\n    createConfirm: [{ type: Input }],\n    sort: [{ type: Output }],\n    selectAllRows: [{ type: Output }],\n    create: [{ type: Output }],\n    filter: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-thead]',\n                template: \"<tr ng2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\n                            class=\\\"ng2-smart-titles\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\n                            [source]=\\\"source\\\"\\n                            (sort)=\\\"sort.emit($event)\\\"\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\n</tr>\\n\\n<tr ng2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\n                              class=\\\"ng2-smart-filters\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [source]=\\\"source\\\"\\n                              (create)=\\\"create.emit($event)\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n</tr>\\n\\n<tr ng2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [createConfirm]=\\\"createConfirm\\\">\\n</tr>\\n\"\n            }]\n    }], function () { return []; }, { sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }] }); })();\n\nclass ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\nActionsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, ɵngcc0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\nActionsComponent.propDecorators = {\n    grid: [{ type: Input }],\n    create: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-actions',\n                template: `\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `\n            }]\n    }], function () { return []; }, { create: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }] }); })();\n\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('ng2-smart-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c8, decls: 2, vars: 1, consts: [[1, \"ng2-smart-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n    } }, encapsulation: 2 });\nActionsTitleComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nActionsTitleComponent.propDecorators = {\n    grid: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionsTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-actions-title]',\n                template: `\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { grid: [{\n            type: Input\n        }] }); })();\n\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nAddButtonComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"ng2-st-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c9, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-action ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-action\", \"ng2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });\nAddButtonComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nAddButtonComponent.propDecorators = {\n    grid: [{ type: Input }],\n    source: [{ type: Input }],\n    create: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-add-button]',\n                template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { create: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"ng2-st-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c10, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n    } }, directives: [ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel], encapsulation: 2 });\nCheckboxSelectAllComponent.propDecorators = {\n    grid: [{ type: Input }],\n    source: [{ type: Input }],\n    isAllSelected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-checkbox-select-all]',\n                template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }] }); })();\n\nclass ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"ng2-st-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"ng2-smart-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"ng2-smart-table-title\", 1);\n        ɵngcc0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_ng2_smart_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n    } }, directives: function () { return [TitleComponent]; }, encapsulation: 2 });\nColumnTitleComponent.propDecorators = {\n    column: [{ type: Input }],\n    source: [{ type: Input }],\n    sort: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColumnTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-column-title',\n                template: `\n    <div class=\"ng2-smart-title\">\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\n    </div>\n  `\n            }]\n    }], function () { return []; }, { sort: [{\n            type: Output\n        }], column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    changeSortDirection() {\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = this.column.sortDirection;\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\nTitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"ng2-smart-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"ng2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"ng2-smart-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"ng2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"ng2-smart-sort\"]], template: function TitleComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n        ɵngcc0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgClass], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{border:4px solid transparent;border-bottom-color:rgba(0,0,0,.3);content:\\\"\\\";display:inline-block;height:0;margin-bottom:2px;width:0}a.sort.desc[_ngcontent-%COMP%]:after{margin-bottom:-2px;transform:rotate(-180deg)}\"] });\nTitleComponent.propDecorators = {\n    column: [{ type: Input }],\n    source: [{ type: Input }],\n    sort: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-smart-table-title',\n                template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"ng2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `,\n                styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{border:4px solid transparent;border-bottom-color:rgba(0,0,0,.3);content:\\\"\\\";display:inline-block;height:0;margin-bottom:2px;width:0}a.sort.desc:after{margin-bottom:-2px;transform:rotate(-180deg)}\"]\n            }]\n    }], function () { return []; }, { sort: [{\n            type: Output\n        }], column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"ng2-st-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c11, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"ng2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n        ɵngcc0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n        ɵngcc0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, directives: [ɵngcc1.NgIf, AddButtonComponent, ɵngcc1.NgForOf, FilterComponent], encapsulation: 2 });\nTheadFitlersRowComponent.propDecorators = {\n    grid: [{ type: Input }],\n    source: [{ type: Input }],\n    create: [{ type: Output }],\n    filter: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-thead-filters-row]',\n                template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"ng2-smart-th {{ column.id }}\">\n      <ng2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </ng2-smart-table-filter>\n    </th>\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `\n            }]\n    }], function () { return []; }, { create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"ng2-st-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c12, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"ng2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"ng2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n        ɵngcc0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n        ɵngcc0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n        ɵngcc0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, directives: [ɵngcc1.NgIf, ActionsComponent, ɵngcc1.NgForOf, CellComponent], encapsulation: 2 });\nTheadFormRowComponent.propDecorators = {\n    grid: [{ type: Input }],\n    row: [{ type: Input }],\n    createConfirm: [{ type: Input }],\n    create: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TheadFormRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-thead-form-row]',\n                template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <ng2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </ng2-smart-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `\n            }]\n    }], function () { return []; }, { create: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }] }); })();\n\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"ng2-st-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c13, decls: 4, vars: 4, consts: [[\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"ng2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n        ɵngcc0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n        ɵngcc0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, directives: [ɵngcc1.NgIf, CheckboxSelectAllComponent, ActionsTitleComponent, ɵngcc1.NgForOf, ɵngcc1.NgClass, ColumnTitleComponent], encapsulation: 2 });\nTheadTitlesRowComponent.propDecorators = {\n    grid: [{ type: Input }],\n    isAllSelected: [{ type: Input }],\n    source: [{ type: Input }],\n    sort: [{ type: Output }],\n    selectAllRows: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-thead-titles-row]',\n                template: `\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"ng2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `\n            }]\n    }], function () { return []; }, { sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }], grid: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }] }); })();\n\nconst THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    Ng2SmartTableTheadComponent,\n];\nclass THeadModule {\n}\nTHeadModule.ɵfac = function THeadModule_Factory(t) { return new (t || THeadModule)(); };\nTHeadModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: THeadModule });\nTHeadModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            FilterModule,\n            CellModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(THeadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    FilterModule,\n                    CellModule,\n                ],\n                declarations: [\n                    ...THEAD_COMPONENTS,\n                ],\n                exports: [\n                    ...THEAD_COMPONENTS,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(THeadModule, { declarations: function () { return [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, Ng2SmartTableTheadComponent]; }, imports: function () { return [CommonModule,\n        FormsModule, FilterModule, CellModule]; }, exports: function () { return [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, Ng2SmartTableTheadComponent]; } }); })();\n\nfunction compareValues(direction, a, b) {\n    if (a < b) {\n        return -1 * direction;\n    }\n    if (a > b) {\n        return direction;\n    }\n    return 0;\n}\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : compareValues;\n        return data.sort((a, b) => {\n            return compare.call(null, dir, a[field], b[field]);\n        });\n    }\n}\n\nfunction filterValues(value, search) {\n    return value.toString().toLowerCase().includes(search.toString().toLowerCase());\n}\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : filterValues;\n        return data.filter((el) => {\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            return filter.call(null, value, search);\n        });\n    }\n}\n\nclass LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}\n\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true,\n        };\n        this.pagingConf = {};\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        let data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true,\n            };\n            this.sortConf = [];\n            this.pagingConf['page'] = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     * @param conf\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true,\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf['page'] = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf['field'] === fieldConf['field']) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf['page'] = page;\n        this.pagingConf['perPage'] = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf['page'] = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf['search'].length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf['search'].length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => {\n                    return arr.indexOf(elem) === pos;\n                });\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n            data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n        }\n        return data;\n    }\n}\n\nclass Ng2SmartTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left',\n            },\n            filter: {\n                inputClass: '',\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false,\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false,\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false,\n            },\n            attr: {\n                id: '',\n                class: '',\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10,\n            },\n            rowClassFunction: () => '',\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes['settings']) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes['source']) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index = index % paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    resetAllSelector() {\n        this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : [],\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n        };\n        this.rowSelect.emit(data);\n        if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        this.rowDeselect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n        });\n    }\n    isIndexOutOfRange(index) {\n        var _a;\n        const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nNg2SmartTableComponent.ɵfac = function Ng2SmartTableComponent_Factory(t) { return new (t || Ng2SmartTableComponent)(); };\nNg2SmartTableComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Ng2SmartTableComponent, selectors: [[\"ng2-smart-table\"]], inputs: { settings: \"settings\", source: \"source\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"ng2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"ng2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function Ng2SmartTableComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵtemplate(1, Ng2SmartTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tbody\", 2);\n        ɵngcc0.ɵɵlistener(\"edit\", function Ng2SmartTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function Ng2SmartTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function Ng2SmartTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function Ng2SmartTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function Ng2SmartTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function Ng2SmartTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function Ng2SmartTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(3, Ng2SmartTableComponent_ng2_smart_table_pager_3_Template, 1, 2, \"ng2-smart-table-pager\", 3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, Ng2SmartTableTheadComponent, Ng2SmartTableTbodyComponent, PagerComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{border-collapse:collapse;border-spacing:0;display:table;line-height:1.5em;max-width:100%;overflow:auto;width:100%;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\nNg2SmartTableComponent.propDecorators = {\n    source: [{ type: Input }],\n    settings: [{ type: Input }],\n    rowSelect: [{ type: Output }],\n    rowDeselect: [{ type: Output }],\n    userRowSelect: [{ type: Output }],\n    delete: [{ type: Output }],\n    edit: [{ type: Output }],\n    create: [{ type: Output }],\n    custom: [{ type: Output }],\n    deleteConfirm: [{ type: Output }],\n    editConfirm: [{ type: Output }],\n    createConfirm: [{ type: Output }],\n    rowHover: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SmartTableComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-smart-table',\n                template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n\\n  <thead ng2-st-thead *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n                      [grid]=\\\"grid\\\"\\n                      [isAllSelected]=\\\"isAllSelected\\\"\\n                      [source]=\\\"source\\\"\\n                      [createConfirm]=\\\"createConfirm\\\"\\n                      (create)=\\\"create.emit($event)\\\"\\n                      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n                      (sort)=\\\"sort($event)\\\"\\n                      (filter)=\\\"filter($event)\\\">\\n  </thead>\\n\\n  <tbody ng2-st-tbody [grid]=\\\"grid\\\"\\n                      [source]=\\\"source\\\"\\n                      [deleteConfirm]=\\\"deleteConfirm\\\"\\n                      [editConfirm]=\\\"editConfirm\\\"\\n                      [rowClassFunction]=\\\"rowClassFunction\\\"\\n                      (edit)=\\\"edit.emit($event)\\\"\\n                      (delete)=\\\"delete.emit($event)\\\"\\n                      (custom)=\\\"custom.emit($event)\\\"\\n                      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n                      (editRowSelect)=\\\"editRowSelect($event)\\\"\\n                      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n                      (rowHover)=\\\"onRowHover($event)\\\">\\n  </tbody>\\n\\n</table>\\n\\n<ng2-smart-table-pager *ngIf=\\\"isPagerDisplay\\\"\\n                        [source]=\\\"source\\\"\\n                        [perPageSelect]=\\\"perPageSelect\\\"\\n                        (changePage)=\\\"changePage($event)\\\">\\n</ng2-smart-table-pager>\\n\",\n                styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{border-collapse:collapse;border-spacing:0;display:table;line-height:1.5em;max-width:100%;overflow:auto;width:100%;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\"]\n            }]\n    }], function () { return []; }, { settings: [{\n            type: Input\n        }], rowSelect: [{\n            type: Output\n        }], rowDeselect: [{\n            type: Output\n        }], userRowSelect: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], deleteConfirm: [{\n            type: Output\n        }], editConfirm: [{\n            type: Output\n        }], createConfirm: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }], source: [{\n            type: Input\n        }] }); })();\n\nclass Ng2SmartTableModule {\n}\nNg2SmartTableModule.ɵfac = function Ng2SmartTableModule_Factory(t) { return new (t || Ng2SmartTableModule)(); };\nNg2SmartTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2SmartTableModule });\nNg2SmartTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            CellModule,\n            FilterModule,\n            PagerModule,\n            TBodyModule,\n            THeadModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SmartTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CellModule,\n                    FilterModule,\n                    PagerModule,\n                    TBodyModule,\n                    THeadModule,\n                ],\n                declarations: [\n                    Ng2SmartTableComponent,\n                ],\n                exports: [\n                    Ng2SmartTableComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SmartTableModule, { declarations: function () { return [Ng2SmartTableComponent]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule]; }, exports: function () { return [Ng2SmartTableComponent]; } }); })();\n\nclass ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n    }\n}\nServerSourceConf.SORT_FIELD_KEY = '_sort';\nServerSourceConf.SORT_DIR_KEY = '_order';\nServerSourceConf.PAGER_PAGE_KEY = '_page';\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\nServerSourceConf.TOTAL_KEY = 'x-total-count';\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise();\n    }\n    /**\n     * Extracts array of data from server response\n     * @param res\n     * @returns {any}\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     * @param res\n     * @returns {any}\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return +res.headers.get(this.conf.totalKey);\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        let httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf['search']) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n        }\n        return httpParams;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Cell, DefaultEditor, DefaultFilter, LocalDataSource, Ng2SmartTableComponent, Ng2SmartTableModule, ServerDataSource, CellModule as ɵa, CellComponent as ɵb, TbodyEditDeleteComponent as ɵba, TbodyCustomComponent as ɵbb, Ng2SmartTableTbodyComponent as ɵbc, THeadModule as ɵbd, ActionsComponent as ɵbe, ActionsTitleComponent as ɵbf, AddButtonComponent as ɵbg, CheckboxSelectAllComponent as ɵbh, ColumnTitleComponent as ɵbi, TitleComponent as ɵbj, TheadFitlersRowComponent as ɵbk, TheadFormRowComponent as ɵbl, TheadTitlesRowComponent as ɵbm, Ng2SmartTableTheadComponent as ɵbn, Row as ɵbo, DataSet as ɵbp, DataSource as ɵbq, EditCellDefault as ɵc, CustomEditComponent as ɵd, DefaultEditComponent as ɵe, EditCellComponent as ɵf, CheckboxEditorComponent as ɵg, CompleterEditorComponent as ɵh, InputEditorComponent as ɵi, SelectEditorComponent as ɵj, TextareaEditorComponent as ɵk, CustomViewComponent as ɵl, ViewCellComponent as ɵm, FilterModule as ɵn, FilterDefault as ɵo, FilterComponent as ɵp, DefaultFilterComponent as ɵq, CustomFilterComponent as ɵr, CheckboxFilterComponent as ɵs, CompleterFilterComponent as ɵt, InputFilterComponent as ɵu, SelectFilterComponent as ɵv, PagerModule as ɵw, PagerComponent as ɵx, TBodyModule as ɵy, TbodyCreateCancelComponent as ɵz };\n\n","import { Component, OnInit, ViewEncapsulation, HostListener  } from '@angular/core';\nimport { NbMenuItem } from '@nebular/theme';\n\nimport { Observable } from 'rxjs';\nimport { AuthenticateService } from '../services/authentication/authenticate.service';\nimport { AccessService } from '../services/access/access.service';\nimport { Authenticate as AuthenticateModel } from '../models/authenticate.model';\n\n@Component({\n  selector: 'ngx-pages',\n  styleUrls: ['pages.component.scss'],\n  templateUrl: 'pages.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class PagesComponent implements OnInit{\n\n  public modulesList: any;\n  public menu: NbMenuItem[];\n\n  constructor(\n    private accessService: AccessService\n  ) {}\n\n  ngOnInit(): void {\n    this.accessService.currentUserModules.subscribe(val => {\n      this.modulesList = val\n    });        \n\n    this.menu = [\n      {\n        title: 'Dashboard',\n        icon: 'home-outline',\n        link: '/admin/pages/dashboard',\n        home: true,\n      },\n      {\n        title: 'FEATURES',\n        group: true,\n      },            \n      {\n        title: 'Shipments',\n        icon: 'cube-outline',        \n        children: [\n          {\n            title: 'Add Shipment',\n            link: '/admin/pages/add-shipments',\n            icon: 'plus-outline',\n            hidden: this.modulesList.indexOf('add-shipments') > -1 ? false : true,\n          },      \n          {\n            title: 'Empty Tracking',\n            link: '/admin/pages/empty-tracking-shipments',  \n            icon: 'list-outline', \n            hidden: this.modulesList.indexOf('empty-tracking-shipments') > -1 ? false : true,     \n          },      \n          {\n            title: 'Total Shipments',\n            link: '/admin/pages/shipments-list',  \n            icon: 'list-outline', \n            hidden: this.modulesList.indexOf('shipments-list') > -1 ? false : true,     \n          }   \n        ],\n      },      \n      {\n        title: 'Finance',\n        icon: 'credit-card-outline',   \n        hidden: this.modulesList.indexOf('bank-transactions') > -1 || this.modulesList.indexOf('branch-commission-payments') > -1 || this.modulesList.indexOf('branch-payment-details') > -1 || this.modulesList.indexOf('expenses') > -1 ? false : true,           \n        children: [\n          {\n            title: 'Bank Transactions',\n            link: '/admin/pages/bank-transactions',\n            icon: 'plus-outline',\n            hidden: this.modulesList.indexOf('bank-transactions') > -1 ? false : true,\n          },      \n          {\n            title: 'Agent Commission',\n            link: '/admin/pages/branch-commission-payments',  \n            icon: 'credit-card-outline', \n            hidden: this.modulesList.indexOf('branch-commission-payments') > -1 ? false : true,     \n          },      \n          {\n            title: 'Payment Details',\n            link: '/admin/pages/branch-payment-details',\n            icon: 'credit-card-outline',\n            hidden: this.modulesList.indexOf('branch-payment-details') > -1 ? false : true,     \n          },   \n          {\n            title: 'Expenses',\n            link: '/admin/pages/expenses',\n            icon: 'list-outline',\n            hidden: this.modulesList.indexOf('expenses') > -1 ? false : true,     \n          },\n          {\n            title: 'Salaries',\n            link: '/admin/pages/salaries',\n            icon: 'list-outline',   \n            hidden: this.modulesList.indexOf('salaries') > -1 ? false : true, \n          },    \n        ],\n      },     \n      {\n        title: 'Stock',\n        icon: 'cube-outline',  \n        hidden: this.modulesList.indexOf('stock-purchases') > -1 || this.modulesList.indexOf('stock-requests') > -1 || this.modulesList.indexOf('stock-availability') > -1 || this.modulesList.indexOf('branch-stock-availability') > -1 || this.modulesList.indexOf('used-stock') > -1 ? false : true,      \n        children: [\n          {\n            title: 'Stock Purchases',\n            link: '/admin/pages/stock-purchases',\n            icon: 'list-outline',\n            hidden: this.modulesList.indexOf('stock-purchases') > -1 ? false : true,\n          },      \n          {\n            title: 'Stock Requests',\n            link: '/admin/pages/stock-requests',  \n            icon: 'list-outline', \n            hidden: this.modulesList.indexOf('stock-requests') > -1 ? false : true,     \n          },      \n          {\n            title: 'Used Stock',\n            link: '/admin/pages/used-stock',  \n            icon: 'list-outline', \n            hidden: this.modulesList.indexOf('used-stock') > -1 ? false : true,     \n          },      \n          {\n            title: 'Stock Availability',\n            link: '/admin/pages/stock-availability',\n            icon: 'copy-outline',\n            hidden: this.modulesList.indexOf('stock-availability') > -1 ? false : true,     \n          },   \n          {\n            title: 'Branch Stock Availability',\n            link: '/admin/pages/branch-stock-availability',\n            icon: 'copy-outline',\n            hidden: this.modulesList.indexOf('branch-stock-availability') > -1 ? false : true,     \n          },   \n        ],\n      },         \n      {\n        title: 'Complaints',\n        link: '/admin/pages/complaints',\n        icon: 'list-outline',   \n        hidden: this.modulesList.indexOf('complaints') > -1 ? false : true, \n      },\n      {\n        title: 'Manage',\n        icon: 'settings-outline',        \n        children: [\n          {\n            title: 'Modules List',\n            link: '/admin/pages/modules-list',\n            icon: 'grid-outline',\n            hidden: this.modulesList.indexOf('modules-list') > -1 ? false : true,\n          },      \n          {\n            title: 'Roles',\n            link: '/admin/pages/roles',  \n            icon: 'person-outline', \n            hidden: this.modulesList.indexOf('roles') > -1 ? false : true,     \n          },      \n          {\n            title: 'Branches',\n            link: '/admin/pages/branches',  \n            icon: 'grid-outline', \n            hidden: this.modulesList.indexOf('branches') > -1 ? false : true,     \n          },      \n          {\n            title: 'Users',\n            link: '/admin/pages/users',   \n            icon: 'people-outline',\n            hidden: this.modulesList.indexOf('users') > -1 ? false : true,     \n          },      \n          {\n            title: 'Countries',\n            link: '/admin/pages/countries',\n            icon: 'globe-outline',   \n            hidden: this.modulesList.indexOf('countries') > -1 ? false : true,     \n          },      \n          {\n            title: 'Carriers',\n            link: '/admin/pages/carriers', \n            icon: 'car-outline',  \n            hidden: this.modulesList.indexOf('carriers') > -1 ? false : true,     \n          },      \n          {\n            title: 'Carrier Zones',\n            link: '/admin/pages/carrier-zones',  \n            icon: 'grid-outline', \n            hidden: this.modulesList.indexOf('carrier-zones') > -1 ? false : true,     \n          },      \n          {\n            title: 'Prices',\n            link: '/admin/pages/prices',\n            icon: 'square-outline',   \n            hidden: this.modulesList.indexOf('prices') > -1 ? false : true,     \n          },      \n          {\n            title: 'Commodity List',\n            link: '/admin/pages/commodity-list',\n            icon: 'list-outline',   \n            hidden: this.modulesList.indexOf('commodity-list') > -1 ? false : true,     \n          },     \n        ],\n      },    \n    ];\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: any) {    \n    if (!event.target.matches('.dropbtn')) {\n      let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n      for (let i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n        }\n      }\n    }\n  }\n  \n}\n","<ngx-layout>\r\n    <nb-menu [items]=\"menu\"></nb-menu>\r\n    <router-outlet>\r\n        <app-loader></app-loader>\r\n    </router-outlet>\r\n</ngx-layout>","<div class=\"row\">\n  <div class=\"col-lg-12 col-md-12 col-sm-12 col-xl-12\">\n    <div class=\"row\" *ngIf=\"userAccess.branches || userAccess.users\">\n      <!-- BRANCHES -->\n      <div class=\"col-lg-3 col-md-3 col-sm-12 col-xl-3\" *ngIf=\"userAccess.branches\">\n        <a routerLink=\"/admin/pages/branches\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Total Branches</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalBranchesCount}}</h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- END BRANCHES -->\n      <!-- USERS -->\n      <div class=\"col-lg-3 col-md-3 col-sm-12 col-xl-3\" *ngIf=\"userAccess.users\">\n        <a routerLink=\"/admin/pages/users\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Total Users</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalUsersCount}}</h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 col-xl-3\" *ngIf=\"userAccess.users\">\n        <a routerLink=\"/admin/pages/users\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Active Users</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalActiveUsersCount}}</h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <div class=\"col-lg-3 col-md-3 col-sm-12 col-xl-3\" *ngIf=\"userAccess.users\">\n        <a routerLink=\"/admin/pages/users\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Inactive Users</h6>\n                  <h3 class=\"mb-2 number-font error\">{{totalInActiveUsersCount}}</h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- END USERS -->          \n    </div>\n    <br />\n    <div class=\"row\" *ngIf=\"userAccess.shipmentsList\">   \n      <!-- SHIPMENTS -->\n      <div class=\"col-lg-3 col-md-3 col-sm-12 col-xl-3\" *ngIf=\"userAccess.shipmentsList\">\n        <a routerLink=\"/admin/pages/shipments-list\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Total Shipments</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalShipmentsWithTrackingNoCount}}</h3>  \n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>                \n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>      \n      <!-- SHIPMENTS -->  \n      <!-- EMPTY TRACKING SHIPMENTS -->\n      <div class=\"col-lg-4 col-md-4 col-sm-12 col-xl-4\">\n        <a routerLink=\"/admin/pages/empty-tracking-shipments\" *ngIf=\"userAccess.shipmentsList\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Empty Tracking Shipments</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalShipmentsWithoutTrackingNoCount}}</h3>\n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- EMPTY TRACKING SHIPMENTS -->       \n    </div>\n    <br />\n    <div class=\"row\" *ngIf=\"userAccess.stockRequests\">         \n      <!-- STOCK REQUESTS -->\n      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xl-4\" *ngIf=\"userAccess.stockRequests\">\n        <a routerLink=\"/admin/pages/stock-requests\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Pending Stock Requests</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalStockPendingRequestsCount}}</h3>\n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- STOCK REQUESTS -->      \n    </div>\n    <br />\n    <div class=\"row\" *ngIf=\"userAccess.complaints\">  \n      <!-- TOTAL COMPLAINTS -->\n      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xl-4\">\n        <a routerLink=\"/admin/pages/complaints\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Total Complaints</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalPendingComplaintsCount + totalClosedComplaintsCount}}</h3>  \n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>                \n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>      \n      <!-- TOTAL COMPLAINTS -->  \n      <!-- PENDING COMPLAINTS -->\n      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xl-4\">\n        <a routerLink=\"/admin/pages/complaints\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Pending Complaints</h6>\n                  <h3 class=\"mb-2 number-font error\">{{totalPendingComplaintsCount}}</h3>  \n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>                \n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>      \n      <!-- PENDING COMPLAINTS -->  \n      <!-- CLOSED COMPLAINTS -->\n      <div class=\"col-lg-6 col-md-6 col-sm-12 col-xl-4\">\n        <a routerLink=\"/admin/pages/complaints\">\n          <div class=\"card overflow-hidden\">\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h6 class=\"\">Resolved Complaints</h6>\n                  <h3 class=\"mb-2 number-font\">{{totalClosedComplaintsCount}}</h3>\n                  <p class=\"text-muted font-12 mb-0\">Last 90 days</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </a>\n      </div>\n      <!-- CLOSED COMPLAINTS-->       \n    </div>\n  </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport { AccessService } from '../../services/access/access.service';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-dashboard',\n  styleUrls: ['./dashboard.component.scss'],\n  templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit {\n  \n  currentUserData: any;\n  isSuperAdmin: boolean = false;\n  totalBranchesCount: number = 0;\n  totalUsersCount: number = 0;\n  totalShipmentsWithTrackingNoCount: number = 0;\n  totalShipmentsWithoutTrackingNoCount: number = 0;\n  totalStockPendingRequestsCount: number = 0;\n  totalPendingComplaintsCount: number = 0;\n  totalClosedComplaintsCount: number = 0;\n  userAccess: any;\n  totalActiveUsersCount: number = 0;\n  totalInActiveUsersCount: number = 0;\n\n  constructor(\n    private adminService: AdminService,\n    private authenticateService: AuthenticateService,\n    private accessService: AccessService,\n  ) {}\n\n  ngOnInit(){\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type === 'Super-Admin'){\n      this.isSuperAdmin = true;\n    }\n\n    const branchesAccessData = this.accessService.getActionAccess('branches');\n    const usersAccessData = this.accessService.getActionAccess('users');\n    const shipmentsAccessData = this.accessService.getActionAccess('shipments-list');\n    const stockRequestsAccessData = this.accessService.getActionAccess('stock-requests');\n    const complaintsAccessData = this.accessService.getActionAccess('complaints');\n    this.userAccess = {\n      branches: branchesAccessData.length > 0 ? true : false,\n      users: usersAccessData.length > 0 ? true : false,\n      shipmentsList: shipmentsAccessData.length > 0 ? true : false,\n      stockRequests: stockRequestsAccessData.length > 0 ? true : false,\n      complaints: complaintsAccessData.length > 0 ? true : false\n    }\n\n    branchesAccessData.length > 0 && this.getBranchesCount();\n    usersAccessData.length > 0 && this.getUsersCount();\n    shipmentsAccessData.length > 0 && this.getShipmentsCount();\n    stockRequestsAccessData.length > 0 && this.getStockRequestsCount();\n    complaintsAccessData.length > 0 && this.getComplaintsCount();\n  }\n\n  getBranchesCount = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranchesCount');          \n      if(resp && resp.responseCode === 1 && resp.count){\n        this.totalBranchesCount = resp.count;\n      }\n    } catch (error) {\n      this.totalBranchesCount = 0;\n    }    \n  }\n\n  getUsersCount = async() => {\n    try {\n      let resp = await this.adminService.getData('getUsersCount');          \n      if(resp && resp.responseCode === 1 && resp.count){\n        this.totalUsersCount = resp.count.totalUsers;\n        this.totalActiveUsersCount = resp.count.activeUsers;\n        this.totalInActiveUsersCount = resp.count.totalUsers - resp.count.activeUsers;\n      }\n    } catch (error) {\n      this.totalUsersCount = 0;\n    }    \n  }\n\n  getShipmentsCount = async() => {\n    try {\n      let resp = await this.adminService.getData('getShipmentsCount');          \n      if(resp && resp.responseCode === 1 && resp.countData){\n        this.totalShipmentsWithTrackingNoCount = resp.countData.shipmentsWithTrackingNoCount;\n        this.totalShipmentsWithoutTrackingNoCount = resp.countData.shipmentsWithoutTrackingNoCount;\n      }\n    } catch (error) {\n\n    }    \n  }\n\n  getStockRequestsCount = async() => {\n    try {\n      let resp = await this.adminService.getData('getStockRequestsCount');          \n      if(resp && resp.responseCode === 1 && resp.countData){\n        this.totalStockPendingRequestsCount = resp.countData.pendingStockCount;\n      }\n    } catch (error) {\n\n    }    \n  }\n\n  getComplaintsCount = async() => {\n    try {\n      let resp = await this.adminService.getData('getComplaintsCount');          \n      if(resp && resp.responseCode === 1 && resp.countData){\n        this.totalPendingComplaintsCount = resp.countData.pendingCount;\n        this.totalClosedComplaintsCount = resp.countData.closedCount;\n      }\n    } catch (error) {\n\n    }    \n  }\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction PaginationControlsComponent_ul_2_li_1_a_1_Template(rf, ctx) { if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"keyup.enter\", function PaginationControlsComponent_ul_2_li_1_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); ɵngcc0.ɵɵnextContext(3); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.previous(); })(\"click\", function PaginationControlsComponent_ul_2_li_1_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); ɵngcc0.ɵɵnextContext(3); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.previous(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r5.previousLabel + \" \" + ctx_r5.screenReaderPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.previousLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.screenReaderPageLabel);\n} }\nfunction PaginationControlsComponent_ul_2_li_1_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r6.previousLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.screenReaderPageLabel);\n} }\nfunction PaginationControlsComponent_ul_2_li_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 8);\n    ɵngcc0.ɵɵtemplate(1, PaginationControlsComponent_ul_2_li_1_a_1_Template, 4, 3, \"a\", 9);\n    ɵngcc0.ɵɵtemplate(2, PaginationControlsComponent_ul_2_li_1_span_2_Template, 4, 2, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", _r0.isFirstPage());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", 1 < _r0.getCurrent());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r0.isFirstPage());\n} }\nfunction PaginationControlsComponent_ul_2_li_4_a_1_Template(rf, ctx) { if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"keyup.enter\", function PaginationControlsComponent_ul_2_li_4_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); var page_r10 = ɵngcc0.ɵɵnextContext().$implicit; ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.setCurrent(page_r10.value); })(\"click\", function PaginationControlsComponent_ul_2_li_4_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); var page_r10 = ɵngcc0.ɵɵnextContext().$implicit; ɵngcc0.ɵɵnextContext(2); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.setCurrent(page_r10.value); });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 12);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"number\");\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    var page_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r11.screenReaderPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(page_r10.label === \"...\" ? page_r10.label : ɵngcc0.ɵɵpipeBind2(5, 2, page_r10.label, \"\"));\n} }\nfunction PaginationControlsComponent_ul_2_li_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 12);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"number\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    var page_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r12.screenReaderCurrentLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(page_r10.label === \"...\" ? page_r10.label : ɵngcc0.ɵɵpipeBind2(5, 2, page_r10.label, \"\"));\n} }\nfunction PaginationControlsComponent_ul_2_li_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtemplate(1, PaginationControlsComponent_ul_2_li_4_a_1_Template, 6, 5, \"a\", 9);\n    ɵngcc0.ɵɵtemplate(2, PaginationControlsComponent_ul_2_li_4_ng_container_2_Template, 6, 5, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var page_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"current\", _r0.getCurrent() === page_r10.value)(\"ellipsis\", page_r10.label === \"...\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r0.getCurrent() !== page_r10.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r0.getCurrent() === page_r10.value);\n} }\nfunction PaginationControlsComponent_ul_2_li_5_a_1_Template(rf, ctx) { if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"keyup.enter\", function PaginationControlsComponent_ul_2_li_5_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); ɵngcc0.ɵɵnextContext(3); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.next(); })(\"click\", function PaginationControlsComponent_ul_2_li_5_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); ɵngcc0.ɵɵnextContext(3); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.next(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r20.nextLabel + \" \" + ctx_r20.screenReaderPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r20.nextLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.screenReaderPageLabel);\n} }\nfunction PaginationControlsComponent_ul_2_li_5_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r21.nextLabel, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r21.screenReaderPageLabel);\n} }\nfunction PaginationControlsComponent_ul_2_li_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 13);\n    ɵngcc0.ɵɵtemplate(1, PaginationControlsComponent_ul_2_li_5_a_1_Template, 4, 3, \"a\", 9);\n    ɵngcc0.ɵɵtemplate(2, PaginationControlsComponent_ul_2_li_5_span_2_Template, 4, 2, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", _r0.isLastPage());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !_r0.isLastPage());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r0.isLastPage());\n} }\nfunction PaginationControlsComponent_ul_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 3);\n    ɵngcc0.ɵɵtemplate(1, PaginationControlsComponent_ul_2_li_1_Template, 3, 4, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"li\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, PaginationControlsComponent_ul_2_li_4_Template, 3, 6, \"li\", 6);\n    ɵngcc0.ɵɵtemplate(5, PaginationControlsComponent_ul_2_li_5_Template, 3, 4, \"li\", 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    var _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"responsive\", ctx_r1.responsive);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.screenReaderPaginationLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.directionLinks);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", _r0.getCurrent(), \" / \", _r0.getLastPage(), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", _r0.pages)(\"ngForTrackBy\", ctx_r1.trackByIndex);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.directionLinks);\n} }\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\nPaginationService.ɵfac = function PaginationService_Factory(t) { return new (t || PaginationService)(); };\nPaginationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PaginationService, factory: function (t) { return PaginationService.ɵfac(t); } });\n\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        var emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([ __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\nPaginatePipe.ɵfac = function PaginatePipe_Factory(t) { return new (t || PaginatePipe)(ɵngcc0.ɵɵdirectiveInject(PaginationService, 16)); };\nPaginatePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"paginate\", type: PaginatePipe, pure: false });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginatePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'paginate',\n                pure: false\n            }]\n    }], function () { return [{ type: PaginationService }]; }, null); })();\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\"\\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.prototype.trackByIndex = function (index) {\r\n        return index;\r\n    };\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageBoundsCorrection\", void 0);\nPaginationControlsComponent.ɵfac = function PaginationControlsComponent_Factory(t) { return new (t || PaginationControlsComponent)(); };\nPaginationControlsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PaginationControlsComponent, selectors: [[\"pagination-controls\"]], inputs: { maxSize: \"maxSize\", previousLabel: \"previousLabel\", nextLabel: \"nextLabel\", screenReaderPaginationLabel: \"screenReaderPaginationLabel\", screenReaderPageLabel: \"screenReaderPageLabel\", screenReaderCurrentLabel: \"screenReaderCurrentLabel\", directionLinks: \"directionLinks\", autoHide: \"autoHide\", responsive: \"responsive\", id: \"id\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, decls: 3, vars: 3, consts: [[3, \"id\", \"maxSize\", \"pageChange\", \"pageBoundsCorrection\"], [\"p\", \"paginationApi\"], [\"class\", \"ngx-pagination\", 3, \"responsive\", 4, \"ngIf\"], [1, \"ngx-pagination\"], [\"class\", \"pagination-previous\", 3, \"disabled\", 4, \"ngIf\"], [1, \"small-screen\"], [3, \"current\", \"ellipsis\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"pagination-next\", 3, \"disabled\", 4, \"ngIf\"], [1, \"pagination-previous\"], [\"tabindex\", \"0\", 3, \"keyup.enter\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"keyup.enter\", \"click\"], [1, \"show-for-sr\"], [1, \"pagination-next\"]], template: function PaginationControlsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"pagination-template\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"pageChange\", function PaginationControlsComponent_Template_pagination_template_pageChange_0_listener($event) { return ctx.pageChange.emit($event); })(\"pageBoundsCorrection\", function PaginationControlsComponent_Template_pagination_template_pageBoundsCorrection_0_listener($event) { return ctx.pageBoundsCorrection.emit($event); });\n        ɵngcc0.ɵɵtemplate(2, PaginationControlsComponent_ul_2_Template, 6, 9, \"ul\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id)(\"maxSize\", ctx.maxSize);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.autoHide && _r0.pages.length <= 1));\n    } }, directives: function () { return [PaginationControlsDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf]; }, pipes: function () { return [ɵngcc1.DecimalPipe]; }, styles: [\"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \"], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationControlsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'pagination-controls',\n                template: DEFAULT_TEMPLATE,\n                styles: [DEFAULT_STYLES],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return []; }, { maxSize: [{\n            type: Input\n        }], previousLabel: [{\n            type: Input\n        }], nextLabel: [{\n            type: Input\n        }], screenReaderPaginationLabel: [{\n            type: Input\n        }], screenReaderPageLabel: [{\n            type: Input\n        }], screenReaderCurrentLabel: [{\n            type: Input\n        }], pageChange: [{\n            type: Output\n        }], pageBoundsCorrection: [{\n            type: Output\n        }], directionLinks: [{\n            type: Input\n        }], autoHide: [{\n            type: Input\n        }], responsive: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        // Return 1 as default page number\r\n        // Make sense to show 1 instead of empty when there are no items\r\n        var totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsDirective = __decorate$3([ __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\nPaginationControlsDirective.ɵfac = function PaginationControlsDirective_Factory(t) { return new (t || PaginationControlsDirective)(ɵngcc0.ɵɵdirectiveInject(PaginationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nPaginationControlsDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PaginationControlsDirective, selectors: [[\"pagination-template\"], [\"\", \"pagination-template\", \"\"]], inputs: { maxSize: \"maxSize\", id: \"id\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, exportAs: [\"paginationApi\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaginationControlsDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'pagination-template,[pagination-template]',\n                exportAs: 'paginationApi'\n            }]\n    }], function () { return [{ type: PaginationService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { maxSize: [{\n            type: Input\n        }], pageChange: [{\n            type: Output\n        }], pageBoundsCorrection: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }] }); })();\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\nNgxPaginationModule.ɵfac = function NgxPaginationModule_Factory(t) { return new (t || NgxPaginationModule)(); };\nNgxPaginationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxPaginationModule });\nNgxPaginationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [PaginationService], imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxPaginationModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [\n                    PaginatePipe,\n                    PaginationControlsComponent,\n                    PaginationControlsDirective\n                ],\n                providers: [PaginationService],\n                exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPaginationModule, { declarations: function () { return [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]; } }); })();\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n    transform(items: any, filter: any, defaultFilter: boolean = false): any {\n        if (!filter){\n          return items;\n        }\n    \n        if (!Array.isArray(items)){\n          return items;\n        }\n    \n        if (filter && Array.isArray(items)) {\n          let filterKeys = Object.keys(filter);\n          if (defaultFilter) {\n            return items.filter(item =>\n                filterKeys.reduce((x: any, keyName) =>\n                    (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\n          }\n          else {\n            return items.filter(item => {\n              return filterKeys.some((keyName) => {\n                return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\n              });\n            });\n          }\n        }\n      }\n}","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <nb-card>\n            <nb-card-header>Add New</nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"module_name\" class=\"label\">Module Name*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"module_name\" required>\n                        <div *ngIf=\"form?.module_name?.invalid && (form?.module_name?.dirty || form?.module_name?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.module_name?.errors?.required\">Please enter module name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.module_name?.errors?.minlength\">Module name should be min 5 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.module_name?.errors?.maxlength\">Module name should be max 25 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.module_name?.errors?.pattern\">Please enter valid module name</small>\n                        </div>\n                    </div>\n                    <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-md-8 col-lg-8 col-xl-8\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                        <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                    </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <label>\n                        <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                            [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                            aria-controls=\"example1\" />\n                    </label>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th class=\"wd-15p border-bottom-0\">S.No</th>\n                                <th class=\"wd-30p border-bottom-0\">Module Name</th>\n                                <!-- <th class=\"wd-25p border-bottom-0\" *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th> -->\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { module_name : search_string, module_value : search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.module_name }}</td>\n                                <!-- <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data)\" data-toggle=\"modal\" data-target=\"#update-modal\"><i class=\"fa fa-pencil\"></i></a>\n                                </td> -->\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { alphaRegx } from '../../helpers/regExp';\n\n@Component({\n  selector: 'ngx-modules-list',\n  templateUrl: './modules-list.component.html',\n  styleUrls: ['./modules-list.component.scss']\n})\nexport class ModulesListComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  submitted = false;\n  list: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('modules');\n    \n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      module_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3)]],\n    });\n    this.updateForm = this.formBuilder.group({\n      module_id: ['', [Validators.required]],\n      module_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3)]],\n    });\n\n    this.getModules();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  getModules = async() => {\n    const modulesResp = await this.adminService.getData('getModules');\n    if(modulesResp && modulesResp.responseCode === 1 && modulesResp.modules){\n      this.list = modulesResp.modules;\n      this.totalCount = (modulesResp.modules).length;\n    }\n  }\n\n  edit = (data: any) => {\n    this.updateForm.setValue({module_id: data.id, module_name: data.module_name});\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.addForm.invalid) {\n        this.submitted = false;\n          return;\n      }\n      const addResp = await this.adminService.addOrUpdateData('addModule', this.addForm.value);\n      if(addResp && addResp.responseCode === 1){\n        this.getModules();\n        await successAlert(\"Module added successfully\");\n      }else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert(\"Module adding has failed ! Please try again\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();\n  }\n\n  updateFormSubmit = async() =>{\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.updateForm.invalid) {\n        this.submitted = false;\n          return;\n      }\n      const updateResp = await this.adminService.addOrUpdateData('updateModule', this.updateForm.value);\n      if(updateResp && updateResp.responseCode === 1){\n        this.getModules();\n        await successAlert(\"Module updated successfully\");\n      }else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert(\"Module updating has failed ! Please try again\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    \n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();\n  }\n\n}\n\n","<nb-card *ngIf=\"!showAddRole && !showEditRole\">\n    <nb-card-header>\n        Roles\n        <button class=\"btn btn-primary btn-sm action-button\" *ngIf=\"!addBtnDisable && !showAddRole && userAccess.edit\" (click)=\"addRole()\"><i class=\"fa fa-plus\"></i> Add New</button>\n    </nb-card-header>\n    <nb-card-body>\n        <table class=\"table table-bordered\" *ngIf=\"rolesList && rolesList.length > 0\">\n            <thead>\n                <tr>\n                    <th>S.No</th>\n                    <th>Role Name</th>\n                    <th>Role Type</th>\n                    <th>Last Modified On</th>\n                    <th *ngIf=\"userAccess.edit\">Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let data of rolesList; let i = index\">\n                    <td>{{ i + 1 }}</td>\n                    <td>{{ data.role_name }}</td>\n                    <td>{{ data.role_type }}</td>\n                    <td>{{ data.updatedAt | date:'medium' }}</td>\n                    <td *ngIf=\"userAccess.edit\">\n                        <a (click)=\"editRole(data)\"><i class=\"fa fa-pencil\"></i></a>\n                        <!-- <a (click)=\"delete(data._id)\" class=\"btn btn-danger btn-circle btn-sm\"><i class=\"fa fa-trash\"></i></a> -->\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <p *ngIf=\"!rolesList || rolesList.length === 0\">No data available</p>\n    </nb-card-body>\n</nb-card>\n\n<nb-card *ngIf=\"showAddRole && !showEditRole\">\n    <nb-card-header>\n        <div>\n            Add New Role\n            <button class=\"btn btn-primary btn-sm action-button\" *ngIf=\"showEditRole || showAddRole\" (click)=\"back()\"><i class=\"far fa-arrow-alt-circle-left\"></i> BACK</button>\n        </div>        \n        <p>You can add the new role here</p>\n    </nb-card-header>\n    <nb-card-body>\n        <div id=\"add-role-content\" class=\"card-body\">\n            <form id=\"addRoleForm\" [formGroup]=\"addRoleForm\" (ngSubmit)=\"addFormSubmit()\">\n                <div class=\"row\">\n                    <div class=\"col-lg-4 col-md-4\">\n                        <div class=\"form-group\">\n                            <label for=\"role_name\">Role Name* :</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"role_name\" autoFocus required>\n                            <div class=\"error\" *ngIf=\"form?.role_name?.invalid && (form?.role_name?.dirty || form?.role_name?.touched)\">\n                                <small *ngIf=\"form?.role_name?.errors?.required\">Please enter role name</small>\n                                <small *ngIf=\"form?.role_name?.errors?.minlength\">Role name should be min 5\n                                    chars</small>\n                                <small *ngIf=\"form?.role_name?.errors?.maxlength\">Role name should be max 50\n                                    chars</small>\n                                <small *ngIf=\"form?.role_name?.errors?.pattern\">Please enter valid role\n                                    name</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"role_type\">Role Type*</label>\n                            <select class=\"form-control\" formControlName=\"role_type\">\n                                <option *ngFor=\"let roleType of roleTypes; let i = index\" value=\"{{roleType.type}}\">{{roleType.type}}</option>\n                            </select>\n                            <div *ngIf=\"form?.role_type?.invalid && (form?.role_type?.dirty || form?.role_type?.touched)\"\n                                class=\"error\">\n                                <small *ngIf=\"form?.role_type?.errors?.required\">Please select a role type</small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"form-group\">\n                            <label for=\"modules\">Modules* :</label><br />\n                            <div class=\"form-group\" *ngFor=\"let module of modules\">\n                                <div class=\"checkbox checkbox-success\">\n                                    <input id=\"{{module.module_value}}\" [value]=\"module.module_value\" [(ngModel)]=\"module.check\" name=\"{{module.module_value}}\" #myItem (change)=\"changeParent(module.module_value,$event)\" [ngModelOptions]=\"{standalone: true}\" type=\"checkbox\">\n                                    <label for=\"{{module.module_value}}\"><b>{{module.module_name}}</b></label>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"offset-sm-1 col-sm-3 nopadding\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-view\" class=\"child\" [checked]=\"isChecked(module.module_value,'view')\" (change)=\"changeChild(module.module_value,'view',$event)\" type=\"checkbox\" [disabled]=\"true\">\n                                                <label for=\"{{module.module_value}}-view\">&nbsp;View</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 col-sm-3 nopadding\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-edit\" class=\"child\" [checked]=\"isChecked(module.module_value,'edit')\" (change)=\"changeChild(module.module_value,'edit',$event)\" type=\"checkbox\" [disabled]=\"!module.check\">\n                                                <label for=\"{{module.module_value}}-edit\">&nbsp;Edit</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 col-sm-3 nopadding\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-delete\" class=\"child\" [checked]=\"isChecked(module.module_value,'delete')\" (change)=\"changeChild(module.module_value,'delete',$event)\" type=\"checkbox\" [disabled]=\"!module.check\">\n                                                <label for=\"{{module.module_value}}-delete\">&nbsp;Delete</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <button [disabled]=\"addRoleForm?.invalid || selectedIds.length === 0 || addBtnDisable\" class=\"btn btn-primary btn-sm waves-effect waves-light action-button\" type=\"submit\">Submit</button>\n            </form>\n        </div>\n    </nb-card-body>\n</nb-card>\n\n<nb-card *ngIf=\"showEditRole && !showAddRole\">\n    <nb-card-header>\n        <div>\n            Update Role Details\n            <button class=\"btn btn-primary btn-sm action-button\" *ngIf=\"showEditRole || showAddRole\" (click)=\"back()\"><i class=\"far fa-arrow-alt-circle-left\"></i> BACK</button>\n        </div>        \n        <p>You can modify the role details here</p>\n    </nb-card-header>\n    <nb-card-body>\n        <div id=\"edit-role-content\">\n            <form id=\"editRoleForm\" [formGroup]=\"editRoleForm\" (ngSubmit)=\"editFormSubmit()\">\n                <input type=\"hidden\" class=\"form-control\" formControlName=\"role_id\" required=\"\" id=\"role_id\">\n                <div class=\"row\">\n                    <div class=\"col-lg-4 col-md-4\">\n                        <div class=\"form-group\">\n                            <label for=\"role_name\">Role Name* :</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"role_name\" autofocus required>\n                            <div class=\"error\" *ngIf=\"editForm?.role_name?.invalid && (editForm?.role_name?.dirty || editForm?.role_name?.touched)\">\n                                <small *ngIf=\"editForm?.role_name?.errors?.required\">Please enter role\n                                    name</small>\n                                <small *ngIf=\"editForm?.role_name?.errors?.minlength\">Role name should be min 5\n                                    chars</small>\n                                <small *ngIf=\"editForm?.role_name?.errors?.maxlength\">Role name should be max 50\n                                    chars</small>\n                                <small *ngIf=\"editForm?.role_name?.errors?.pattern\">Please enter valid role\n                                    name</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"role_type\">Role Type*</label>\n                            <select class=\"form-control\" formControlName=\"role_type\">\n                                <option *ngFor=\"let roleType of roleTypes; let i = index\" value=\"{{roleType.type}}\">{{roleType.type}}</option>\n                            </select>\n                            <div *ngIf=\"editForm?.role_type?.invalid && (editForm?.role_type?.dirty || editForm?.role_type?.touched)\"\n                                class=\"error\">\n                                <small *ngIf=\"editForm?.role_type?.errors?.required\">Please select a role type</small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"form-group\">\n                            <label for=\"modules\">Modules* :</label><br />\n                            <div class=\"form-group\" *ngFor=\"let module of modulesList ; let i = index\">\n                                <div class=\"checkbox checkbox-success\">\n                                    <input id=\"{{module.module_value}}\" [value]=\"module.module_value\" [(ngModel)]=\"module.check\" name=\"{{module.module_value}}\" #myItem (change)=\"changeParent(module.module_value,$event)\" [ngModelOptions]=\"{standalone: true}\" type=\"checkbox\">\n                                    <label for=\"{{module.module_value}}\"><b>{{module.module_name}}</b></label>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"offset-sm-1 col-sm-3\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-view\" class=\"child\" [checked]=\"isChecked(module.module_value,'view')\" (change)=\"changeChild(module.module_value,'view',$event)\" type=\"checkbox\" [disabled]=\"true\">\n                                                <label for=\"{{module.module_value}}-view\">&nbsp;View</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 col-sm-3\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-edit\" class=\"child\" [checked]=\"isChecked(module.module_value,'edit')\" (change)=\"changeChild(module.module_value,'edit',$event)\" type=\"checkbox\" [disabled]=\"!module.check\">\n                                                <label for=\"{{module.module_value}}-edit\">&nbsp;Edit</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 col-sm-3\">\n                                        <div class=\"form-group\">\n                                            <div class=\"checkbox checkbox-success\">\n                                                <input id=\"{{module.module_value}}-delete\" class=\"child\" [checked]=\"isChecked(module.module_value,'delete')\" (change)=\"changeChild(module.module_value,'delete',$event)\" type=\"checkbox\" [disabled]=\"!module.check\">\n                                                <label for=\"{{module.module_value}}-delete\">&nbsp;Delete</label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <button [disabled]=\"editRoleForm?.invalid || selectedIds.length === 0\" class=\"btn btn-primary btn-sm waves-effect waves-light action-button\" type=\"submit\">Submit</button>\n            </form>\n        </div>\n    </nb-card-body>\n</nb-card>","import { Component, OnInit, ViewChildren } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { alphaRegx } from '../../helpers/regExp';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { successAlert, errorAlert } from '../../helpers/sweetalert';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.scss']\n})\nexport class RolesComponent implements OnInit {\n  public addRoleForm!: FormGroup;\n  public editRoleForm!: FormGroup;\n  public showAddRole = false;\n  public showEditRole = false;\n  public rolesList: any = [];\n  public modules: any = [];\n  public modulesList: any;\n  public addBtnDisable = false;\n  public roleTypes: any;\n\n  @ViewChildren('myItem') item: any;\n  selectedIds: any = [];\n  data: any;\n  userAccess = {view: true, edit: false, delete: false};\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('roles');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.getRoleTypes();\n    if (!this.showAddRole && !this.showEditRole) {\n      this.getRoles();\n    }\n  }\n\n  back = () => {\n    this.showEditRole = false;\n    this.showAddRole = false;\n    this.addBtnDisable = false;\n  }\n\n  addRole = async () => {\n    this.modules = await this.getModules();\n    this.addRoleForm = this.formBuilder.group({\n      role_name: ['', [Validators.required, Validators.minLength(5), Validators.pattern(alphaRegx), Validators.maxLength(30)]],\n      role_type: ['Super-Admin', [Validators.required]],\n    });        \n\n    this.modules.map((module: any, index: any)=>{\n      this.modules[index].check = true;\n      this.selectedIds.push({ module_val: module.module_value, checked: true });\n      this.selectedIds[this.selectedIds.length - 1]['view'] = true;\n      this.selectedIds[this.selectedIds.length - 1]['edit'] = true;\n      this.selectedIds[this.selectedIds.length - 1]['delete'] = true;\n    })\n    this.showEditRole = false;\n    this.showAddRole = true;\n  }\n\n  editRole = async(roleData: any) => {\n    this.modulesList = await this.getModules();\n    this.editRoleForm = this.formBuilder.group({\n      role_id: ['', [Validators.required]],\n      role_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(5), Validators.maxLength(30)]],\n      role_type: ['', [Validators.required]],\n    });        \n    const accessModules = Array.isArray(roleData.access_modules) ? roleData.access_modules : JSON.parse(roleData.access_modules);\n    this.selectedIds = [];\n    this.modulesList.map((module: any, index: any)=>{\n      accessModules.map((value: any)=>{\n        if(module.module_value === value.module_val && value.checked === true){\n          this.modulesList[index].check = true;\n          this.selectedIds.push({ module_val: value.module_val, checked: true });\n          this.selectedIds[this.selectedIds.length - 1]['view'] = value.view;\n          this.selectedIds[this.selectedIds.length - 1]['edit'] = value.edit;\n          this.selectedIds[this.selectedIds.length - 1]['delete'] = value.delete;\n        }      \n      });      \n    });\n    this.editRoleForm.setValue({\n      role_id: roleData.id,\n      role_name: roleData.role_name,\n      role_type: roleData.role_type,\n    });\n    this.showAddRole = false;\n    this.addBtnDisable = true;\n    this.showEditRole = true;\n  }\n\n  get form() { return this.addRoleForm.controls; }\n  get editForm() { return this.editRoleForm.controls; }\n\n  getRoleTypes = async () => {\n    const roleTypesResp = await this.adminService.getData('getRoleTypes');\n    if (roleTypesResp && roleTypesResp.responseCode === 1) {\n      this.roleTypes = roleTypesResp.roleTypes;\n    }\n  }\n\n  getRoles = async () => {\n    const rolesResp = await this.adminService.getData('getRoles');\n    if (rolesResp && rolesResp.responseCode === 1) {\n      this.rolesList = rolesResp.roles;\n    }\n  }\n\n  getModules = async () => {\n    const modulesResp = await this.adminService.getData('getModules');\n    if (modulesResp && modulesResp.responseCode === 1) {\n      return modulesResp.modules;\n    }\n    return null;\n  }\n    \n\n  changeParent = (data: any, event: any) => {\n    if (event.target.checked === true) {\n      this.selectedIds.push({ module_val: data, checked: true });\n      this.selectedIds[this.selectedIds.length - 1]['view'] = true;\n      this.selectedIds[this.selectedIds.length - 1]['edit'] = true;\n      this.selectedIds[this.selectedIds.length - 1]['delete'] = true;\n    }\n    if (event.target.checked === false) {\n      this.selectedIds = this.selectedIds.filter((item: any) => item.module_val !== data);\n    }\n\n  }\n\n  changeChild = (parentKey: any, childKey: any, event: any) => {\n    let item: any = this.selectedIds.find((x: any) => x.module_val == parentKey)\n    if(typeof item != 'undefined'){\n      item[childKey] = event.target.checked;      \n    }  \n  }\n\n  isChecked = (parentKey: any, childKey: any) => {\n    let item: any = this.selectedIds.find((x: any) => x.module_val == parentKey)\n    return item ? item[childKey] : false\n  }\n\n  addFormSubmit = async () => {\n    try {\n      this.addBtnDisable = true;\n      if(this.addRoleForm.value.role_name.length > 0 && this.selectedIds.length > 0){\n        let formData = {...this.addRoleForm.value, modules: this.selectedIds};\n        let resp = await this.adminService.addOrUpdateData('createRole', formData);\n        if(resp && resp.responseCode === 1){\n          this.showEditRole = false;\n          this.showAddRole = false;\n          this.getRoles();\n          await successAlert(\"Role successfully added\");\n        }else{\n          this.addBtnDisable = false;\n          await errorAlert(\"Role adding has failed ! Please try again.\");\n        }      \n      }else{ \n        await errorAlert(\"Please enter mandatory fields !\");  \n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }        \n  }\n\n  editFormSubmit = async () => {\n    try {\n      if(this.editRoleForm.value.role_name.length > 0 && this.selectedIds.length > 0){\n        let formData = {...this.editRoleForm.value, modules: this.selectedIds};\n        let resp = await this.adminService.addOrUpdateData('updateRole', formData);\n        if(resp && resp.responseCode === 1){\n          this.showEditRole = false;\n          this.showAddRole = false;\n          this.getRoles();\n          await successAlert(\"Role successfully updated\");  \n        }else{\n          this.addBtnDisable = false;\n          await errorAlert(\"Role updating has failed ! Please try again.\");  \n        }      \n      }else{   \n        await errorAlert(\"Please enter mandatory fields !\");  \n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }     \n  }\n\n  deleteRole = (roleID: String) => {\n\n  }\n\n}\n\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                                [(ngModel)]=\"search_string\" placeholder=\"Type to search...\" aria-controls=\"example1\" />\n                        </label>\n                        &nbsp;&nbsp;&nbsp;\n                        <button (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Branch Name</th>\n                                <th>Address1</th>\n                                <th>Address2</th>\n                                <th>Pin Code</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th>Status</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { branch_name : search_string, address1: search_string, address2: search_string, pincode: search_string, city: search_string, state: search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.branch_name}}</td>\n                                <td>{{data.address1}}</td>\n                                <td>{{data.address2}}</td>\n                                <td>{{data.pincode}}</td>\n                                <td>{{data.city}}</td>\n                                <td>{{data.state}}</td>\n                                <td class=\"buttons-row\">\n                                    <button *ngIf=\"data.active === true\" (click)=\"changeStatus(data)\" class=\"size-tiny shape-round status-success\" nbButton [size]=\"tiny\">Active</button>\n                                    <button *ngIf=\"data.active !== true\" (click)=\"changeStatus(data)\" class=\"size-tiny shape-round status-warning\" nbButton [size]=\"tiny\">Inactive</button>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <!-- <a *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\"><i class=\"fa fa-pencil\"></i></a>&nbsp;&nbsp;\n                                    <a *ngIf=\"userAccess.delete && data.branch_type !== 'Head Office'\" (click)=\"delete(data.id, data)\"><i class=\"fa fa-trash\"></i></a> -->\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" routerLink=\"/admin/pages/manage-branch-commissions/{{data.id}}\">Manage Commissions</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete && data.branch_type !== 'Head Office'\" (click)=\"delete(data.id, data)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_type\" class=\"control-label\">Branch Type*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"branch_type\">\n                            <option value=\"Head Office\" selected>Head Office</option>\n                            <option value=\"Franchise\" selected>Franchise</option>\n                            <option value=\"Agent\">Agent</option>\n                        </select>\n                        <div *ngIf=\"form?.branch_type?.invalid && (form?.branch_type?.dirty || form?.branch_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_type?.errors?.required\">Please select branch type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_name\" class=\"control-label\">Branch Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_name\">\n                        <div *ngIf=\"form?.branch_name?.invalid && (form?.branch_name?.dirty || form?.branch_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.branch_name?.errors?.required\">Please enter branch name</small>\n                            <small *ngIf=\"form?.branch_name?.errors?.minlength\">First name should be min 3 chars</small>\n                            <small *ngIf=\"form?.branch_name?.errors?.maxlength\">First name should be max 100 chars</small>\n                            <small *ngIf=\"form?.branch_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_email\" class=\"control-label\">Branch Email*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_email\">\n                        <div *ngIf=\"form?.branch_email?.invalid && (form?.branch_email?.dirty || form?.branch_email?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.branch_email?.errors?.required\">Please enter branch email</small>\n                            <small *ngIf=\"form?.branch_email?.errors?.pattern\">Please enter valid email</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_mobile_number\" class=\"control-label\">Branch Mobile Number*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_mobile_number\">\n                        <div *ngIf=\"form?.branch_mobile_number?.invalid && (form?.branch_mobile_number?.dirty || form?.branch_mobile_number?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.branch_mobile_number?.errors?.required\">Please enter mobile number</small>\n                            <small *ngIf=\"form?.branch_mobile_number?.errors?.pattern\">Please enter valid mobile number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"address1\" class=\"control-label\">Address1*</label>\n                        <input class=\"form-control\" formControlName=\"address1\">\n                        <div *ngIf=\"form?.address1?.invalid && (form?.address1?.dirty || form?.address1?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.address1?.errors?.required\">Please enter address</small>\n                            <small *ngIf=\"form?.address1?.errors?.minlength\">Last name should be min 5 chars</small>\n                            <small *ngIf=\"form?.address1?.errors?.maxlength\">Last name should be max 100 chars</small>\n                            <small *ngIf=\"form?.address1?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"address2\" class=\"control-label\">Address2*</label>\n                        <input class=\"form-control\" formControlName=\"address2\">\n                        <div *ngIf=\"form?.address2?.invalid && (form?.address2?.dirty || form?.address2?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.address2?.errors?.required\">Please enter address</small>\n                            <small *ngIf=\"form?.address2?.errors?.minlength\">Last name should be min 5 chars</small>\n                            <small *ngIf=\"form?.address2?.errors?.maxlength\">Last name should be max 100 chars</small>\n                            <small *ngIf=\"form?.address2?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"pincode\" class=\"control-label\">Pincode*</label>\n                        <input type=\"tel\" class=\"form-control\" (change)=\"getPincodeDetails($event)\" formControlName=\"pincode\">\n                        <div *ngIf=\"form?.pincode?.invalid && (form?.pincode?.dirty || form?.pincode?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.pincode?.errors?.required\">Please enter pincode</small>\n                            <small *ngIf=\"form?.pincode?.errors?.pattern\">Please enter valid pincode</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"city\" class=\"control-label\">City*</label>\n                        <input class=\"form-control\" formControlName=\"city\">\n                        <div *ngIf=\"form?.city?.invalid && (form?.city?.dirty || form?.city?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.city?.errors?.required\">Please enter city</small>\n                            <small *ngIf=\"form?.city?.errors?.minlength\">City should be min 3 chars</small>\n                            <small *ngIf=\"form?.city?.errors?.maxlength\">City should be max 50 chars</small>\n                            <small *ngIf=\"form?.city?.errors?.pattern\">Please enter valid city</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"state\" class=\"control-label\">State*</label>\n                        <input class=\"form-control\" formControlName=\"state\">\n                        <div *ngIf=\"form?.state?.invalid && (form?.state?.dirty || form?.state?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.state?.errors?.required\">Please enter state</small>\n                            <small *ngIf=\"form?.state?.errors?.minlength\">State should be min 3 chars</small>\n                            <small *ngIf=\"form?.state?.errors?.maxlength\">State should be max 50 chars</small>\n                            <small *ngIf=\"form?.state?.errors?.pattern\">Please enter valid state</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"photo\" class=\"control-label\">Photo</label>\n                        <input type=\"file\" (change)=\"onFileSelect($event)\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_type\" class=\"control-label\">Show In Website*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"show_in_website\">\n                            <option value=\"YES\" selected>YES</option>\n                            <option value=\"NO\">NO</option>\n                        </select>\n                        <div *ngIf=\"form?.show_in_website?.invalid && (form?.show_in_website?.dirty || form?.show_in_website?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.show_in_website?.errors?.required\">Please select a value</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_type\" class=\"control-label\">Show In Category*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"show_in_category\">\n                            <option value=\"Head office\" selected>Head office</option>\n                            <option value=\"Regional offices\">Regional offices</option>\n                            <option value=\"Branch Offices\">Branch Offices</option>\n                        </select>\n                        <div *ngIf=\"form?.show_in_category?.invalid && (form?.show_in_category?.dirty || form?.show_in_category?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.show_in_category?.errors?.required\">Please select a value</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"google_map_link\" class=\"control-label\">Google Map Embeded Link</label>\n                        <input class=\"form-control\" formControlName=\"google_map_link\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm mt-5\" (click)=\"loadGoogleMap('addform-map')\">Show Map</button>\n                        <div id=\"addform-map\" class=\"mt-5\"></div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_type\" class=\"control-label\">Branch Type*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"branch_type\">\n                            <option value=\"Franchise\" selected>Franchise</option>\n                            <option value=\"Agent\">Agent</option>\n                        </select>\n                        <div *ngIf=\"editForm?.branch_type?.invalid && (editForm?.branch_type?.dirty || editForm?.branch_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_type?.errors?.required\">Please select branch type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_name\" class=\"control-label\">Branch Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_name\">\n                        <div *ngIf=\"editForm?.branch_name?.invalid && (editForm?.branch_name?.dirty || editForm?.branch_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.branch_name?.errors?.required\">Please enter branch name</small>\n                            <small *ngIf=\"editForm?.branch_name?.errors?.minlength\">First name should be min 3 chars</small>\n                            <small *ngIf=\"editForm?.branch_name?.errors?.maxlength\">First name should be max 100 chars</small>\n                            <small *ngIf=\"editForm?.branch_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_email\" class=\"control-label\">Branch Email*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_email\">\n                        <div *ngIf=\"editForm?.branch_email?.invalid && (editForm?.branch_email?.dirty || editForm?.branch_email?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.branch_email?.errors?.required\">Please enter branch email</small>\n                            <small *ngIf=\"editForm?.branch_email?.errors?.pattern\">Please enter valid email</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_mobile_number\" class=\"control-label\">Branch Mobile Number*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"branch_mobile_number\">\n                        <div *ngIf=\"editForm?.branch_mobile_number?.invalid && (editForm?.branch_mobile_number?.dirty || editForm?.branch_mobile_number?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.branch_mobile_number?.errors?.required\">Please enter mobile number</small>\n                            <small *ngIf=\"editForm?.branch_mobile_number?.errors?.pattern\">Please enter valid mobile number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"address1\" class=\"control-label\">Address1*</label>\n                        <input class=\"form-control\" formControlName=\"address1\">\n                        <div *ngIf=\"editForm?.address1?.invalid && (editForm?.address1?.dirty || editForm?.address1?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.address1?.errors?.required\">Please enter address</small>\n                            <small *ngIf=\"editForm?.address1?.errors?.minlength\">Last name should be min 5 chars</small>\n                            <small *ngIf=\"editForm?.address1?.errors?.maxlength\">Last name should be max 100 chars</small>\n                            <small *ngIf=\"editForm?.address1?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"address2\" class=\"control-label\">Address2*</label>\n                        <input class=\"form-control\" formControlName=\"address2\">\n                        <div *ngIf=\"editForm?.address2?.invalid && (editForm?.address2?.dirty || editForm?.address2?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.address2?.errors?.required\">Please enter address</small>\n                            <small *ngIf=\"editForm?.address2?.errors?.minlength\">Last name should be min 5 chars</small>\n                            <small *ngIf=\"editForm?.address2?.errors?.maxlength\">Last name should be max 100 chars</small>\n                            <small *ngIf=\"editForm?.address2?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"pincode\" class=\"control-label\">Pincode*</label>\n                        <input type=\"tel\" class=\"form-control\" (change)=\"getPincodeDetails($event)\" formControlName=\"pincode\">\n                        <div *ngIf=\"editForm?.pincode?.invalid && (editForm?.pincode?.dirty || editForm?.pincode?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.pincode?.errors?.required\">Please enter pincode</small>\n                            <small *ngIf=\"editForm?.pincode?.errors?.pattern\">Please enter valid pincode</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"city\" class=\"control-label\">City*</label>\n                        <input class=\"form-control\" formControlName=\"city\">\n                        <div *ngIf=\"editForm?.city?.invalid && (editForm?.city?.dirty || editForm?.city?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.city?.errors?.required\">Please enter city</small>\n                            <small *ngIf=\"editForm?.city?.errors?.minlength\">City should be min 3 chars</small>\n                            <small *ngIf=\"editForm?.city?.errors?.maxlength\">City should be max 50 chars</small>\n                            <small *ngIf=\"editForm?.city?.errors?.pattern\">Please enter valid city</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"state\" class=\"control-label\">State*</label>\n                        <input class=\"form-control\" formControlName=\"state\">\n                        <div *ngIf=\"editForm?.state?.invalid && (editForm?.state?.dirty || editForm?.state?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.state?.errors?.required\">Please enter state</small>\n                            <small *ngIf=\"editForm?.state?.errors?.minlength\">State should be min 3 chars</small>\n                            <small *ngIf=\"editForm?.state?.errors?.maxlength\">State should be max 50 chars</small>\n                            <small *ngIf=\"editForm?.state?.errors?.pattern\">Please enter valid state</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"photo\" class=\"control-label\">Photo</label>\n                        <input type=\"file\" (change)=\"onFileSelect($event)\" class=\"form-control\">\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"show_in_website\" class=\"control-label\">Show In Website*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"show_in_website\">\n                            <option value=\"YES\" selected>YES</option>\n                            <option value=\"NO\">NO</option>\n                        </select>\n                        <div *ngIf=\"editForm?.show_in_website?.invalid && (editForm?.show_in_website?.dirty || editForm?.show_in_website?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.show_in_website?.errors?.required\">Please select a value</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"show_in_category\" class=\"control-label\">Show In Category*</label>\n                        <select type=\"text\" class=\"form-control\" formControlName=\"show_in_category\">\n                            <option value=\"Head office\" selected>Head office</option>\n                            <option value=\"Regional offices\">Regional offices</option>\n                            <option value=\"Branch Offices\">Branch Offices</option>\n                        </select>\n                        <div *ngIf=\"editForm?.show_in_category?.invalid && (editForm?.show_in_category?.dirty || editForm?.show_in_category?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.show_in_category?.errors?.required\">Please select a value</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"google_map_link\" class=\"control-label\">Google Map Embeded Link</label>\n                        <input class=\"form-control\" formControlName=\"google_map_link\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm mt-5\" (click)=\"loadGoogleMap('updateform-map')\">Show Map</button>\n                        <div id=\"updateform-map\" class=\"mt-5\"></div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\">\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx, alnumSpecialRegx, pincodeRegx, urlRegx, emailRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, changeConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\n\n@Component({\n  selector: 'ngx-branches',\n  templateUrl: './branches.component.html',\n  styleUrls: ['./branches.component.scss']\n})\nexport class BranchesComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  displayMap: Boolean = false;\n  selectedFile: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('branches');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }    \n\n    this.addForm = this.formBuilder.group({\n      branch_type: ['Franchise', [Validators.required]],\n      branch_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.minLength(3), Validators.maxLength(100)]],\n      branch_email: ['', [Validators.required, Validators.pattern(emailRegx)]],\n      branch_mobile_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      address1: ['', [Validators.required, Validators.pattern(addressRegx), Validators.minLength(5), Validators.maxLength(100)]],\n      address2: ['', [Validators.required, Validators.pattern(addressRegx), Validators.minLength(5), Validators.maxLength(100)]],\n      pincode: ['', [Validators.required, Validators.pattern(pincodeRegx)]],\n      city: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3), Validators.maxLength(50)]],\n      state: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(2), Validators.maxLength(50)]],\n      google_map_link: ['', [Validators.pattern(urlRegx)]],\n      show_in_website: ['YES', [Validators.required]],\n      show_in_category: ['Branch Offices']\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_type: ['', [Validators.required]],\n      branch_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.minLength(3), Validators.maxLength(100)]],\n      branch_email: ['', [Validators.required, Validators.pattern(emailRegx)]],\n      branch_mobile_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      address1: ['', [Validators.required, Validators.pattern(addressRegx), Validators.minLength(5), Validators.maxLength(100)]],\n      address2: ['', [Validators.required, Validators.pattern(addressRegx), Validators.minLength(5), Validators.maxLength(100)]],\n      pincode: ['', [Validators.required, Validators.pattern(pincodeRegx)]],\n      city: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3), Validators.maxLength(50)]],\n      state: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(2), Validators.maxLength(50)]],\n      google_map_link: ['', [Validators.pattern(urlRegx)]],\n      show_in_website: ['', [Validators.required]],\n      show_in_category: ['']\n    });\n\n    this.getBranchesList();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openActionDropDown = (i: any) => { \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }       \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.list = resp.branchesList;\n        this.totalCount = (resp.branchesList).length;\n      }\n    } catch (error) {\n      this.list = {};\n    }    \n  }\n\n  getPincodeDetails = async(event: any) => {\n    try {\n      if(event.target.value && event.target.value.length === 6){\n        let pincodeDetails = await this.adminService.getPincodeDetails(event.target.value, 'IN');    \n        if(pincodeDetails && pincodeDetails.country){\n          this.addForm.controls['city'].setValue(pincodeDetails.city);\n          this.addForm.controls['state'].setValue(pincodeDetails.state);\n        }\n      }else{\n        this.addForm.controls['city'].setValue('');\n        this.addForm.controls['state'].setValue('');\n      }\n    } catch (error) {\n      this.addForm.controls['city'].setValue('');\n      this.addForm.controls['state'].setValue('');\n    }    \n  }\n\n  loadGoogleMap = (id: any) => {\n    let mapURL = (id && id === 'addform-map') ? this.addForm.value.google_map_link : this.updateForm.value.google_map_link;\n    if(mapURL && urlRegx.test(mapURL)){\n      this.displayMap = true;\n      let iframe = document.createElement('iframe');\n      iframe.src = mapURL;\n      iframe.width = '100%';\n      iframe.height = '300px';\n      document.getElementById(`${id}`).innerHTML = '';\n      document.getElementById(`${id}`).appendChild(iframe);      \n    }\n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFile = event.target.files;\n  }\n\n  edit = (data: any, modalVal: any) => {\n    this.selectedFile = '';\n    const updateData = {\n      id: data.id,\n      branch_type: data.branch_type,\n      branch_name: data.branch_name,\n      branch_email: data.branch_email ? data.branch_email : null,\n      branch_mobile_number: data.branch_mobile_number ? data.branch_mobile_number : null,\n      address1: data.address1,\n      address2: data.address2,\n      pincode: data.pincode,\n      city: data.city,\n      state: data.state,\n      google_map_link: data.google_map_link,\n      show_in_website: data.show_in_website,\n      show_in_category: data.show_in_category ? data.show_in_category : null\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.addForm.value)) {\n          let value = this.addForm.value[key];\n          formData.append(key, value);\n        }\n        if(this.selectedFile && this.selectedFile.length > 0){\n          formData.append('image_path', 'branches');\n          formData.append(\"branch_photo\", this.selectedFile[0], this.selectedFile[0]['name']);\n        }\n        const addResp = await this.adminService.addOrUpdateData('addBranch', formData);\n        if(addResp && addResp.responseCode === 1){\n          this.getBranchesList();\n          await successAlert(\"Branch added successfully\");\n        }else if(addResp && addResp.responseCode === 0){\n          await errorAlert(addResp.message);\n        }else{\n          await errorAlert(\"Branch adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    this.selectedFile = '';\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.updateForm.value)) {\n          let value = this.updateForm.value[key];\n          formData.append(key, value);\n        }\n        if(this.selectedFile && this.selectedFile.length > 0){\n          formData.append('image_path', 'branches');\n          formData.append(\"branch_photo\", this.selectedFile[0], this.selectedFile[0]['name']);\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateBranch', formData);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getBranchesList();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.updateForm.reset();\n    this.selectedFile = '';\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  changeStatus = async (data: any) => {\n    try {\n      if (this.userAccess.edit && data.branch_type !== 'Head Office') {\n        const currentStatus = data.active;\n        const status = (currentStatus) ? 'inactive' : 'active';\n        if (await changeConfirmAlert(`Want to ${status} this branch account`)) {\n          const statusResp = await this.adminService.addOrUpdateData('updateBranchStatus', { id: data.id, current_status: currentStatus });\n          if (statusResp && statusResp.responseCode === 1) {\n            this.getBranchesList();\n            await successAlert('Status updated successfully');\n          } else {\n            await errorAlert(\"Status updating has failed ! Please try again\");\n          }\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Status updating has failed ! Please try again\");\n    }    \n  }\n\n  delete = async(id: String, data:any) => {\n    try {\n      if(this.userAccess.delete && data.branch_type !== 'Head Office'){\n        if(await deleteConfirmAlert('Want to delete this branch')){\n          const deleteResp = await this.adminService.deleteData('deleteBranch' , id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getBranchesList();\n            await successAlert(\"Branch deleted successfully\")\n          }else{\n            await errorAlert(\"Branch deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","import { Pipe, PipeTransform, Injectable } from '@angular/core';\n\n@Pipe({\n  name: 'smartFilter'\n})\n@Injectable()\nexport class SmartFilterPipe implements PipeTransform {\n    transform(items: any, filter: any, defaultFilter: boolean = false): any {\n        if (!filter){\n          return items;\n        }\n    \n        if (!Array.isArray(items)){\n          return items;\n        }\n\n        return items.filter(function (entry) {\n          return Object.keys(filter).every(function (key) {\n              if(key.includes('.')){\n                let keys = key.split('.');\n                if(keys.length === 2){\n                  return Object.keys(entry[keys[0]]).every(function (key1) {\n                    return new RegExp(filter[key], 'gi').test(entry[keys[0]][keys[1]]) || filter[key] === '';              \n                  });\n                }else if(keys.length === 3){\n                  return Object.keys(entry[keys[0]]).every(function (key1) {\n                    return Object.keys(entry[keys[0]][keys[1]]).every(function (key2) {\n                      return new RegExp(filter[key], 'gi').test(entry[keys[0]][keys[1][keys[2]]]) || filter[key] === '';              \n                    });\n                  });\n                }\n                return;                \n              }else{\n                return new RegExp(filter[key], 'gi').test(entry[key]) || filter[key] === '';\n              }              \n          });\n      });\n      }\n}","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"adminsList && adminsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Role</th>\n                                <th>Branch</th>\n                                <th>First Name</th>\n                                <th>Email</th>\n                                <th>Mobile No</th>\n                                <th>Status</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td><input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Role\"/></td>\n                                <td><input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Branch\"/></td>\n                                <td><input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"First Name\"/></td>\n                                <td><input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Email\"/></td>\n                                <td><input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Mobile No\"/></td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            <tr *ngFor=\"let admin of adminsList | smartFilter: { 'role.role_name': search_string1, 'branch.branch_name': search_string2, first_name: search_string3, email: search_string4, mobile_number: search_string5 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{admin.role.role_name}}</td>\n                                <td>{{admin.branch.branch_name}}</td>\n                                <td>{{admin.first_name}}</td>\n                                <td>{{admin.email}}</td>\n                                <td>{{admin.mobile_number}}</td>\n                                <td class=\"buttons-row\">\n                                    <button *ngIf=\"admin.active === true\" (click)=\"changeStatus(admin)\" class=\"size-tiny shape-round status-success\" nbButton [size]=\"tiny\">Active</button>\n                                    <button *ngIf=\"admin.active !== true\" (click)=\"changeStatus(admin)\" class=\"size-tiny shape-round status-warning\" nbButton [size]=\"tiny\">Inactive</button>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && currentUserData.role_type === 'Super-Admin'\" (click)=\"generatePassword(admin.id)\">Generate Password</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && currentUserData.id !== admin.id\" (click)=\"edit(admin, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete && currentUserData.id !== admin.id\" (click)=\"delete(admin.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!adminsList || adminsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <select class=\"select2 form-control\" formControlName=\"branch_id\" autoFocus>\n                            <option value=\"\">--- SELECT ---</option>\n                            <option *ngFor=\"let branch of branchesList;\" value=\"{{branch.id}}\">{{branch.branch_name}}</option>\n                        </select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"role\" class=\"control-label\">Role*</label>\n                        <select class=\"select2 form-control\" formControlName=\"role\">\n                            <option value=\"\">--- SELECT ---</option>\n                            <option *ngFor=\"let role of roles;\" value=\"{{role.id}}\">{{role.role_name}}</option>\n                        </select>\n                        <div *ngIf=\"form?.role?.invalid && (form?.role?.dirty || form?.role?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.role?.errors?.required\">Please select a role</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"first_name\" class=\"control-label\">First Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"first_name\">\n                        <div *ngIf=\"form?.first_name?.invalid && (form?.first_name?.dirty || form?.first_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.first_name?.errors?.required\">Please enter first name</small>\n                            <small *ngIf=\"form?.first_name?.errors?.minlength\">First name should be min 3\n                                chars</small>\n                            <small *ngIf=\"form?.first_name?.errors?.maxlength\">First name should be max 30\n                                chars</small>\n                            <small *ngIf=\"form?.first_name?.errors?.pattern\">Please enter valid first name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"last_name\" class=\"control-label\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"last_name\">\n                        <div *ngIf=\"form?.last_name?.invalid && (form?.last_name?.dirty || form?.last_name?.touched)\"\n                            class=\"error\">\n                            <!-- <small *ngIf=\"form?.last_name?.errors?.required\">Please enter last name</small> -->\n                            <small *ngIf=\"form?.last_name?.errors?.maxlength\">Last name should be max 30\n                                chars</small>\n                            <small *ngIf=\"form?.last_name?.errors?.pattern\">Please enter valid last name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"email\" class=\"control-label\">Email*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                        <div *ngIf=\"form?.email?.invalid && (form?.email?.dirty || form?.email?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.email?.errors?.required\">Please enter email</small>\n                            <small *ngIf=\"form?.email?.errors?.email\">Please enter valid email address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mobile_number\" class=\"control-label\">Mobile Number*</label>\n                        <input type=\"tel\" class=\"form-control\" formControlName=\"mobile_number\">\n                        <div *ngIf=\"form?.mobile_number?.invalid && (form?.mobile_number?.dirty || form?.mobile_number?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"form?.mobile_number?.errors?.required\">Please enter mobile number</small>\n                            <small *ngIf=\"form?.mobile_number?.errors?.pattern\">Please enter valid mobile\n                                number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"address\" class=\"control-label\">Address</label>\n                        <textarea class=\"form-control\" formControlName=\"address\"></textarea>\n                        <div *ngIf=\"form?.address?.invalid && (form?.address?.dirty || form?.address?.touched)\"\n                            class=\"error\">\n                            <!-- <small *ngIf=\"form?.address?.errors?.required\">Please enter address</small> -->\n                            <small *ngIf=\"form?.address?.errors?.minlength\">Address should be max 10 chars</small>\n                            <small *ngIf=\"form?.address?.errors?.maxlength\">Address should be max 250 chars</small>\n                            <small *ngIf=\"form?.address?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <select class=\"select2 form-control\" formControlName=\"branch_id\" autoFocus>\n                            <option value=\"\">--- SELECT ---</option>\n                            <option *ngFor=\"let branch of branchesList;\" value=\"{{branch.id}}\">{{branch.branch_name}}</option>\n                        </select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"role\" class=\"control-label\">Role*</label>\n                        <select class=\"select2 form-control custom-select\" formControlName=\"role\">\n                            <option value=\"\">--- SELECT ---</option>\n                            <option *ngFor=\"let role of roles;\" value=\"{{role.id}}\">{{role.role_name}}</option>\n                        </select>\n                        <div *ngIf=\"editForm?.role?.invalid && (editForm?.role?.dirty || editForm?.role?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.role?.errors?.required\">Please select a role</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"first_name\" class=\"control-label\">First Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"first_name\">\n                        <div *ngIf=\"editForm?.first_name?.invalid && (editForm?.first_name?.dirty || editForm?.first_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.first_name?.errors?.required\">Please enter first name</small>\n                            <small *ngIf=\"editForm?.first_name?.errors?.minlength\">First name should be min 3\n                                chars</small>\n                            <small *ngIf=\"editForm?.first_name?.errors?.maxlength\">First name should be max 30\n                                chars</small>\n                            <small *ngIf=\"editForm?.first_name?.errors?.pattern\">Please enter valid first\n                                name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"last_name\" class=\"control-label\">Last Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"last_name\">\n                        <div *ngIf=\"editForm?.last_name?.invalid && (editForm?.last_name?.dirty || editForm?.last_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.last_name?.errors?.required\">Please enter last name</small>\n                            <small *ngIf=\"editForm?.last_name?.errors?.maxlength\">Last name should be max 30\n                                chars</small>\n                            <small *ngIf=\"editForm?.last_name?.errors?.pattern\">Please enter valid last name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"email\" class=\"control-label\">Email*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                        <div *ngIf=\"editForm?.email?.invalid && (editForm?.email?.dirty || editForm?.email?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.email?.errors?.required\">Please enter email</small>\n                            <small *ngIf=\"editForm?.email?.errors?.email\">Please enter valid email address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mobile_number\" class=\"control-label\">Mobile Number*</label>\n                        <input type=\"tel\" class=\"form-control\" formControlName=\"mobile_number\">\n                        <div *ngIf=\"editForm?.mobile_number?.invalid && (editForm?.mobile_number?.dirty || editForm?.mobile_number?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.mobile_number?.errors?.required\">Please enter mobile\n                                number</small>\n                            <small *ngIf=\"editForm?.mobile_number?.errors?.pattern\">Please enter valid mobile\n                                number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"address\" class=\"control-label\">Address</label>\n                        <textarea class=\"form-control\" formControlName=\"address\"></textarea>\n                        <div *ngIf=\"editForm?.address?.invalid && (editForm?.address?.dirty || editForm?.address?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.address?.errors?.required\">Please enter address</small>\n                            <small *ngIf=\"editForm?.address?.errors?.minlength\">Address should be max 10\n                                chars</small>\n                            <small *ngIf=\"editForm?.address?.errors?.maxlength\">Address should be max 250\n                                chars</small>\n                            <small *ngIf=\"editForm?.address?.errors?.pattern\">Please enter valid address</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"admin_id\">\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, changeConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  editBtnDisable = false;\n  adminsList: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('users');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    \n\n    this.addForm = this.formBuilder.group({\n      role: ['', [Validators.required]],\n      branch_id: ['', [Validators.required]],\n      first_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3), Validators.maxLength(30)]],\n      last_name: ['', [Validators.pattern(alphaRegx), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]],\n      mobile_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      address: ['', [Validators.pattern(addressRegx), Validators.minLength(10), Validators.maxLength(250)]]\n    });\n    this.updateForm = this.formBuilder.group({\n      admin_id: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      branch_id: ['', [Validators.required]],\n      first_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3), Validators.maxLength(30)]],\n      last_name: ['', [Validators.pattern(alphaRegx), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]],\n      mobile_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      address: ['', [Validators.pattern(addressRegx), Validators.minLength(10), Validators.maxLength(250)]]\n    });\n\n    this.getUsersList();\n    this.getRoles();\n    this.getBranchesList();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  getUsersList = async() => {\n    try {\n      const adminsResp = await this.adminService.getData('getUsersList');          \n      if(adminsResp && adminsResp.responseCode === 1){\n        this.adminsList = adminsResp.adminsList;\n        this.totalCount = (adminsResp.adminsList).length;\n      }\n    } catch (error) {\n      this.adminsList = '';\n    }    \n  }\n\n  getRoles = async() => {\n    const rolesResp = await this.adminService.getData('getRoles');\n    if(rolesResp && rolesResp.responseCode === 1){\n      this.roles = rolesResp.roles;\n    }\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      admin_id: data.id,\n      role: data.role_id,\n      branch_id: data.branch_id,\n      first_name: data.first_name,\n      last_name: data.last_name,\n      email: data.email,\n      mobile_number: data.mobile_number,\n      address: data.address\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const addResp = await this.adminService.addOrUpdateData('createUser', this.addForm.value);\n        if(addResp && addResp.responseCode === 1){\n          this.getUsersList();\n          await successAlert(\"User added successfully\");\n        }else if(addResp && addResp.responseCode === 0){\n          await errorAlert(addResp.message);\n        }else{\n          await errorAlert(\"User adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateUser', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getUsersList();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  changeStatus = async (data: any) => {\n    try {\n      if (this.userAccess.edit) {\n        const currentStatus = data.active;\n        const status = (currentStatus) ? 'inactive' : 'active';\n        if (await changeConfirmAlert(`Want to ${status} this user account`)) {\n          const statusResp = await this.adminService.addOrUpdateData('updateUserStatus', { id: data.id, current_status: currentStatus });\n          if (statusResp && statusResp.responseCode === 1) {\n            this.getUsersList();\n            await successAlert('Status updated successfully');\n          } else {\n            await errorAlert(\"Status updating has failed ! Please try again\");\n          }\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Status updating has failed ! Please try again\");\n    }    \n  }\n\n  generatePassword = async (id: any) => {\n    try {\n      if (this.userAccess.edit) {\n        if (await changeConfirmAlert(`Want to generate temporary password for this user account`)) {\n          const resp = await this.adminService.addOrUpdateData('generateUserPassword', { id: id });\n          if (resp && resp.responseCode === 1) {\n            await successAlert('Temporary password has generated successfully and sent to registered mobile number.');\n          } else {\n            await errorAlert(\"Password generating has failed ! Please try again\");\n          }\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Password generating has failed ! Please try again\");\n    }    \n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this user')){\n          const deleteResp = await this.adminService.deleteData('deleteUser', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getUsersList();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom, firstValueFrom } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PricesService {\n\n  private nodeURL = environment.API_URL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /************** COMMON METHODS ****************/\n  getData = async(apiName: String, data: any = {}): Promise<any> => {\n    let resp = this.http.post(`${this.nodeURL}/${apiName}`, data);  \n    let respData= await lastValueFrom(resp);\n    return respData;\n  }\n\n  addOrUpdateData = async(apiName: String, values: Object): Promise<any> => {\n    let resp = this.http.post(`${this.nodeURL}/${apiName}`, values);  \n    let respData= await lastValueFrom(resp);\n    return respData;\n  }\n\n  deleteData = async(apiName: String, id: any): Promise<any> => {\n    let resp = this.http.post(`${this.nodeURL}/${apiName}`, {id: id});  \n    let respData= await lastValueFrom(resp);\n    return respData; \n  }\n  /************** END COMMON METHODS ****************/\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <nb-card>\n            <nb-card-header>Add New</nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"country_name\" class=\"label\">Country Name*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"country_name\" required>\n                        <div *ngIf=\"form?.country_name?.invalid && (form?.country_name?.dirty || form?.country_name?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_name?.errors?.required\">Please enter country name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_name?.errors?.minlength\">Country name should be min 5 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_name?.errors?.maxlength\">Country name should be max 25 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_name?.errors?.pattern\">Please enter valid country name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"country_code\" class=\"label\">Country Code*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" maxlength=\"2\" formControlName=\"country_code\" required>\n                        <div *ngIf=\"form?.country_code?.invalid && (form?.country_code?.dirty || form?.country_code?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_code?.errors?.required\">Please enter country code</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_code?.errors?.minlength\">Country code should be 2 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_code?.errors?.maxlength\">Country name should be 2 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country_code?.errors?.pattern\">Please enter valid country code</small>\n                        </div>\n                    </div>\n                    <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-md-8 col-lg-8 col-xl-8\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                        <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                    </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <label>\n                        <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                            [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                            aria-controls=\"example1\" />\n                    </label>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Country Name</th>\n                                <th>Country Code</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { country_name : search_string, country_code : search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.country_name }}</td>\n                                <td>{{ data.country_code }}</td>\n                                <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data)\"><i class=\"fa fa-pencil\"></i></a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { alnumSpecialRegx, alphaWithoutSpaceRegx } from '../../helpers/regExp';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { successAlert, errorAlert, deleteConfirmAlert } from '../../helpers/sweetalert';\nimport { AccessService } from '../../services/access/access.service';\n\n@Component({\n  selector: 'ngx-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss']\n})\nexport class CountriesComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  submitted = false;\n  list!: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pricesService: PricesService,\n    private accessService: AccessService\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('countries');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      country_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      country_code: ['', [Validators.required, Validators.pattern(alphaWithoutSpaceRegx), Validators.max(2)]]\n    });\n    this.updateForm = this.formBuilder.group({\n      country_id: ['', [Validators.required]],\n      country_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      country_code: ['', [Validators.required, Validators.pattern(alphaWithoutSpaceRegx), Validators.maxLength(2)]]\n    });\n\n    this.getCountries();\n  }\n\n  get form(){ return this.addForm.controls }\n  get editForm(){ return this.updateForm.controls }\n\n  edit = (data: any) => {\n    const updateData = {\n      country_id: data?.id,\n      country: data?.country_name,\n      code: data?.country_code,\n    }\n    this.updateForm.setValue(updateData);\n  }\n\n  uploadCountries = async() => {\n    // const resp = await this.pricesService.uploadCountries();\n    // console.log('uploadCountries resp', resp);    \n  }\n\n  getCountries = async() => {\n    const countriesResp = await this.pricesService.getData('getCountries');\n    this.list = countriesResp.countries;\n    this.totalCount = (countriesResp.countries).length;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.addForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      const addResp = await this.pricesService.addOrUpdateData('addCountry', this.addForm.value);\n      if(addResp && addResp.responseCode === 1){\n        await this.getCountries();\n        await successAlert('Country added successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  updateFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.updateForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      const updateResp = await this.pricesService.addOrUpdateData('addCountry', this.updateForm.value);\n      if(updateResp && updateResp.responseCode === 1){\n        await this.getCountries();\n        await successAlert('Country updated successfully');\n        this.updateForm.reset();\n      } else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();    \n  }\n\n  delete = async(countryID: string) =>{\n    try {\n      if(await deleteConfirmAlert('If you delete this country, state and cities associated with this country will also deleted. Want to delete this country.')){\n        const deleteResp = await this.pricesService.deleteData('deleteCountry' ,countryID);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCountries();\n          await successAlert(\"Country deleted successfully\");\n        }else{\n          await errorAlert(\"Country deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <nb-card>\n            <nb-card-header>Add New</nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"carrier_name\" class=\"label\">Carrier Name*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"carrier_name\" required>\n                        <div *ngIf=\"form?.carrier_name?.invalid && (form?.carrier_name?.dirty || form?.carrier_name?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.carrier_name?.errors?.required\">Please enter carrier name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.carrier_name?.errors?.minlength\">Carrier name should be min 3 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.carrier_name?.errors?.maxlength\">Carrier name should be max 50 chars</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.carrier_name?.errors?.pattern\">Please enter valid carrier name</small>\n                        </div>\n                    </div>                    \n                    <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-md-8 col-lg-8 col-xl-8\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                        <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                    </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <label>\n                        <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                            [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                            aria-controls=\"example1\" />\n                    </label>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Carrier Name</th>\n                                <th>Last Modified On</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { carrier_name : search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.carrier_name }}</td>\n                                <td>{{ data.updatedAt | date: 'medium' }}</td>\n                                <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\"><i class=\"fa fa-pencil\"></i></a>&nbsp;&nbsp;\n                                    <a *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\"><i class=\"fa fa-trash\"></i></a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"carrier_name\" class=\"control-label\">Carrier Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"carrier_name\">\n                        <div *ngIf=\"editForm?.carrier_name?.invalid && (editForm?.carrier_name?.dirty || editForm?.carrier_name?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.carrier_name?.errors?.required\">Please enter carrier name</small>\n                            <small *ngIf=\"editForm?.carrier_name?.errors?.minlength\">Carrier should be min 3 chars</small>\n                            <small *ngIf=\"editForm?.carrier_name?.errors?.maxlength\">Carrier should be max 50 chars</small>\n                            <small *ngIf=\"editForm?.carrier_name?.errors?.pattern\">Please enter valid carrier name</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\">\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { alnumSpecialRegx, alphaWithoutSpaceRegx } from '../../helpers/regExp';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { successAlert, errorAlert, deleteConfirmAlert } from '../../helpers/sweetalert';\nimport { AccessService } from '../../services/access/access.service';\nimport { NbDialogService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-carriers',\n  templateUrl: './carriers.component.html',\n  styleUrls: ['./carriers.component.scss']\n})\nexport class CarriersComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list!: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pricesService: PricesService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('carriers');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      carrier_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.minLength(3), Validators.maxLength(50)]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      carrier_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.minLength(3), Validators.maxLength(50)]],\n    });\n\n    this.getCarriers();\n  }\n\n  get form(){ return this.addForm.controls }\n  get editForm(){ return this.updateForm.controls }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data?.id,\n      carrier_name: data?.carrier_name\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  getCarriers = async() => {\n    let resp = await this.pricesService.getData('getCarriers');\n    this.list = resp.carriers;\n    this.totalCount = (resp.carriers).length;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.addForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      const addResp = await this.pricesService.addOrUpdateData('addCarrier', this.addForm.value);\n      if(addResp && addResp.responseCode === 1){\n        await this.getCarriers();\n        await successAlert('Carrier added successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  updateFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.updateForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      const updateResp = await this.pricesService.addOrUpdateData('updateCarrier', this.updateForm.value);\n      if(updateResp && updateResp.responseCode === 1){\n        await this.getCarriers();\n        await successAlert('Carrier updated successfully');\n        this.updateForm.reset();\n      } else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();    \n  }\n\n  delete = async(id: string) =>{\n    try {\n      if(await deleteConfirmAlert('If you delete this carrier, zones and prices associated with this carrier will also deleted. Want to delete this carrier.')){\n        const deleteResp = await this.pricesService.deleteData('deleteCarrier', id);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCarriers();\n          await successAlert(\"Carrier deleted successfully\");\n        }else{\n          await errorAlert(\"Carrier deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n}","<div class=\"row justify-content-md-center\">\n    <div class=\"col-md-4\">\n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <div class=\"form-group\">\n                    <ng-select (change)=\"handleCarrierChange($event)\" appendTo=\"body\" placeholder=\"--- CARRIER ---\" searchable=\"true\">\n                        <ng-option *ngFor=\"let carrier of carriersList\" [value]=\"carrier.id\">{{carrier.carrier_name}}</ng-option>\n                    </ng-select>\n                </div>                    \n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<hr />\n<div class=\"row\" *ngIf=\"carrierID\">\n    <div class=\"col-md-4\">\n        <nb-card>\n            <nb-card-header>Add New</nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"zone\" class=\"label\">Zone*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"zone\" required>\n                        <div *ngIf=\"form?.zone?.invalid && (form?.zone?.dirty || form?.zone?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.zone?.errors?.required\">Please enter zone</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.zone?.errors?.maxlength || form?.zone?.errors?.pattern\">Please enter valid zone</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group\">\n                        <label for=\"country\" class=\"label\">Country*</label>\n                        <ng-select formControlName=\"country\" appendTo=\"body\" placeholder=\"--- COUNTRY ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let country of countriesList\" [value]=\"country.country_code\">{{country.country_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.country?.invalid && (form?.country?.dirty || form?.country?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.country?.errors?.required\">Please enter carrier name</small>\n                        </div>\n                    </div>                    \n                    <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n        <nb-card>\n            <nb-card-header>\n                Upload Zones\n                <button (click)=\"downloadSampleFile()\" class=\"btn btn-xs btn-success action-button\"><i class=\"fa fa-download\"></i> Sample File</button>\n            </nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"uploadForm\" (ngSubmit)=\"uploadFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"zones_file\" class=\"label\">Upload File(CSV, XLS, XLSX)*</label>\n                        <input type=\"file\" (change)=\"onFileSelect($event)\" class=\"form-control form-control-line\" formControlName=\"zones_file\" accept=\".csv,.xls,.xlsx\" required>\n                        <div *ngIf=\"upload_form?.zones_file?.invalid && (upload_form?.zones_file?.dirty || upload_form?.zones_file?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.zones_file?.errors?.required\">Please upload csv|xls|xlsx file</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.zones_file?.errors?.pattern\">Invalid file format</small>\n                        </div>\n                    </div>                    \n                    <button type=\"submit\" [disabled]=\"uploadForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-md-8 col-lg-8 col-xl-8\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button type=\"button\" *ngIf=\"userAccess.delete && carrierZonesList && carrierZonesList.length > 0\" class=\"btn btn-danger btn-sm\" (click)=\"deleteAll()\"><i class=\"fa fa-trash\"></i> Delete All</button>&nbsp;&nbsp;\n                        <label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                                [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                                aria-controls=\"example1\" />\n                        </label>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"carrierZonesList && carrierZonesList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Country</th>\n                                <th>Country Code</th>\n                                <th>Zone</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of carrierZonesList | filter: { zone : search_string, country_name: search_string, country_code: search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.country_name }}</td>\n                                <td>{{ data.country_code }}</td>\n                                <td>{{ data.zone }}</td>\n                                <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\"><i class=\"fa fa-pencil\"></i></a>&nbsp;&nbsp;\n                                    <a *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\"><i class=\"fa fa-trash\"></i></a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!carrierZonesList || carrierZonesList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"zone\" class=\"control-label\">Zone*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"zone\">\n                        <div *ngIf=\"editForm?.zone?.invalid && (editForm?.zone?.dirty || editForm?.zone?.touched)\"\n                            class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.zone?.errors?.required\">Please enter zone</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.zone?.errors?.maxlength || form?.zone?.errors?.pattern\">Please enter valid zone</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-12\">\n                        <label for=\"country\" class=\"control-label\">Country*</label>\n                        <ng-select formControlName=\"country\" appendTo=\"body\" placeholder=\"--- COUNTRY ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let country of countriesList\" [value]=\"country.country_code\">{{country.country_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.country?.invalid && (editForm?.country?.dirty || editForm?.country?.touched)\"\n                            class=\"error\">\n                            <small *ngIf=\"editForm?.country?.errors?.required\">Please select country</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" required>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->\n","import { Component, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { fileRegx, alnumRegx } from '../../helpers/regExp';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { successAlert, errorAlert, deleteConfirmAlert, changeConfirmAlert } from '../../helpers/sweetalert';\nimport { AccessService } from '../../services/access/access.service';\nimport { NbDialogService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-carrier-zones',\n  templateUrl: './carrier-zones.component.html',\n  styleUrls: ['./carrier-zones.component.scss'],\n})\nexport class CarrierZonesComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  uploadForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  carriersList!: any;\n  countriesList!: any;\n  carrierZonesList!: any;\n  carrierID!: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n  selectedFile: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pricesService: PricesService,\n    private accessService: AccessService,\n    private adminService: AdminService,\n    private dialogService: NbDialogService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('carrier-zones');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      zone: ['', [Validators.required, Validators.pattern(alnumRegx), Validators.maxLength(5)]],\n      country: ['', [Validators.required]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      zone: ['', [Validators.required, Validators.pattern(alnumRegx), Validators.maxLength(5)]],\n      country: ['', [Validators.required]],\n    });\n    this.uploadForm = this.formBuilder.group({\n      zones_file: ['', [Validators.required, Validators.pattern(fileRegx)]]\n    });\n\n    this.getCarriers();\n    this.getCountries();\n  }\n\n  get form(){ return this.addForm.controls }\n  get editForm(){ return this.updateForm.controls }\n  get upload_form(){ return this.uploadForm.controls }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data?.id,\n      zone: data?.zone,\n      country: data?.country_code\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  getCarriers = async() => {\n    let resp = await this.pricesService.getData('getCarriers');\n    if(resp && resp.carriers){\n      this.carriersList = resp.carriers;\n    }\n  }\n\n  getCountries = async() => {\n    let resp = await this.pricesService.getData('getCountries');\n    if(resp && resp.countries){\n      this.countriesList = resp.countries;\n    }\n  }\n\n  getCarrierZones = async(carrierID: any = this.carrierID) => {\n    let resp = await this.pricesService.getData('getCarrierZones', {carrier_id: carrierID});\n    if(resp && resp.carrier_zones){\n      this.carrierZonesList = resp.carrier_zones;\n    }\n  }\n\n  handleCarrierChange = (carrierID: any) => {  \n    this.carrierID = carrierID;\n    this.getCarrierZones(carrierID);    \n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFile = event.target.files;\n  }\n\n  downloadSampleFile = async() => {\n    if(await changeConfirmAlert('Want to download sample file')){\n      this.adminService.downLoadFiles('carrier-zones', 'sample-carrier-zones-file.csv');\n    }    \n  }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.addForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let countryValues = this.countriesList.filter((country: any) => country.country_code === this.addForm.value.country);\n      let reqData = {\n        zone: this.addForm.value.zone,\n        carrier_id: this.carrierID,\n        country_name: countryValues[0].country_name,\n        country_code: this.addForm.value.country\n      };\n      const addResp = await this.pricesService.addOrUpdateData('addCarrierZone', reqData);\n      if(addResp && addResp.responseCode === 1){\n        await this.getCarrierZones();\n        await successAlert('Carrier zone added successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (err) {\n      let msg = err.message ? err.message : 'Something went wrong ! Please try again.';\n      await errorAlert(msg);\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  uploadFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.uploadForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let formData = new FormData;\n      formData.append('carrier_id', this.carrierID);\n      formData.append('file_path', 'carrier-zones');\n      formData.append(\"carrier_zones_file\", this.selectedFile[0], this.selectedFile[0]['name']);\n      \n      const addResp = await this.pricesService.addOrUpdateData('uploadCarrierZones', formData);\n      if(addResp && addResp.responseCode === 1){\n        this.selectedFile = '';\n        await this.getCarrierZones();\n        await successAlert('Carrier zones uploaded successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.uploadForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  updateFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.updateForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let countryValues = this.countriesList.filter((country: any) => country.country_code === this.updateForm.value.country);\n      let reqData = {\n        id: this.updateForm.value.id,\n        zone: this.updateForm.value.zone,\n        carrier_id: this.carrierID,\n        country_name: countryValues[0].country_name,\n        country_code: this.updateForm.value.country\n      };\n      const updateResp = await this.pricesService.addOrUpdateData('updateCarrierZone', reqData);\n      if(updateResp && updateResp.responseCode === 1){\n        await this.getCarrierZones();\n        await successAlert('Carrier zone updated successfully');\n        this.updateForm.reset();\n      } else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();    \n  }\n\n  delete = async(id: string) =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete this.')){\n        const deleteResp = await this.pricesService.deleteData('deleteCarrierZone', id);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCarrierZones();\n          await successAlert(\"Carrier zone deleted successfully\");\n        }else{\n          await errorAlert(\"Carrier zone deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n  deleteAll = async() =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete all zones in this carrier.')){\n        const deleteResp = await this.pricesService.deleteData('deleteAllCarrierZones', this.carrierID);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCarrierZones();\n          await successAlert(\"Zones are deleted successfully\");\n        }else{\n          await errorAlert(\"Zones deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n}","<div class=\"row justify-content-md-center\">\n    <div class=\"col-md-4\">\n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <div class=\"form-group\">\n                    <ng-select (change)=\"handleCarrierChange($event)\" appendTo=\"body\" placeholder=\"--- CARRIER ---\" searchable=\"true\">\n                        <ng-option *ngFor=\"let carrier of carriersList\" [value]=\"carrier.id\">{{carrier.carrier_name}}</ng-option>\n                    </ng-select>\n                </div>                    \n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<hr />\n<div class=\"row\" *ngIf=\"carrierID\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">                        \n                        <label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                                [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                                aria-controls=\"example1\" />\n                        </label>\n                        <button type=\"button\" *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>&nbsp;&nbsp;\n                        <button type=\"button\" *ngIf=\"userAccess.edit\" (click)=\"openModal(uploadModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-upload\"></i> Upload Prices</button>&nbsp;&nbsp;\n                        <button type=\"button\" *ngIf=\"userAccess.delete && list && list.length > 0\" class=\"btn btn-danger btn-sm action-button\" (click)=\"deleteAll()\"><i class=\"fa fa-trash\"></i> Delete All</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Zone</th>\n                                <th>Weight From</th>\n                                <th>Weight To</th>\n                                <th>Price Per KG</th>\n                                <th>Price Per KG(Medicine)</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { zone : search_string, country_name: search_string, country_code: search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.zone }}</td>\n                                <td>{{ data.weight_from }}</td>\n                                <td>{{ data.weight_to }}</td>\n                                <td>{{ data.price_per_kg }}</td>\n                                <td>{{ data.medicine_price_per_kg }}</td>\n                                <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\"><i class=\"fa fa-pencil\"></i></a>&nbsp;&nbsp;\n                                    <a *ngIf=\"userAccess.delete\" (click)=\"delete(data)\"><i class=\"fa fa-trash\"></i></a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW            \n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"zone\" class=\"label\">Zone*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"zone\" required>\n                        <div *ngIf=\"form?.zone?.invalid && (form?.zone?.dirty || form?.zone?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.zone?.errors?.required\">Please enter zone</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.zone?.errors?.maxlength|| form?.zone?.errors?.pattern\">Please enter valid zone</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_from\" class=\"label\">Weight From*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"weight_from\" required>\n                        <div *ngIf=\"form?.weight_from?.invalid && (form?.weight_from?.dirty || form?.weight_from?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.weight_from?.errors?.required\">Please enter weight from</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.weight_from?.errors?.maxlength || form?.weight_from?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_to\" class=\"label\">Weight To*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"weight_to\" required>\n                        <div *ngIf=\"form?.weight_to?.invalid && (form?.weight_to?.dirty || form?.weight_to?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.weight_to?.errors?.required\">Please enter weight to</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.weight_to?.errors?.maxlength || form?.weight_to?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"price_per_kg\" class=\"label\">Price Per KG*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"price_per_kg\" required>\n                        <div *ngIf=\"form?.price_per_kg?.invalid && (form?.price_per_kg?.dirty || form?.price_per_kg?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.price_per_kg?.errors?.required\">Please enter price</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.price_per_kg?.errors?.pattern\">Please enter valid price</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"medicine_price_per_kg\" class=\"label\">Medicine Price Per KG</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"medicine_price_per_kg\">\n                        <div *ngIf=\"form?.medicine_price_per_kg?.invalid && (form?.medicine_price_per_kg?.dirty || form?.medicine_price_per_kg?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.medicine_price_per_kg?.errors?.pattern\">Please enter valid price</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n                <button (click)=\"downloadSampleFile()\" class=\"btn btn-success\"><i class=\"fa fa-download\"></i> Sample File</button>\n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->\n<!-- UPLOAD MODAL -->\n<ng-template #uploadModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"uploadForm\" (ngSubmit)=\"uploadFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPLOAD PRICES            \n            <button id=\"close_upload_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"prices_file\" class=\"label\">Upload File(CSV, XLS, XLSX)*</label>\n                        <input type=\"file\" (change)=\"onFileSelect($event)\" class=\"form-control form-control-line\" formControlName=\"prices_file\" accept=\".csv,.xls,.xlsx\" required>\n                        <div *ngIf=\"upload_form?.prices_file?.invalid && (upload_form?.prices_file?.dirty || upload_form?.prices_file?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.prices_file?.errors?.required\">Please upload csv|xls|xlsx file</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.prices_file?.errors?.pattern\">Invalid file format</small>\n                        </div>\n                        <br />\n                        <button (click)=\"downloadSampleFile()\" class=\"btn btn-xs btn-success\"><i class=\"fa fa-download\"></i> Sample File</button>\n                    </div>              \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"uploadForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPLOAD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"zone\" class=\"control-label\">Zone*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"zone\">\n                        <div *ngIf=\"editForm?.zone?.invalid && (editForm?.zone?.dirty || editForm?.zone?.touched)\"\n                            class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.zone?.errors?.required\">Please enter zone</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.zone?.errors?.maxlength || editForm?.zone?.errors?.pattern\">Please enter valid zone</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_from\" class=\"label\">Weight From*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"weight_from\" required>\n                        <div *ngIf=\"editForm?.weight_from?.invalid && (editForm?.weight_from?.dirty || editForm?.weight_from?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.weight_from?.errors?.required\">Please enter weight from</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.weight_from?.errors?.maxlength || editForm?.weight_from?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_to\" class=\"label\">Weight To*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"weight_to\" required>\n                        <div *ngIf=\"editForm?.weight_to?.invalid && (editForm?.weight_to?.dirty || editForm?.weight_to?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.weight_to?.errors?.required\">Please enter weight to</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.weight_to?.errors?.maxlength || editForm?.weight_to?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"price_per_kg\" class=\"label\">Price Per KG*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"price_per_kg\" required>\n                        <div *ngIf=\"editForm?.price_per_kg?.invalid && (editForm?.price_per_kg?.dirty || editForm?.price_per_kg?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.price_per_kg?.errors?.required\">Please enter price</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.price_per_kg?.errors?.pattern\">Please enter valid price</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"medicine_price_per_kg\" class=\"label\">Medicine Price Per KG</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"medicine_price_per_kg\" required>\n                        <div *ngIf=\"editForm?.medicine_price_per_kg?.invalid && (editForm?.medicine_price_per_kg?.dirty || editForm?.medicine_price_per_kg?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"editForm?.medicine_price_per_kg?.errors?.pattern\">Please enter valid price</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" required>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { fileRegx, alnumRegx, floatRegx } from '../../helpers/regExp';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { successAlert, errorAlert, deleteConfirmAlert, changeConfirmAlert } from '../../helpers/sweetalert';\nimport { AccessService } from '../../services/access/access.service';\nimport { NbDialogService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-prices',\n  templateUrl: './prices.component.html',\n  styleUrls: ['./prices.component.scss']\n})\nexport class PricesComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  uploadForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  carriersList!: any;\n  list!: any;\n  carrierID!: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n  selectedFile: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private pricesService: PricesService,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('prices');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      zone: ['', [Validators.required, Validators.pattern(alnumRegx), Validators.maxLength(5)]],\n      weight_from: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      weight_to: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      price_per_kg: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      medicine_price_per_kg: ['', [Validators.pattern(floatRegx)]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      zone: ['', [Validators.required, Validators.pattern(alnumRegx), Validators.maxLength(5)]],\n      weight_from: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      weight_to: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      price_per_kg: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      medicine_price_per_kg: ['', [Validators.pattern(floatRegx)]],\n    });\n    this.uploadForm = this.formBuilder.group({\n      prices_file: ['', [Validators.required, Validators.pattern(fileRegx)]]\n    });\n\n    this.getCarriers();\n  }\n\n  get form(){ return this.addForm.controls }\n  get editForm(){ return this.updateForm.controls }\n  get upload_form(){ return this.uploadForm.controls }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data?.id,\n      zone: data?.zone,\n      weight_from: data?.weight_from,\n      weight_to: data?.weight_to,\n      price_per_kg: data?.price_per_kg,\n      medicine_price_per_kg: data?.medicine_price_per_kg\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  getCarriers = async() => {\n    let resp = await this.pricesService.getData('getCarriers');\n    if(resp && resp.carriers){\n      this.carriersList = resp.carriers;\n    }\n  }\n\n  getPrices = async(carrierID: any = this.carrierID) => {\n    let resp = await this.pricesService.getData('getPrices', {carrier_id: carrierID});\n    if(resp && resp.prices){\n      this.list = resp.prices;\n    }\n  }\n\n  handleCarrierChange = (carrierID: any) => {  \n    this.carrierID = carrierID;\n    this.getPrices(carrierID);    \n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFile = event.target.files;\n  }\n\n  downloadSampleFile = async() => {\n    if(await changeConfirmAlert('Want to download sample file')){\n      this.adminService.downLoadFiles('prices', 'sample-prices-file.csv');\n    }    \n  }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.addForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let reqData = {\n        ...this.addForm.value,\n        carrier_id: this.carrierID\n      };\n      const addResp = await this.pricesService.addOrUpdateData('addPrices', reqData);\n      if(addResp && addResp.responseCode === 1){\n        await this.getPrices();\n        await successAlert('Price added successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  uploadFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.uploadForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let formData = new FormData;\n      formData.append('carrier_id', this.carrierID);\n      formData.append('file_path', 'prices');\n      formData.append(\"prices_file\", this.selectedFile[0], this.selectedFile[0]['name']);\n      \n      const addResp = await this.pricesService.addOrUpdateData('uploadPrices', formData);\n      if(addResp && addResp.responseCode === 1){\n        this.selectedFile = '';\n        await this.getPrices();\n        await successAlert('Prices uploaded successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.uploadForm.reset();\n    document.getElementById(\"close_upload_modal\")?.click();    \n  }\n\n  updateFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.updateForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let reqData = {\n        ...this.updateForm.value,\n        carrier_id: this.carrierID,\n      };\n      const updateResp = await this.pricesService.addOrUpdateData('updatePrice', reqData);\n      if(updateResp && updateResp.responseCode === 1){\n        await this.getPrices();\n        await successAlert('Price details updated successfully');\n        this.updateForm.reset();\n      } else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();    \n  }\n\n  delete = async(data: any) =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete this.')){\n        const deleteResp = await this.pricesService.addOrUpdateData('deletePrice', {id: data.id, carrier_id: data.carrier_id});\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getPrices();\n          await successAlert(\"Price deleted successfully\");\n        }else{\n          await errorAlert(\"Price deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n  deleteAll = async() =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete all prices in this carrier.')){\n        const deleteResp = await this.pricesService.deleteData('deleteAllPrices', this.carrierID);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getPrices();\n          await successAlert(\"Prices are deleted successfully\");\n        }else{\n          await errorAlert(\"Prices deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <nb-card>\n            <nb-card-header>Add New</nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"product_name\" class=\"label\">Product Name*</label>\n                        <textarea class=\"form-control form-control-line\" formControlName=\"product_name\" required></textarea>\n                        <div *ngIf=\"form?.product_name?.invalid && (form?.product_name?.dirty || form?.product_name?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.required\">Please enter product name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.pattern\">Please enter valid product name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.maxlength\">Product name should be max 250 chars</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group\">\n                        <label for=\"hsn_code\" class=\"label\">HSN Code*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"hsn_code\" required>\n                        <div *ngIf=\"form?.hsn_code?.invalid && (form?.hsn_code?.dirty || form?.hsn_code?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.hsn_code?.errors?.required\">Please enter hsn code</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.hsn_code?.errors?.pattern\">Please enter valid hsn code</small>\n                        </div>\n                    </div>                    \n                    <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n        <nb-card>\n            <nb-card-header>\n                Upload Commodities\n                <button (click)=\"downloadSampleFile()\" class=\"btn btn-xs btn-success action-button\"><i class=\"fa fa-download\"></i> Sample File</button>\n            </nb-card-header>\n            <nb-card-body>\n                <form [formGroup]=\"uploadForm\" (ngSubmit)=\"uploadFormSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"commodity_file\" class=\"label\">Upload File(CSV, XLS, XLSX)*</label>\n                        <input type=\"file\" (change)=\"onFileSelect($event)\" class=\"form-control form-control-line\" formControlName=\"commodity_file\" accept=\".csv,.xls,.xlsx\" required>\n                        <div *ngIf=\"upload_form?.commodity_file?.invalid && (upload_form?.commodity_file?.dirty || upload_form?.commodity_file?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.commodity_file?.errors?.required\">Please upload csv|xls|xlsx file</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"upload_form?.commodity_file?.errors?.pattern\">Invalid file format</small>\n                        </div>\n                    </div>                    \n                    <button type=\"submit\" [disabled]=\"uploadForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Add</button>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-md-8 col-lg-8 col-xl-8\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button type=\"button\" *ngIf=\"userAccess.delete && list && list.length > 0\" class=\"btn btn-danger btn-sm\" (click)=\"deleteAll()\"><i class=\"fa fa-trash\"></i> Delete All</button>&nbsp;&nbsp;\n                        <label>\n                            <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string\"\n                                [(ngModel)]=\"search_string\" placeholder=\"Type to search...\"\n                                aria-controls=\"example1\" />\n                        </label>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Product Name</th>\n                                <th>HSN Code</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let data of list | filter: { product_name : search_string, hsn_code_name: search_string, hsn_code_code: search_string } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{ i + 1 }}</td>\n                                <td>{{ data.product_name }}</td>\n                                <td>{{ data.hsn_code }}</td>\n                                <td *ngIf=\"userAccess.edit\">\n                                    <a *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\"><i class=\"fa fa-pencil\"></i></a>&nbsp;&nbsp;\n                                    <a *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\"><i class=\"fa fa-trash\"></i></a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"justify-content-between\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"product_name\" class=\"label\">Product Name*</label>\n                        <textarea class=\"form-control form-control-line\" formControlName=\"product_name\" required></textarea>\n                        <div *ngIf=\"form?.product_name?.invalid && (form?.product_name?.dirty || form?.product_name?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.required\">Please enter product name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.pattern\">Please enter valid product name</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.product_name?.errors?.maxlength\">Product name should be max 250 chars</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-12\">\n                        <label for=\"hsn_code\" class=\"label\">HSN Code*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"hsn_code\" required>\n                        <div *ngIf=\"form?.hsn_code?.invalid && (form?.hsn_code?.dirty || form?.hsn_code?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.hsn_code?.errors?.required\">Please enter hsn code</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.hsn_code?.errors?.pattern\">Please enter valid hsn code</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" required>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->\n","import { Component, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { fileRegx, alnumRegx, alnumSpecialRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { successAlert, errorAlert, deleteConfirmAlert, changeConfirmAlert } from '../../helpers/sweetalert';\nimport { AccessService } from '../../services/access/access.service';\nimport { NbDialogService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-commodity-list',\n  templateUrl: './commodity-list.component.html',\n  styleUrls: ['./commodity-list.component.scss']\n})\nexport class CommodityListComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  uploadForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list!: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100'];\n  selectedFile: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('commodity-list');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    this.addForm = this.formBuilder.group({\n      product_name: ['', [Validators.required, Validators.pattern(nonHTMLRegx), Validators.maxLength(250)]],\n      hsn_code: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      product_name: ['', [Validators.required, Validators.pattern(nonHTMLRegx), Validators.maxLength(250)]],\n      hsn_code: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n    });\n    this.uploadForm = this.formBuilder.group({\n      commodity_file: ['', [Validators.required, Validators.pattern(fileRegx)]]\n    });\n\n    this.getCommodityList();\n  }\n\n  get form(){ return this.addForm.controls }\n  get editForm(){ return this.updateForm.controls }\n  get upload_form(){ return this.uploadForm.controls }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data?.id,\n      product_name: data?.product_name,\n      hsn_code: data?.hsn_code\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  getCommodityList = async() => {\n    let resp = await this.adminService.getData('getCommodityList');\n    if(resp && resp.commodity_list){\n      this.list = resp.commodity_list;\n    }\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFile = event.target.files;\n  }\n\n  downloadSampleFile = async() => {\n    if(await changeConfirmAlert('Want to download sample file')){\n      this.adminService.downLoadFiles('commodity-list', 'sample-commodity-file.csv');\n    }    \n  }\n\n  addFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.addForm.invalid){\n        this.submitted = false;\n        return;\n      }      \n      const addResp = await this.adminService.addOrUpdateData('addCommodity', this.addForm.value);\n      if(addResp && addResp.responseCode === 1){\n        await this.getCommodityList();\n        await successAlert('Details added successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  uploadFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.uploadForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      let formData = new FormData;\n      formData.append('file_path', 'commodity-list');\n      formData.append(\"commodity_file\", this.selectedFile[0], this.selectedFile[0]['name']);\n      const addResp = await this.adminService.addOrUpdateData('uploadCommodities', formData);\n      if(addResp && addResp.responseCode === 1){\n        this.selectedFile = '';\n        await this.getCommodityList();\n        await successAlert('Details uploaded successfully');\n      } else if(addResp && addResp.responseCode === 0){\n        await errorAlert(addResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.uploadForm.reset();\n    document.getElementById(\"close_add_modal\")?.click();    \n  }\n\n  updateFormSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if(this.updateForm.invalid){\n        this.submitted = false;\n        return;\n      }\n      const updateResp = await this.adminService.addOrUpdateData('updateCommodity', this.updateForm.value);\n      if(updateResp && updateResp.responseCode === 1){\n        await this.getCommodityList();\n        await successAlert('Details updated successfully');\n        this.updateForm.reset();\n      } else if(updateResp && updateResp.responseCode === 0){\n        await errorAlert(updateResp.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click();    \n  }\n\n  delete = async(id: string) =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete this.')){\n        const deleteResp = await this.adminService.deleteData('deleteCommodity', id);\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCommodityList();\n          await successAlert(\"Details deleted successfully\");\n        }else{\n          await errorAlert(\"Details deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n  deleteAll = async() =>{\n    try {\n      if(await deleteConfirmAlert('Want to delete all commodities.')){\n        const deleteResp = await this.adminService.addOrUpdateData('deleteAllCommodities', {});\n        if(deleteResp && deleteResp.responseCode === 1){\n          await this.getCommodityList();\n          await successAlert(\"Details are deleted successfully\");\n        }else{\n          await errorAlert(\"Details deleting has failed ! Please try again\");\n        }\n      }\n    } catch (error) {\n      await errorAlert(\"Something went wrong ! Please try again\");\n    }\n  }\n\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[trim-string]'\r\n})\r\nexport class TrimDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('change', ['$event']) onChange() {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.trim().replace(/\\s\\s+/g, ' ');\r\n  }\r\n\r\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'input[allowOnlyNumbers]'\r\n})\r\nexport class NumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[capital-string]'\r\n})\r\nexport class CapitalStringDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('change', ['$event']) onChange() {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.toUpperCase();\r\n  }\r\n\r\n}","<div class=\"row shipments\">\n    <div class=\"col-md-12\" id=\"shipment-details\">\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n            <nb-card>\n                <nb-card-header>\n                    ADD SHIPMENT\n                </nb-card-header>\n                <nb-card-body>\n                    <div class=\"form-row\">\n                        <div *ngIf=\"showBranchField\" class=\"form-group col-md-3\">\n                            <label for=\"branch\" class=\"control-label\">Branch*</label>\n                            <ng-select appendTo=\"body\" formControlName=\"branch\" placeholder=\"--- Branch ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.branch?.invalid && (form?.branch?.dirty || form?.branch?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.branch?.errors?.required\">Please select a branch</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice_number\" class=\"control-label\">Invoice Number*</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"invoice_number\" trim-string>\n                            <div *ngIf=\"form?.invoice_number?.invalid && (form?.invoice_number?.dirty || form?.invoice_number?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.invoice_number?.errors?.required\">Please enter invoice number</small>\n                                <small *ngIf=\"form?.invoice_number?.errors?.pattern\">Please enter valid invoice number</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"date\" class=\"control-label\">Date*</label>\n                            <input type=\"date\" class=\"form-control\" formControlName=\"date\">\n                            <div *ngIf=\"form?.date?.invalid && (form?.date?.dirty || form?.date?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.date?.errors?.required\">Please enter date</small>\n                                <small *ngIf=\"form?.date?.errors?.pattern\">Please enter valid date</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"service_type\" class=\"control-label\">Service Type*</label>\n                            <ng-select appendTo=\"body\" (change)=\"getPricesUsingCountryAndCarrrier()\" formControlName=\"service_type\" placeholder=\"--- Select ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let carrier of carriersList\" [value]=\"carrier.id\">{{carrier.carrier_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.service_type?.invalid && (form?.service_type?.dirty || form?.service_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.service_type?.errors?.required\">Please select service type</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"destination_country\" class=\"control-label\">Destination Country*</label>\n                            <ng-select appendTo=\"body\" (change)=\"getPricesUsingCountryAndCarrrier(); getPincodeDetails('reciever');\" formControlName=\"destination_country\" placeholder=\"--- Country ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let country of countriesList\" [value]=\"country.country_code\">{{country.country_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.destination_country?.invalid && (form?.destination_country?.dirty || form?.destination_country?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.destination_country?.errors?.required\">Please select a country</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"shipment_type\" class=\"control-label\">Shipment Type*</label>\n                            <select formControlName=\"shipment_type\" (change)=\"checkTotalCommodityValue()\" class=\"form-control\">\n                                <option value=\"B2B\">B2B</option>\n                                <option value=\"B2C\">B2C</option>\n                                <option value=\"C2C\">C2C</option>\n                            </select>\n                            <div *ngIf=\"form?.shipment_type?.invalid && (form?.shipment_type?.dirty || form?.shipment_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.shipment_type?.errors?.required\">Please select shipment type</small>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"no_of_pieces\" class=\"control-label\">No Of Pieces*</label>\n                            <input type=\"tel\" (change)=\"handleNumberOfPiecesChange()\" formControlName=\"no_of_pieces\" class=\"form-control\" allowOnlyNumbers>\n                            <div *ngIf=\"form?.no_of_pieces?.invalid && (form?.no_of_pieces?.dirty || form?.no_of_pieces?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.required\">Please enter no of pieces</small>\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.pattern\">Please enter valid number</small>\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.incorrect\">No of pieces not matching</small>\n                            </div>\n                        </div>\n                    </div>   \n                    <ng-container formArrayName=\"boxes_details\">\n                        <div class=\"form-row boxes_details\" *ngFor=\"let data of boxes_details().controls; let i = index\" [formGroupName]=\"i\">\n                            <div class=\"form-group col-md-2\">\n                                <label for=\"box_weight\" class=\"control-label\">Box*</label>\n                                <select formControlName=\"box_weight\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\">\n                                    <option value=\"3KG\">3KG</option>\n                                    <option value=\"5KG\">5KG</option>\n                                    <option value=\"10KG\">10KG</option>\n                                    <option value=\"15KG\">15KG</option>\n                                    <option value=\"CUSTOM\">CUSTOM</option>\n                                </select>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['box_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['box_weight']?.dirty || getBoxDetailsFormGroup(i).controls['box_weight']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['box_weight']?.errors?.required\">Select box weight</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                                <label for=\"actual_weight\" class=\"control-label\">Actual Weight*</label>\n                                <input type=\"text\" formControlName=\"actual_weight\" trim-string (change)=\"handleBoxDetailsChange()\" class=\"form-control\">\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['actual_weight']?.dirty || getBoxDetailsFormGroup(i).controls['actual_weight']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.errors?.required\">Enter actual weight</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.errors?.pattern\">Enter valid weight</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-1\">\n                                <label for=\"width\" class=\"control-label\">Width*</label>\n                                <input type=\"text\" formControlName=\"width\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.invalid && (getBoxDetailsFormGroup(i).controls['width']?.dirty || getBoxDetailsFormGroup(i).controls['width']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.errors?.required\">Enter width</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.errors?.pattern\">Invalid width</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-1\">\n                                <label for=\"length\" class=\"control-label\">Length*</label>\n                                <input type=\"text\" formControlName=\"length\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.invalid && (getBoxDetailsFormGroup(i).controls['length']?.dirty || getBoxDetailsFormGroup(i).controls['length']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.errors?.required\">Enter length</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.errors?.pattern\">Invalid length</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-1\">\n                                <label for=\"height\" class=\"control-label\">Height*</label>\n                                <input type=\"text\" formControlName=\"height\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.invalid && (getBoxDetailsFormGroup(i).controls['height']?.dirty || getBoxDetailsFormGroup(i).controls['height']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.errors?.required\">Enter height</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.errors?.pattern\">Invalid height</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                                <label for=\"valumetric_weight\" class=\"control-label\">Vol Weight*</label>\n                                <input type=\"text\" formControlName=\"valumetric_weight\" class=\"form-control\" readonly>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['valumetric_weight']?.dirty || getBoxDetailsFormGroup(i).controls['valumetric_weight']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.errors?.required\">Enter vol weight</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.errors?.pattern\">Enter valid weight</small>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-2\">\n                                <label for=\"chargeable_weight\" class=\"control-label\">Char Weight*</label>\n                                <input type=\"text\" formControlName=\"chargeable_weight\" class=\"form-control\" readonly>\n                                <div *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['chargeable_weight']?.dirty || getBoxDetailsFormGroup(i).controls['chargeable_weight']?.touched)\" class=\"error\">\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.errors?.required\">Enter chargeable weight</small>\n                                    <small *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.errors?.pattern\">Enter valid weight</small>\n                                </div>\n                            </div>\n                        </div>     \n                    </ng-container>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"actual_weight\" class=\"control-label\">Actual Weight  (Kg)*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"actual_weight\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.actual_weight?.invalid && (form?.actual_weight?.dirty || form?.actual_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.actual_weight?.errors?.required\">Please enter actual weight</small>\n                                <small *ngIf=\"form?.actual_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"valumetric_weight\" class=\"control-label\">Volumetric Weight*</label>\n                            <input type=\"text\" formControlName=\"valumetric_weight\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.valumetric_weight?.invalid && (form?.valumetric_weight?.dirty || form?.valumetric_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.valumetric_weight?.errors?.required\">Please enter weight</small>\n                                <small *ngIf=\"form?.valumetric_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"chargable_weight\" class=\"control-label\">Chargable Weight*</label>\n                            <input type=\"text\" formControlName=\"chargable_weight\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.chargable_weight?.invalid && (form?.chargable_weight?.dirty || form?.chargable_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.chargable_weight?.errors?.required\">Please enter weight</small>\n                                <small *ngIf=\"form?.chargable_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-sm-4 col-md-4 col-lg-3\">\n                            <label for=\"medicine_shipment\" class=\"control-label\">Is This Medicine Shipment*</label>\n                            <select (change)=\"calculatePrices()\" formControlName=\"medicine_shipment\" class=\"form-control\">\n                                <option value=\"YES\">YES</option>\n                                <option value=\"NO\">NO</option>\n                            </select>\n                            <div *ngIf=\"form?.medicine_shipment?.invalid && (form?.medicine_shipment?.dirty || form?.medicine_shipment?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.medicine_shipment?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"product_type\" class=\"control-label\">Product Type*</label>\n                            <select formControlName=\"product_type\" class=\"form-control\">\n                                <option value=\"NON DOCS\">NON DOCS</option>\n                                <option value=\"DOCS\">DOCS</option>\n                            </select>\n                            <div *ngIf=\"form?.product_type?.invalid && (form?.product_type?.dirty || form?.product_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.product_type?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                                                \n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"basic_amount\" class=\"control-label\">Basic Charges*</label>\n                            <input type=\"text\" formControlName=\"basic_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.basic_amount?.invalid && (form?.basic_amount?.dirty || form?.basic_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.basic_amount?.errors?.required\">Please enter basic charges</small>\n                                <small *ngIf=\"form?.basic_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"commercial_charges_amount\" class=\"control-label\">Commercial Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"commercial_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.commercial_charges_amount?.invalid && (form?.commercial_charges_amount?.dirty || form?.commercial_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.commercial_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"jewellery_appraisal_amount\" class=\"control-label\">Jewellery Appraisal*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"jewellery_appraisal_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.jewellery_appraisal_amount?.invalid && (form?.jewellery_appraisal_amount?.dirty || form?.jewellery_appraisal_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.jewellery_appraisal_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"pickup_charges_amount\" class=\"control-label\">Pickup Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"pickup_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.pickup_charges_amount?.invalid && (form?.pickup_charges_amount?.dirty || form?.pickup_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.pickup_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"packing_charges_amount\" class=\"control-label\">Packing Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"packing_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.packing_charges_amount?.invalid && (form?.packing_charges_amount?.dirty || form?.packing_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.packing_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"gst_amount\" class=\"control-label\">GST(18%)*</label>\n                            <input type=\"text\" formControlName=\"gst_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.gst_amount?.invalid && (form?.gst_amount?.dirty || form?.gst_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.gst_amount?.errors?.required\">Please enter GST</small>\n                                <small *ngIf=\"form?.gst_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"other_amount\" class=\"control-label\">Others*</label>\n                            <input type=\"text\" (change)=\"handlePriceChange()\" formControlName=\"other_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.other_amount?.invalid && (form?.other_amount?.dirty || form?.other_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.other_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"total_amount\" class=\"control-label\">Total Amount*</label>\n                            <input type=\"text\" formControlName=\"total_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.total_amount?.invalid && (form?.total_amount?.dirty || form?.total_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.total_amount?.errors?.required\">Please enter total amount</small>\n                                <small *ngIf=\"form?.total_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Payment*</label>\n                            <select formControlName=\"mode_of_payment\" (change)=\"handleChangeModeOfPayment()\" class=\"form-control\">\n                                <option value=\"CASH\">CASH</option>\n                                <option value=\"DEBIT/CREDIT CARD\">DEBIT/CREDIT CARD</option>\n                                <option value=\"UPI\">UPI</option>\n                                <option value=\"OTHERS\">OTHERS</option>\n                            </select>\n                            <div *ngIf=\"form?.mode_of_payment?.invalid && (form?.mode_of_payment?.dirty || form?.mode_of_payment?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.mode_of_payment?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"transaction_id\" class=\"control-label\">Transaction ID</label>\n                            <input type=\"text\" (blur)=\"handleChangeModeOfPayment()\" formControlName=\"transaction_id\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.transaction_id?.invalid && (form?.transaction_id?.dirty || form?.transaction_id?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                                <small *ngIf=\"form?.transaction_id?.errors?.pattern\">Please enter valid transaction id</small>\n                            </div>\n                        </div>                                                \n                    </div>\n                    <hr />\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h6 class=\"sub-heading-text\">SENDER INFO</h6><hr />\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_name\" class=\"col-md-4 col-form-label\">Sender Name*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_name\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_name?.invalid && (form?.sender_name?.dirty || form?.sender_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_name?.errors?.required\">Please enter sender name</small>\n                                            <small *ngIf=\"form?.sender_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_company_name\" class=\"col-md-4 col-form-label\">Company Name</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_company_name\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_company_name?.errors?.invalid && (form?.sender_company_name?.dirty || form?.sender_company_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_company_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address1\" class=\"col-md-4 col-form-label\">Address Line1*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address1\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_address1?.invalid && (form?.sender_address1?.dirty || form?.sender_address1?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address1?.errors?.required\">Please enter address line1</small>\n                                            <small *ngIf=\"form?.sender_address1?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address2\" class=\"col-md-4 col-form-label\">Address Line2*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address2\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_address2?.invalid && (form?.sender_address2?.dirty || form?.sender_address2?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address2?.errors?.required\">Please enter address line2</small>\n                                            <small *ngIf=\"form?.sender_address2?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address3\" class=\"col-md-4 col-form-label\">Address Line3</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address3\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_address3?.errors?.invalid && (form?.sender_address3?.dirty || form?.sender_address3?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address3?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_pincode\" class=\"col-md-4 col-form-label\">Postal Code*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" (change)=\"getPincodeDetails()\" formControlName=\"sender_pincode\" class=\"form-control\" trim-string>\n                                        <div *ngIf=\"form?.sender_pincode?.invalid && (form?.sender_pincode?.dirty || form?.sender_pincode?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_pincode?.errors?.required\">Please enter pincode</small>\n                                            <small *ngIf=\"form?.sender_pincode?.errors?.pattern\">Please enter valid pincode</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_city\" class=\"col-md-4 col-form-label\">City*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_city\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.sender_city?.invalid && (form?.sender_city?.dirty || form?.sender_city?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_city?.errors?.required\">Please enter city</small>\n                                            <small *ngIf=\"form?.sender_city?.errors?.pattern\">Please enter valid city</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_state\" class=\"col-md-4 col-form-label\">State*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_state\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.sender_state?.invalid && (form?.sender_state?.dirty || form?.sender_state?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_state?.errors?.required\">Please enter state</small>\n                                            <small *ngIf=\"form?.sender_state?.errors?.pattern\">Please enter valid state</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_phone_number\" class=\"col-md-4 col-form-label\">Phone Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" formControlName=\"sender_phone_number\" class=\"form-control\">\n                                        <div *ngIf=\"form?.sender_phone_number?.invalid && (form?.sender_phone_number?.dirty || form?.sender_phone_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_phone_number?.errors?.required\">Please enter phone number</small>\n                                            <small *ngIf=\"form?.sender_phone_number?.errors?.pattern\">Please enter valid phone number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_email\" class=\"col-md-4 col-form-label\">Email ID</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"email\" formControlName=\"sender_email\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_email?.invalid && (form?.sender_email?.dirty || form?.sender_email?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_email?.errors?.pattern\">Please enter valid email</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_type\" class=\"col-md-4 col-form-label\">ID Type*</label>\n                                    <div class=\"col-md-8\">\n                                        <select (change)=\"validateIDProof()\" formControlName=\"sender_id_proof_type\" class=\"form-control\">\n                                            <option value=\"\">Select</option>\n                                            <option value=\"AADHAR\">AADHAR</option>\n                                            <option value=\"PAN CARD\">PAN CARD</option>\n                                            <option value=\"GSTN\">GSTN</option>\n                                            <option value=\"PASSPORT\">PASSPORT</option>\n                                            <option value=\"OTHERS\">OTHERS</option>\n                                        </select>\n                                        <div *ngIf=\"form?.sender_id_proof_type?.invalid && (form?.sender_id_proof_type?.dirty || form?.sender_id_proof_type?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_id_proof_type?.errors?.required\">Please select a value</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_number\" class=\"col-md-4 col-form-label\">ID Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" (change)=\"validateIDProof()\" formControlName=\"sender_id_proof_number\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.sender_id_proof_number?.invalid && (form?.sender_id_proof_number?.dirty || form?.sender_id_proof_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_id_proof_number?.errors?.required\">Please enter document number</small>\n                                            <small *ngIf=\"form?.sender_id_proof_number?.errors?.pattern\">Please enter valid id number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <h6 class=\"sub-heading-text\">RECEIVER INFO</h6><hr />\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_name\" class=\"col-md-4 col-form-label\">Receiver Name*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_name\" class=\"form-control\" trim-string  capital-string>\n                                        <div *ngIf=\"form?.receiver_name?.invalid && (form?.receiver_name?.dirty || form?.receiver_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_name?.errors?.required\">Please enter receiver name</small>\n                                            <small *ngIf=\"form?.receiver_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_company_name\" class=\"col-md-4 col-form-label\">Company Name</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_company_name\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.receiver_company_name?.invalid && (form?.receiver_company_name?.dirty || form?.receiver_company_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_company_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address1\" class=\"col-md-4 col-form-label\">Address Line1*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address1\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.receiver_address1?.invalid && (form?.receiver_address1?.dirty || form?.receiver_address1?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address1?.errors?.required\">Please enter address line1</small>\n                                            <small *ngIf=\"form?.receiver_address1?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address2\" class=\"col-md-4 col-form-label\">Address Line2*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address2\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.receiver_address2?.invalid && (form?.receiver_address2?.dirty || form?.receiver_address2?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address2?.errors?.required\">Please enter address line2</small>\n                                            <small *ngIf=\"form?.receiver_address2?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address3\" class=\"col-md-4 col-form-label\">Address Line3</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address3\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.receiver_address3?.invalid && (form?.receiver_address3?.dirty || form?.receiver_address3?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address3?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_pincode\" class=\"col-md-4 col-form-label\">Postal Code*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" (change)=\"getPincodeDetails('reciever')\" formControlName=\"receiver_pincode\" class=\"form-control\">\n                                        <div *ngIf=\"form?.receiver_pincode?.invalid && (form?.receiver_pincode?.dirty || form?.receiver_pincode?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.required\">Please enter pincode</small>\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.minLength\">Please enter valid pincode</small>\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.pattern\">Please enter valid pincode</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_city\" class=\"col-md-4 col-form-label\">City*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_city\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.receiver_city?.invalid && (form?.receiver_city?.dirty || form?.receiver_city?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_city?.errors?.required\">Please enter city</small>\n                                            <small *ngIf=\"form?.receiver_city?.errors?.pattern\">Please enter valid city</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_state\" class=\"col-md-4 col-form-label\">State*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_state\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.receiver_state?.invalid && (form?.receiver_state?.dirty || form?.receiver_state?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_state?.errors?.required\">Please enter state</small>\n                                            <small *ngIf=\"form?.receiver_state?.errors?.pattern\">Please enter valid state</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_phone_number\" class=\"col-md-4 col-form-label\">Phone Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" formControlName=\"receiver_phone_number\" class=\"form-control\" trim-string>\n                                        <div *ngIf=\"form?.receiver_phone_number?.invalid && (form?.receiver_phone_number?.dirty || form?.receiver_phone_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.required\">Please enter phone number</small>\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.pattern\">Please enter valid phone number</small>\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.minlength\">Please enter valid phone number</small>\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.maxlength\">Please enter valid phone number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_email\" class=\"col-md-4 col-form-label\">Email ID</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"email\" formControlName=\"receiver_email\" class=\"form-control\" trim-string capital-string>\n                                        <div *ngIf=\"form?.receiver_email?.invalid && (form?.receiver_email?.dirty || form?.receiver_email?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_email?.errors?.pattern\">Please enter valid email</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <p class=\"justify-content-between\">COMMODITY LIST/PRODUCT LIST</p>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th style=\"max-width: 50px;\">S.No</th>\n                                    <th style=\"min-width: 100px;\">Box No</th>\n                                    <th style=\"max-width: 250px;\">Name Of The Product</th>\n                                    <th style=\"min-width: 150px;\">HSN Code</th>\n                                    <th style=\"min-width: 100px; max-width: 150px;\">Country</th>\n                                    <th>Quantity</th>\n                                    <th style=\"min-width: 120px;\">UOM</th>\n                                    <th style=\"min-width: 100px;\">Unit Price</th>\n                                    <th>Commodity Value</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container formArrayName=\"commodity_list\">\n                                    <tr *ngFor=\"let data of commodity_list().controls; let i = index\" [formGroupName]=\"i\">\n                                        <td>{{i + 1}}</td>\n                                        <td>\n                                            <input type=\"text\" allowOnlyNumbers (change)=\"handleBoxNoChange($event, i)\" formControlName=\"box_number\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.invalid && (getCommodityFormGroup(i).controls['box_number']?.dirty || getCommodityFormGroup(i).controls['box_number']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.required\">Enter box no</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.pattern\">Enter valid no</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.maxValue\">Enter valid box no</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <ng-select class=\"min-250 max-250\" appendTo=\"body\" [addTag]=\"createNewCommodityOption\" (change)=\"handleChangeCommodity($event, i)\" formControlName=\"commodity_name\" placeholder=\"--- Select ---\" searchable=\"true\">\n                                                <ng-option *ngFor=\"let commodity of commodityList\" [value]=\"commodity.product_name\">{{commodity.product_name}}</ng-option>\n                                            </ng-select>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['commodity_name']?.invalid && (getCommodityFormGroup(i).controls['commodity_name']?.dirty || getCommodityFormGroup(i).controls['commodity_name']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_name']?.errors?.required\">Enter product name</small>\n                                            </div>\n                                        </td> \n                                        <td>\n                                            <input type=\"text\" formControlName=\"hsn_code\" class=\"form-control\" trim-string>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.invalid && (getCommodityFormGroup(i).controls['hsn_code']?.dirty || getCommodityFormGroup(i).controls['hsn_code']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.errors?.required\">Enter hsn code</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.errors?.pattern\">Enter valid hsn code</small>\n                                            </div>\n                                        </td>                                       \n                                        <td>\n                                            <input type=\"text\" formControlName=\"country\" class=\"form-control\" readonly>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['country']?.invalid && (getCommodityFormGroup(i).controls['country']?.dirty || getCommodityFormGroup(i).controls['country']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['country']?.errors?.required\">Enter country</small>\n                                            </div>\n                                        </td>                                        \n                                        <td>\n                                            <input type=\"text\" (change)=\"calculateCommodityValue(i)\" formControlName=\"quantity\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.invalid && (getCommodityFormGroup(i).controls['quantity']?.dirty || getCommodityFormGroup(i).controls['quantity']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.errors?.required\">Enter quantity</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.errors?.pattern\">Enter valid quantity</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <select formControlName=\"uom\" class=\"form-control\">\n                                                <option value=\"PIECES\" selected>PIECES</option>\n                                                <option value=\"SET\">SET</option>\n                                                <option value=\"PAIR\">PAIR</option>\n                                                <option value=\"PACKAGE\">PACKAGE</option>\n                                                <option value=\"DOZENS\">DOZENS</option>\n                                                <option value=\"LITERS\">LITERS</option>\n                                                <option value=\"OTHERS\">OTHERS</option>\n                                            </select>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['uom']?.invalid && (getCommodityFormGroup(i).controls['uom']?.dirty || getCommodityFormGroup(i).controls['uom']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['uom']?.errors?.required\">Select UOM</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" (change)=\"calculateCommodityValue(i)\" formControlName=\"unit_price\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.invalid && (getCommodityFormGroup(i).controls['unit_price']?.dirty || getCommodityFormGroup(i).controls['unit_price']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.errors?.required\">Enter unit price</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.errors?.pattern\">Enter valid price</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" formControlName=\"commodity_value\" class=\"form-control\" readonly>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.invalid && (getCommodityFormGroup(i).controls['commodity_value']?.dirty || getCommodityFormGroup(i).controls['commodity_value']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.errors?.required\">Enter commodity value</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.errors?.pattern\">Enter valid value</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <a (click)=\"removeCommodity(i)\"><i *ngIf=\"i > 0\" class=\"fa fa-trash\"></i></a>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colspan=\"8\" class=\"text-right\"><strong>Total Commodity Value</strong></td>\n                                    <td colspan=\"2\"><strong>{{totalCommodityValue}}</strong></td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                        <a (click)=\"addCommodity()\"><span class=\"badge badge-primary mb-10 padding-5\"><i class=\"fa fa-plus\"></i> Add More</span></a>\n                    </div>                    \n                    <div class=\"form-row mt-10\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"commodity_items_summery\" class=\"control-label\">Summery Of The Items*</label>\n                            <textarea formControlName=\"commodity_items_summery\" class=\"form-control\" trim-string capital-string></textarea>\n                            <div *ngIf=\"form?.commodity_items_summery?.invalid && (form?.commodity_items_summery?.dirty || form?.commodity_items_summery?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.commodity_items_summery?.errors?.required\">Please enter items summery</small>\n                                <small *ngIf=\"form?.commodity_items_summery?.errors?.pattern\">Please enter valid items summery</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-6\">\n                            <label for=\"remarks\" class=\"control-label\">Remarks(If Any)</label>\n                            <textarea formControlName=\"remarks\" class=\"form-control\" trim-string capital-string></textarea>\n                            <div *ngIf=\"form?.remarks?.invalid && (form?.remarks?.dirty || form?.remarks?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.remarks?.errors?.pattern\">Please enter valid remarks</small>\n                            </div>\n                        </div>                                                \n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"kyc_doc\" class=\"control-label\">Upload KYC</label>\n                            <input type=\"file\" formControlName=\"kyc_doc\" (change)=\"onFileSelect($event)\" class=\"form-control\" multiple>\n                        </div>                                               \n                    </div>\n                    <hr />\n                    <!-- <pre><code>{{ getAllErrors(addForm) | json }}</code></pre> -->\n                <button [disabled]=\"c2cMaxAmountReached || submitted\" class=\"btn btn-primary btn-sm waves-effect waves-light action-button\" type=\"submit\">Submit</button>\n                </nb-card-body>\n            </nb-card>\n        </form>\n    </div>\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx, alnumSpecialRegx, pincodeRegx, numRegx, floatRegx, alnumRegx, emailRegx, nonHTMLRegx, adhaarRegx, panCardRegx, gstnRegx, passportRegx, floatWithNegativeRegx } from '../../helpers/regExp';\nimport { successAlert, errorAlert, warning } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { getSumByKey, roundOffWeight } from '../../helpers/common';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'ngx-add-shipments',\n  templateUrl: './add-shipments.component.html',\n  styleUrls: ['./add-shipments.component.scss']\n})\nexport class AddShipmentsComponent implements OnInit {\n\n  private countriesWithoutZip = environment.COUNTRIES_WITHOUT_POSTAL_CODE;\n  addForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  displayMap: Boolean = false;\n  selectedFiles: any;\n  currentUserData: any;\n  userBranch: any;\n  branchesList: any;\n  countriesList: any;\n  currentDate: any = new Date().toISOString().split('T')[0];\n  commodityDetails!: FormArray;\n  commodityList: any;\n  carriersList: any;\n  pricesList: any = [];\n  showBranchField: boolean = true;\n  formErrors: { [key: string]: any; };\n  showCustomDimentionsField: boolean = false;\n  noOfPieces: number = 0;\n  commoditiesLength: number = 0;\n  boxDetails: FormArray;\n  boxesCount: number = 0;\n  addFormInitialValues: any;\n  c2cMaxAmountReached : boolean = false;\n  totalCommodityValue: any = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private authenticateService: AuthenticateService,\n    private pricesService: PricesService,\n    private dialogService: NbDialogService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('add-shipments');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n    \n    this.toggleSidebar();\n    this.getBranchesList();\n    this.getCarriers();    \n    this.getCountries();    \n    this.getCommodityList();    \n    \n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData.role_type !== 'Super-Admin'){\n      this.userBranch = this.currentUserData.branch_id;\n      this.showBranchField = false;\n    }    \n    this.addForm = this.formBuilder.group({\n      branch: [this.userBranch, [Validators.required]],\n      invoice_number: ['', [Validators.required]],\n      date: [this.currentDate, [Validators.required]],\n      service_type: ['', [Validators.required]],\n      destination_country: ['US', [Validators.required]],\n      shipment_type: ['C2C', [Validators.required]],\n      no_of_pieces: ['', [Validators.required, Validators.pattern(numRegx), Validators.maxLength(4)]],\n      boxes_details: this.formBuilder.array([]),\n      actual_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      valumetric_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      chargable_weight: [0, [Validators.required, Validators.pattern(floatRegx)]], \n      medicine_shipment: ['NO', [Validators.required]],     \n      product_type: ['NON DOCS', [Validators.required]],\n      basic_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      commercial_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      jewellery_appraisal_amount: [0, [Validators.pattern(floatRegx)]],\n      pickup_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      packing_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      gst_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      other_amount: [0, [Validators.pattern(floatWithNegativeRegx)]],      \n      total_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      mode_of_payment: ['CASH', [Validators.required]],\n      transaction_id: ['', [Validators.pattern(nonHTMLRegx)]],\n      sender_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      sender_company_name: ['', [Validators.pattern(alnumRegx)]],\n      sender_address1: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      sender_address2: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      sender_address3: ['', [Validators.pattern(addressRegx)]],\n      sender_pincode: ['', [Validators.required, Validators.pattern(pincodeRegx)]],\n      sender_country: ['INDIA', [Validators.required, Validators.pattern(alphaRegx)]],\n      sender_state: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      sender_city: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      sender_phone_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      sender_email: ['', [Validators.pattern(emailRegx)]],\n      sender_id_proof_type: ['', [Validators.required]],\n      sender_id_proof_number: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      receiver_name: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n      receiver_company_name: ['', [Validators.pattern(alnumRegx)]],\n      receiver_address1: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      receiver_address2: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      receiver_address3: ['', [Validators.pattern(addressRegx)]],\n      receiver_pincode: ['', [Validators.required, Validators.minLength(3)]],\n      receiver_state: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      receiver_city: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      receiver_phone_number: ['', [Validators.required, Validators.pattern(numRegx), Validators.minLength(7), Validators.maxLength(15)]],\n      receiver_email: ['', [Validators.pattern(emailRegx)]],\n      commodity_list: this.formBuilder.array([this.newCommodityFields()]),\n      commodity_items_summery: ['', [Validators.required]],\n      remarks: ['', [Validators.pattern(alnumSpecialRegx)]],\n      kyc_doc: [''],\n    });\n    this.commodityDetails = this.addForm.get(\"commodity_list\") as FormArray;\n    this.boxDetails = this.addForm.get(\"boxes_details\") as FormArray;\n    this.addFormInitialValues = this.addForm.value;\n  }\n  \n  getAllErrors(form: FormGroup | FormArray): { [key: string]: any; } | null {\n    let hasError = false;\n    const result = Object.keys(form.controls).reduce((acc, key) => {\n        const control = form.get(key);\n        const errors = (control instanceof FormGroup || control instanceof FormArray)\n            ? this.getAllErrors(control)\n            : control.errors;\n        if (errors) {\n            acc[key] = errors;\n            hasError = true;\n        }\n        return acc;\n    }, {} as { [key: string]: any; });\n    return hasError ? result : null;\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  getCommodityFormGroup(index: number): FormGroup {\n    this.commodityDetails = this.addForm.get('commodity_list') as FormArray;\n    const formGroup = this.commodityDetails.controls[index] as FormGroup;\n    return formGroup; \n  }\n\n  commodity_list(): FormArray {\n    return this.addForm.get(\"commodity_list\") as FormArray;\n  }\n\n  newCommodityFields(): FormGroup {\n    return this.formBuilder.group({\n      box_number: ['', [Validators.required, Validators.pattern(numRegx)]],\n      commodity_name: ['', [Validators.required]],\n      hsn_code: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n      country: ['INDIA', [Validators.required]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      uom: ['PIECES', [Validators.required]],\n      unit_price: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      commodity_value: ['', [Validators.required, Validators.pattern(floatRegx)]],\n    })\n  }\n\n  addCommodity() {  \n    this.commodityDetails.push(this.newCommodityFields());\n    this.commoditiesLength = (this.commodityDetails.value).length;\n  }\n\n  removeCommodity(index: number) {\n    this.commodityDetails.removeAt(index);\n    this.commoditiesLength = (this.commodityDetails.value).length;\n    let commodityNamesArray = this.commodityDetails.value.map((val: any) => { \n      let commodityVal = (val.commodity_name).split('(');\n      return commodityVal[0]; \n    });\n    this.addForm.controls['commodity_items_summery'].setValue(commodityNamesArray.slice(0, 3).join(','));\n    this.checkTotalCommodityValue();\n  }\n\n  ///////////// HANDLING DYNAMIC BOXES DETAILS /////////////\n  handleNumberOfPiecesChange = () => {\n    let no_of_pieces = parseInt(this.addForm.value.no_of_pieces);\n    if(this.boxesCount < no_of_pieces){\n      for(let i=this.boxesCount; i < no_of_pieces; i++){\n        this.addBoxDetails();\n      }\n    }else if(this.boxesCount > no_of_pieces){\n      for(let i=this.boxesCount; i >= no_of_pieces; i--){\n        this.removeBoxDetails(i);\n      }\n    }\n  }\n\n  handleBoxDetailsChange = () => {\n    let totalActualWeight: any = 0;\n    let totalVolumetricWeight: any = 0;\n    let totalChargeableWeight: any = 0;\n    this.boxDetails.value.map((data: any, index: any) => {\n      let boxWeight = data.box_weight;\n      let width: number;\n      let length: number;\n      let height: number;\n      if(boxWeight){\n        if(boxWeight === '3KG'){\n          width = 30;\n          length = 21;\n          height = 21;\n        }else if(boxWeight === '5KG'){\n          width = 36;\n          length = 26;\n          height = 26;\n        }else if(boxWeight === '10KG'){\n          width = 40;\n          length = 35;\n          height = 35;\n        }else if(boxWeight === '15KG'){\n          width = 60;\n          length = 35;\n          height = 35;\n        }else if(boxWeight === 'CUSTOM'){\n          width = data.width;\n          length = data.length;\n          height = data.height;\n        }\n      }\n      this.getBoxDetailsFormGroup(index).controls['width'].setValue(width);\n      this.getBoxDetailsFormGroup(index).controls['length'].setValue(length);\n      this.getBoxDetailsFormGroup(index).controls['height'].setValue(height);\n      let valumetricWeight: any = 0;\n      let actualWeight: any = data.actual_weight ? parseFloat(data.actual_weight) : 0;\n      if(width && length && height){\n        valumetricWeight = (width*length*height)/5000;\n      }\n      let chargeableWeight = roundOffWeight(actualWeight > valumetricWeight ? actualWeight : valumetricWeight);\n      this.getBoxDetailsFormGroup(index).controls['valumetric_weight'].setValue(roundOffWeight(valumetricWeight));\n      this.getBoxDetailsFormGroup(index).controls['chargeable_weight'].setValue(chargeableWeight);\n      \n      totalActualWeight = totalActualWeight + actualWeight;\n      totalVolumetricWeight = totalVolumetricWeight + valumetricWeight;\n      totalChargeableWeight = totalChargeableWeight + chargeableWeight;\n    });\n    this.addForm.controls['actual_weight'].setValue(totalActualWeight);\n    this.addForm.controls['valumetric_weight'].setValue(roundOffWeight(totalVolumetricWeight));\n    this.addForm.controls['chargable_weight'].setValue(roundOffWeight(totalChargeableWeight));\n    this.calculatePrices();\n  }\n\n  calculatePrices = async() => {\n    if(this.addForm.value.no_of_pieces){\n      let noOfPieces: number = this.noOfPieces = parseInt(this.addForm.value.no_of_pieces);\n      let medicineShipment = this.addForm.value.medicine_shipment;\n      let medicineShipmentValue = 'NO';\n      if(medicineShipment && medicineShipment === 'YES' && noOfPieces === 1){\n        medicineShipmentValue = 'YES'\n      }\n      this.addForm.controls['medicine_shipment'].setValue(medicineShipmentValue);\n      let finalWeight = this.addForm.value.chargable_weight;      \n      let priceData = this.pricesList.length > 0 && this.pricesList.filter((data: any) => data.weight_from <= finalWeight && data.weight_to >= finalWeight);\n      if(priceData && priceData.length > 0){\n        let pricePerKG = medicineShipmentValue === 'YES' ? priceData[0].medicine_price_per_kg : priceData[0].price_per_kg;\n        let basicAmount = pricePerKG * finalWeight;\n        let commercialChargesAmount = this.addForm.value.commercial_charges_amount ? parseInt(this.addForm.value.commercial_charges_amount) : 0;\n        let jewelleryAppraisalAmount = this.addForm.value.jewellery_appraisal_amount ? parseInt(this.addForm.value.jewellery_appraisal_amount) : 0;\n        let pickupChargesAmount = this.addForm.value.pickup_charges_amount ? parseInt(this.addForm.value.pickup_charges_amount) : 0;\n        let packingChargesAmount = this.addForm.value.packing_charges_amount ? parseInt(this.addForm.value.packing_charges_amount) : 0;\n        let priceAmount = basicAmount + commercialChargesAmount + jewelleryAppraisalAmount + pickupChargesAmount + packingChargesAmount;\n        let gstAmount = (priceAmount*18)/100;\n        let otherAmount = this.addForm.value.other_amount ? parseInt(this.addForm.value.other_amount) : 0;\n        let totalAmount = Math.round(priceAmount + gstAmount + otherAmount);\n        \n        this.addForm.controls['basic_amount'].setValue(basicAmount);\n        this.addForm.controls['gst_amount'].setValue(gstAmount);\n        this.addForm.controls['commercial_charges_amount'].setValue(commercialChargesAmount);\n        this.addForm.controls['jewellery_appraisal_amount'].setValue(jewelleryAppraisalAmount);\n        this.addForm.controls['pickup_charges_amount'].setValue(pickupChargesAmount);\n        this.addForm.controls['packing_charges_amount'].setValue(packingChargesAmount);\n        this.addForm.controls['total_amount'].setValue(totalAmount);\n      }\n    }\n  }\n\n  handlePriceChange = () => {\n    let basicAmount = parseInt(this.addForm.value.basic_amount);\n    let commercialChargesAmount = parseInt(this.addForm.value.commercial_charges_amount);\n    let jewelleryAppraisalAmount = parseInt(this.addForm.value.jewellery_appraisal_amount);\n    let pickupChargesAmount = parseInt(this.addForm.value.pickup_charges_amount);\n    let packingChargesAmount = parseInt(this.addForm.value.packing_charges_amount);\n    let gstAmount = parseInt(this.addForm.value.gst_amount);\n    let otherAmount = this.addForm.value.other_amount ? parseInt(this.addForm.value.other_amount) : 0;\n    let totalAmount = basicAmount + commercialChargesAmount + jewelleryAppraisalAmount + pickupChargesAmount + packingChargesAmount + gstAmount + otherAmount;\n    this.addForm.controls['other_amount'].setValue(otherAmount);\n    this.addForm.controls['total_amount'].setValue(totalAmount);\n  }\n\n  getBoxDetailsFormGroup(index: number): FormGroup {\n    this.boxDetails = this.addForm.get('boxes_details') as FormArray;\n    const formGroup = this.boxDetails.controls[index] as FormGroup;\n    return formGroup; \n  }\n\n  boxes_details(): FormArray {\n    return this.addForm.get(\"boxes_details\") as FormArray;\n  }\n\n  newBoxDetailsFields(): FormGroup {\n    return this.formBuilder.group({\n      box_weight: ['', [Validators.required]],\n      actual_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      width: ['', [Validators.required, Validators.pattern(numRegx)]],\n      length: ['', [Validators.required, Validators.pattern(numRegx)]],\n      height: ['', [Validators.required, Validators.pattern(numRegx)]],\n      valumetric_weight: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      chargeable_weight: ['', [Validators.required, Validators.pattern(floatRegx)]]\n    })\n  }\n\n  addBoxDetails() {  \n    this.boxDetails.push(this.newBoxDetailsFields());\n    this.boxesCount = (this.boxDetails.value).length;\n  }\n\n  removeBoxDetails(index: number) {\n    this.boxDetails.removeAt(index);\n    this.boxesCount = (this.boxDetails.value).length;\n    this.handleBoxDetailsChange();    \n  }\n  ///////////// HANDLING DYNAMIC BOXES DETAILS /////////////\n\n  handleBoxNoChange = (event:any, index: number) => {\n    if(!event.target.value || !numRegx.test(event.target.value)){\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors({pattern: true});\n    }else if(event.target.value > this.addForm.value.no_of_pieces){\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors({maxValue: true});\n    }else{\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors(null);\n    }    \n  }\n\n  handleShipmentTypeChange = () => {\n\n  }\n\n  getBranchesList = async() => {\n    let resp = await this.adminService.getData('getBranches');          \n    if(resp && resp.responseCode === 1){\n      this.branchesList = resp.branchesList;\n    }   \n  }\n\n  getCarriers = async() => {\n    let resp = await this.pricesService.getData('getCarriers');\n    if(resp && resp.carriers){\n      this.carriersList = resp.carriers;\n    }\n  }\n\n  getCountries = async() => {\n    let resp = await this.pricesService.getData('getCountries');\n    if(resp && resp.countries){\n      this.countriesList = resp.countries;\n    }\n  }\n\n  getPricesUsingCountryAndCarrrier = async() => {\n    if(this.addForm.value.service_type && this.addForm.value.destination_country){\n      let reqData = {\n        carrier_id: this.addForm.value.service_type,\n        country_code: this.addForm.value.destination_country,\n      }\n      let resp = await this.pricesService.getData('getCarrrierZonePrices', reqData);\n      if(resp && resp.prices && resp.prices.length > 0){\n        this.pricesList = resp.prices;\n        this.calculatePrices();\n      }else{\n        await warning(\"There are no prices available for this service type ! Please try again\");\n        this.addForm.setErrors({ 'invalid': true });\n        this.addForm.controls['basic_amount'].setValue(0);\n        this.addForm.controls['gst_amount'].setValue(0);\n        this.addForm.controls['total_amount'].setValue(0);\n      }\n    }\n  }\n\n  getCommodityList = async() => {\n    let resp = await this.pricesService.getData('getCommodityList');\n    if(resp && resp.commodity_list){\n      this.commodityList = resp.commodity_list;\n    }\n  }\n\n  calculateCommodityValue = async(index: number) => {\n    if(this.commodityDetails.controls[index].value.quantity && this.commodityDetails.controls[index].value.unit_price){\n      let commodityValue = parseFloat(this.commodityDetails.controls[index].value.quantity) * parseFloat(this.commodityDetails.controls[index].value.unit_price);\n      this.getCommodityFormGroup(index).controls['commodity_value'].setValue(commodityValue);\n    }\n    this.checkTotalCommodityValue();\n  }\n\n  checkTotalCommodityValue = async() => {\n    this.totalCommodityValue = await getSumByKey(this.addForm.value.commodity_list, 'commodity_value');\n    this.c2cMaxAmountReached = this.addForm.value.shipment_type === 'C2C' && this.totalCommodityValue > 24000 ? true : false;\n    if(this.c2cMaxAmountReached){\n      await errorAlert(\"Total commodity value should not exceed 24,000 for C2C shipment\");\n    }\n  }\n\n\n  createNewCommodityOption = (newValue: any) => {    \n    let data = {\n      product_name: newValue,\n      hsn_code: ''\n    }\n    this.commodityList.push(data);    \n  }\n\n  handleChangeCommodity = (commodityName: any, index: any) => {\n    let commodityValue = this.commodityList.filter((data:any) => data.product_name === commodityName);\n    if(commodityValue.length > 0){\n      this.getCommodityFormGroup(index).controls['hsn_code'].setValue(commodityValue[0].hsn_code);\n    }\n    let commodityNamesArray = this.commodityDetails.value.map((val: any) => { \n      let commodityVal = (val.commodity_name).split('(');\n      return commodityVal[0]; \n    });\n    this.addForm.controls['commodity_items_summery'].setValue(commodityNamesArray.slice(0, 3).join(','));\n  }\n\n  handleChangeModeOfPayment = () => {\n    let paymentMode = this.addForm.value.mode_of_payment;\n    let transactionID = this.addForm.value.transaction_id;\n    if(paymentMode){      \n      this.addForm.controls['mode_of_payment'].setErrors(null);\n      if(paymentMode !== 'CASH' && !transactionID){\n        this.addForm.controls['transaction_id'].setErrors({required: true});\n      }else{\n        this.addForm.controls['transaction_id'].setErrors(null);\n      }\n    }else{\n      this.addForm.controls['mode_of_payment'].setErrors({required: true});\n    }\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  getPincodeDetails = async(type = 'sender') => {\n    let country = type === 'sender' ? 'IN' : this.addForm.value.destination_country;\n    try {      \n      if(!this.countriesWithoutZip.includes(country)){\n        let pincode = type === 'sender' ? this.addForm.value.sender_pincode : this.addForm.value.receiver_pincode;\n        if(pincode && pincode.length >= 3){\n          let pincodeDetails = await this.adminService.getPincodeDetails(pincode, country); \n          if(pincodeDetails && pincodeDetails.country){  \n            if(type === 'sender'){\n              this.addForm.controls['sender_pincode'].setErrors(null);\n              this.addForm.controls['sender_city'].setValue(pincodeDetails.city);\n              this.addForm.controls['sender_state'].setValue(pincodeDetails.state);\n            }else{\n              let pin = this.addForm.value.receiver_pincode;\n              if(country === 'GB'){\n                pin = pin.replace(/ /g, '').replace(/^(.*)(\\d)/, \"$1 $2\");\n              }\n              this.addForm.controls['receiver_pincode'].setValue(pin);\n              this.addForm.controls['receiver_pincode'].setErrors(null);\n              this.addForm.controls['receiver_city'].setValue(pincodeDetails.city);\n              this.addForm.controls['receiver_state'].setValue(pincodeDetails.state);\n            }  \n            return true;        \n          }\n        } \n      }     \n    } catch (error) {\n    }  \n    if(type === 'sender'){\n      if(!this.countriesWithoutZip.includes(country)){\n        this.addForm.controls['sender_pincode'].setErrors({pattern: true});\n      }      \n      this.addForm.controls['sender_city'].setValue(null);\n      this.addForm.controls['sender_state'].setValue(null);\n    }else{\n      if(!this.countriesWithoutZip.includes(country)){\n        this.addForm.controls['receiver_pincode'].setErrors({pattern: true});\n      }\n      this.addForm.controls['receiver_city'].setValue(null);\n      this.addForm.controls['receiver_state'].setValue(null);\n    }\n    return;  \n  }\n\n  validateIDProof = () => {\n    let idProofType = this.addForm.value.sender_id_proof_type;\n    let idProofNo = this.addForm.value.sender_id_proof_number;    \n    if(idProofType && idProofNo){\n      if(idProofType === 'AADHAR' && !adhaarRegx.test(idProofNo)){\n        this.addForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'PAN CARD' && !panCardRegx.test(idProofNo)){\n        this.addForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'GSTN' && !gstnRegx.test(idProofNo)){\n        this.addForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'PASSPORT' && !passportRegx.test(idProofNo)){\n        this.addForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else{\n        this.addForm.controls['sender_id_proof_number'].setErrors(null);\n      }\n    }\n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFiles = event.target.files;\n  }\n\n  get form() { return this.addForm.controls; }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.addForm.markAllAsTouched();\n          document.getElementById('shipment-details').scrollIntoView(true);\n          this.submitted = false;\n          return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.addForm.value)) {\n          if(key != 'commodity_list' && key != 'boxes_details'){\n            let value = this.addForm.value[key];\n            formData.append(key, value);\n          }\n        }\n        formData.append('commodity_list', JSON.stringify(this.addForm.value.commodity_list));\n        formData.append('boxes_details', JSON.stringify(this.boxDetails.value));\n        if(this.selectedFiles && this.selectedFiles.length > 0){\n          formData.append('file_path', 'kyc-files');\n          for(let i =0; i < this.selectedFiles.length; i++){\n            formData.append(\"kyc_files\", this.selectedFiles[i], this.selectedFiles[i]['name']);\n          }\n        }\n        const addResp = await this.adminService.addOrUpdateData('addShipment', formData);\n        if(addResp && addResp.responseCode === 1){\n          await successAlert(\"Shipment added successfully\");\n          (<FormArray>this.addForm.get('commodity_list')).clear();\n          this.addForm.reset(this.addFormInitialValues);\n          this.selectedFiles = '';\n        }else if(addResp && addResp.responseCode === 0){\n          await errorAlert(addResp.message);\n        }else{\n          await errorAlert(\"Shipment adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;    \n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n}\n","<!-- <ng-container *ngIf=\"isSuperAdmin\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-4\">\n            <nb-card class=\"mb-0\">\n                <nb-card-body>\n                    <div class=\"form-group\">\n                        <ng-select (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                    </div>                    \n                </nb-card-body>\n            </nb-card>\n        </div>\n    </div>\n    <hr />\n</ng-container> -->\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"shipmentsList && shipmentsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Branch</th>\n                                <th>Date</th>\n                                <th>Invoice No</th>\n                                <th>Receiver Name</th>\n                                <th>Weight</th>\n                                <th>Total Amount</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of shipmentsList | smartFilter: { 'branch.branch_name': search_string1, date: search_string2, invoice_number: search_string3, receiver_name: search_string4, chargable_weight: search_string5 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.branch.branch_name}}</td>\n                                <td>{{data.date}}</td>\n                                <td>{{data.invoice_number}}</td>\n                                <td>{{data.receiver_name}}</td>\n                                <td>{{data.chargable_weight}}</td>\n                                <td>{{(data.total_amount).toLocaleString('en-IN', { currency: 'INR' })}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Update Tracking IDs</a>\n                                          <a class=\"dropdown-item\" routerLink=\"/admin/pages/view-shipment-details/{{data.id}}\">View Details</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && checkUpdateAvailable(data.createdAt)\" routerLink=\"/admin/pages/update-shipments/{{data.id}}\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                    \n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!shipmentsList || shipmentsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- UPDATE TRACKING NO'S MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE TRACKING NO'S\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"tracking_no1\" class=\"label\">Tracking No1*</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no1\" required>\n                        <div *ngIf=\"form?.tracking_no1?.invalid && (form?.tracking_no1?.dirty || form?.tracking_no1?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.tracking_no1?.errors?.required\">Please enter tracking number</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.tracking_no1?.errors?.pattern\">Please enter valid tracking number</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"tracking_no2\" class=\"label\">Tracking No2</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no2\">\n                        <div *ngIf=\"form?.tracking_no2?.invalid && (form?.tracking_no2?.dirty || form?.tracking_no2?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.tracking_no2?.errors?.pattern\">Please enter valid tracking number</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"tracking_no3\" class=\"label\">Tracking No3</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no3\">\n                        <div *ngIf=\"form?.tracking_no3?.invalid && (form?.tracking_no3?.dirty || form?.tracking_no3?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.tracking_no3?.errors?.pattern\">Please enter valid tracking number</small>\n                          </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"tracking_no4\" class=\"label\">Tracking No4</label>\n                        <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no4\">\n                        <div *ngIf=\"form?.tracking_no4?.invalid && (form?.tracking_no4?.dirty || form?.tracking_no4?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.tracking_no4?.errors?.pattern\">Please enter valid tracking number</small>\n                        </div>\n                    </div>                    \n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" required>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE TRACKING NO'S MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, changeConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-empty-tracking-shipments',\n  templateUrl: './empty-tracking-shipments.component.html',\n  styleUrls: ['./empty-tracking-shipments.component.scss']\n})\nexport class EmptyTrackingShipmentsComponent implements OnInit {\n\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  editBtnDisable = false;\n  adminsList: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string1: string = '';\n  search_string2: string = '';\n  search_string3: string = '';\n  search_string4: string = '';\n  search_string5: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  shipmentsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('empty-tracking-shipments');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }\n    \n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      tracking_no1: ['', [Validators.required]],\n      tracking_no2: [''],\n      tracking_no3: [''],\n      tracking_no4: ['']\n    });\n\n    this.getShipmentsList();\n    // this.getBranchesList();\n    this.toggleSidebar();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data?.id,\n      tracking_no1: null,\n      tracking_no2: null,\n      tracking_no3: null,\n      tracking_no4: null,\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  getShipmentsList = async(branchID: any = '') => {\n    try {\n      branchID = branchID ? branchID : this.branchID;\n      let resp = await this.adminService.getData('getEmptyTrackingShipmentsList', {branch_id: branchID});          \n      if(resp && resp.responseCode === 1){\n        this.shipmentsList = resp.shipments;\n        this.totalCount = (resp.shipments).length;\n      }\n    } catch (error) {\n      this.shipmentsList = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID;\n    this.getShipmentsList(branchID);\n  }\n\n  checkUpdateAvailable = (createdAt: any) => {\n    let currentDate: any = new Date().toISOString().split('T')[0];\n    let createdDate: Date = new Date(createdAt);\n    let futureDate = new Date(createdDate.setDate(createdDate.getDate() + 2)).toISOString().split('T')[0];\n    return futureDate >= currentDate || this.currentUserData.role_type === 'Super-Admin';\n  }\n\n  openActionDropDown = (i: any) => {        \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateShipmentTrackingNos', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getShipmentsList();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.updateForm.reset();\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert(\"This shipment will be annonymised only. Won't delete permanently, want to annonymise.\")){\n          const deleteResp = await this.adminService.addOrUpdateData('annonymiseEmptyShipment', {id: id});\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getShipmentsList();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n  }\n\n}","<ng-container *ngIf=\"isSuperAdmin\">    \n    <nb-card class=\"mb-0\">\n        <nb-card-body>\n            <form [formGroup]=\"searchForm\" (ngSubmit)=\"searchFormSubmit()\">\n                <div class=\"row justify-content-md-center\">\n                    <div class=\"col-md-3\">\n                        <div class=\"form-group\">\n                            <label>From</label>\n                            <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                        </div> \n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"form-group\">\n                            <label>To</label>\n                            <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                        </div> \n                    </div>\n                    <div class=\"col-md-3\">\n                        <div class=\"form-group\">\n                            <label>Branch</label>\n                            <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                            </ng-select>\n                        </div> \n                    </div>\n                    <div class=\"col-md-2\">\n                        <div class=\"form-group\">\n                            <label>&nbsp;</label><br>\n                            <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                        </div> \n                    </div>\n                </div>  \n            </form>\n        </nb-card-body>\n    </nb-card>\n    <hr />\n</ng-container>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.view && shipmentsList && shipmentsList.length > 0\" (click)=\"exportToExcel()\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-download\"></i> Download</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"shipmentsList && shipmentsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Branch</th>\n                                <th>Date</th>\n                                <th>Invoice No</th>\n                                <th>Receiver Name</th>\n                                <th>Weight</th>\n                                <th>Total Amount</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            <tr *ngFor=\"let data of shipmentsList | smartFilter: { 'branch.branch_name': search_string1, date: search_string2, invoice_number: search_string3, receiver_name: search_string4, chargable_weight: search_string5 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.branch.branch_name}}</td>\n                                <td>{{data.date}}</td>\n                                <td>{{data.invoice_number}}</td>\n                                <td>{{data.receiver_name}}</td>\n                                <td>{{data.chargable_weight}}</td>\n                                <td>{{data.total_amount}}</td>\n                                <td>\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"editTrackingInfo(data, updateTrackingInfoModal)\">Update Tracking IDs</a>\n                                          <a class=\"dropdown-item\" routerLink=\"/admin/pages/view-shipment-details/{{data.id}}\">View Details</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && checkUpdateAvailable(data.createdAt)\" routerLink=\"/admin/pages/update-shipments/{{data.id}}\">Edit</a>\n                                          <a class=\"dropdown-item\" (click)=\"downloadInvoicePDF(data)\">Download Invoice</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.kyc_doc\" (click)=\"downloadKycFiles(data.kyc_doc)\">Download KYC</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                    \n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!shipmentsList || shipmentsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- UPDATE TRACKING NO'S MODAL -->\n<ng-template #updateTrackingInfoModal let-data let-ref=\"dialogRef\">\n  <form [formGroup]=\"updateTrackingInfoForm\" (ngSubmit)=\"updateTrackingInfoFormSubmit()\">\n      <nb-card>        \n          <nb-card-header>\n          UPDATE TRACKING NO'S\n          <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n          </nb-card-header>\n          <nb-card-body>            \n              <div class=\"form-row\">\n                  <div class=\"form-group col-md-6\">\n                      <label for=\"tracking_no1\" class=\"label\">Tracking No1*</label>\n                      <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no1\" required>\n                      <div *ngIf=\"trackingForm?.tracking_no1?.invalid && (trackingForm?.tracking_no1?.dirty || trackingForm?.tracking_no1?.touched)\" class=\"error\">\n                          <small class=\"form-control-feedback\" *ngIf=\"trackingForm?.tracking_no1?.errors?.required\">Please enter tracking number</small>\n                          <small class=\"form-control-feedback\" *ngIf=\"trackingForm?.tracking_no1?.errors?.pattern\">Please enter valid tracking number</small>\n                      </div>\n                  </div>                    \n                  <div class=\"form-group col-md-6\">\n                      <label for=\"tracking_no2\" class=\"label\">Tracking No2</label>\n                      <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no2\">\n                      <div *ngIf=\"trackingForm?.tracking_no2?.invalid && (trackingForm?.tracking_no2?.dirty || trackingForm?.tracking_no2?.touched)\" class=\"error\">\n                        <small class=\"form-control-feedback\" *ngIf=\"trackingForm?.tracking_no2?.errors?.pattern\">Please enter valid tracking number</small>\n                      </div>\n                  </div>                    \n                  <div class=\"form-group col-md-6\">\n                      <label for=\"tracking_no3\" class=\"label\">Tracking No3</label>\n                      <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no3\">\n                      <div *ngIf=\"trackingForm?.tracking_no3?.invalid && (trackingForm?.tracking_no3?.dirty || trackingForm?.tracking_no3?.touched)\" class=\"error\">\n                        <small class=\"form-control-feedback\" *ngIf=\"trackingForm?.tracking_no3?.errors?.pattern\">Please enter valid tracking number</small>\n                      </div>\n                  </div>                    \n                  <div class=\"form-group col-md-6\">\n                      <label for=\"tracking_no4\" class=\"label\">Tracking No4</label>\n                      <input type=\"text\" class=\"form-control form-control-line\" formControlName=\"tracking_no4\">\n                      <div *ngIf=\"trackingForm?.tracking_no4?.invalid && (trackingForm?.tracking_no4?.dirty || trackingForm?.tracking_no4?.touched)\" class=\"error\">\n                        <small class=\"form-control-feedback\" *ngIf=\"trackingForm?.tracking_no4?.errors?.pattern\">Please enter valid tracking number</small>\n                      </div>\n                  </div>                    \n              </div>\n          </nb-card-body>\n          <nb-card-footer>\n              <input type=\"hidden\" formControlName=\"id\" required>\n              <input type=\"hidden\" formControlName=\"tracking_no1_old\" required>\n              <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n              <button type=\"submit\" [disabled]=\"updateTrackingInfoForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n          </nb-card-footer>        \n      </nb-card>\n  </form>\n</ng-template>\n<!-- END UPDATE TRACKING NO'S MODAL -->","import { Component, OnInit, TemplateRef, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { exportToExcel } from '../../helpers/common';\nimport { errorAlert, successAlert } from '../../helpers/sweetalert';\n\n@Component({\n  selector: 'ngx-shipments-list',\n  templateUrl: './shipments-list.component.html',\n  styleUrls: ['./shipments-list.component.scss']\n})\n\n\nexport class ShipmentsListComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  updateForm!: FormGroup;\n  updateTrackingInfoForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  editBtnDisable = false;\n  adminsList: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string1: string = '';\n  search_string2: string = '';\n  search_string3: string = '';\n  search_string4: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  shipmentsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  currentDate: any;\n  pastDate: any;\n\n  @ViewChild('pdfHTML') pdfHTML!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('users');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id ? this.currentUserData.branch_id : null;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.updateForm = this.formBuilder.group({\n      admin_id: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      branch_id: ['', [Validators.required]],\n      first_name: ['', [Validators.required, Validators.pattern(alphaRegx), Validators.minLength(3), Validators.maxLength(30)]],\n      last_name: ['', [Validators.pattern(alphaRegx), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]],\n      mobile_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      address: ['', [Validators.pattern(addressRegx), Validators.minLength(10), Validators.maxLength(250)]]\n    });\n\n    this.updateTrackingInfoForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      tracking_no1_old: ['', [Validators.required]],\n      tracking_no1: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      tracking_no2: ['', [Validators.pattern(nonHTMLRegx)]],\n      tracking_no3: ['', [Validators.pattern(nonHTMLRegx)]],\n      tracking_no4: ['', [Validators.pattern(nonHTMLRegx)]],\n    });\n\n    this.getShipmentsList();\n    this.getBranchesList();\n    this.toggleSidebar();\n  }\n\n  get form() { return this.updateForm.controls; }\n  get trackingForm() { return this.updateTrackingInfoForm.controls; }\n\n  editTrackingInfo = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      tracking_no1_old: data.tracking_no1,\n      tracking_no1: data.tracking_no1,\n      tracking_no2: data.tracking_no2,\n      tracking_no3: data.tracking_no3,\n      tracking_no4: data.tracking_no4\n    }\n    this.updateTrackingInfoForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  checkUpdateAvailable = (createdAt: any) => {\n    let currentDate: any = new Date().toISOString().split('T')[0];\n    let createdDate: Date = new Date(createdAt);\n    let futureDate = new Date(createdDate.setDate(createdDate.getDate() + 2)).toISOString().split('T')[0];\n    return futureDate >= currentDate || this.currentUserData.role_type === 'Super-Admin';\n  }\n\n  getShipmentsList = async() => {\n    try {\n      let reqData = {\n        branch_id: this.searchForm.value.branch ? this.searchForm.value.branch : null,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      let resp = await this.adminService.getData('getShipmentsList', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.shipmentsList = resp.shipments;\n        this.totalCount = (resp.shipments).length;\n      }\n    } catch (error) {\n      this.shipmentsList = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  exportToExcel = async() => {\n    if(this.shipmentsList.length > 0){\n      let sheetName = 'Shipment';\n      let fileName = 'Shipment-' + new Date().getTime();\n      let list = this.shipmentsList.map((data: any) => {\n        let info = {\n          'Branch': data.branch.branch_name,\n          'Date': data.date,\n          'Invoice No': data.invoice_number,\n          'Service Type': data.carrier ? data.carrier.carrier_name : '',\n          'Destination Country': data.country ? data.country.country_name : data.destination_country,\n          'Tracking No 1': data.tracking_no1,\n          'Tracking No 2': data.tracking_no2,\n          'Tracking No 3': data.tracking_no3,\n          'Tracking No 4': data.tracking_no4,\n          'No Of Pieces': data.no_of_pieces,\n          '3KG': data.boxes_3kg,\n          '5KG': data.boxes_5kg,\n          '10KG': data.boxes_10kg,\n          '15KG': data.boxes_15kg,\n          'Custom': data.boxes_custom,\n          'Actual Weight': data.actual_weight,\n          'Volumetric Weight': data.valumetric_weight,\n          'Chargable Weight': data.chargable_weight,\n          'Is Medicine Shipment': data.medicine_shipment,\n          'Product Type': data.product_type,\n          'Basic Charges': data.basic_amount,\n          'GST(18%)': data.gst_amount,\n          'Others': data.other_amount,\n          'Total Amount': data.total_amount,\n          'Mode Of Payment': data.mode_of_payment,\n          'Transaction ID': data.transaction_id,\n          'Sender Name': data.sender_name,          \n          'Sender Company Name': data.sender_company_name,\n          'Sender Address Line1': data.sender_address1,\n          'Sender Address Line2': data.sender_address2,\n          'Sender Address Line3': data.sender_address3,\n          'Sender Postal Code': data.sender_pincode,\n          'Sender City': data.sender_city,\n          'Sender State': data.sender_state,\n          'Sender Phone Number': data.sender_phone_number,\n          'Sender Email ID': data.sender_email,\n          'Sender ID Type': data.sender_id_proof_type,  \n          'Sender ID Number': data.sender_id_proof_number,  \n          'Receiver Name': data.receiver_name,  \n          'Receiver Company Name': data.receiver_company_name,  \n          'Receiver Address Line1': data.receiver_address1,  \n          'Receiver Address Line2': data.receiver_address2,  \n          'Receiver Address Line3': data.receiver_address3,  \n          'Receiver Postal Code': data.receiver_pincode,  \n          'Receiver City': data.receiver_city,  \n          'Receiver State': data.receiver_state,  \n          'Receiver Phone Number': data.receiver_phone_number,  \n          'Receiver Email ID': data.receiver_email,  \n          'Commodity Summery Of The Items': data.commodity_items_summery,  \n          'Remarks': data.remarks,\n          'Created On': new Date(data.createdAt).toLocaleString(),\n          'Last Updated On': new Date(data.updatedAt).toLocaleString(),\n        };\n        return info;\n      });\n      await exportToExcel(list, fileName, sheetName);\n    }\n  }\n\n  downloadKycFiles = (files: any) => {\n    if(files){\n      let fileNames = files.split(',');\n      fileNames.map((fileName: any) => {\n        this.adminService.downLoadFiles('kyc-files', fileName);\n      });      \n    }    \n  }\n\n  downloadInvoicePDF = (data: any) => {\n    this.adminService.downLoadInvoicePDF(data);    \n  }\n\n  openActionDropDown = (i: any) => {        \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  searchFormSubmit = async() =>{\n    if(this.isSuperAdmin){\n      this.getShipmentsList();\n    }\n  }\n\n  updateTrackingInfoFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateTrackingInfoForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateShipmentTrackingNos', this.updateTrackingInfoForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getShipmentsList();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n}","<div class=\"row shipments\">\n    <div class=\"col-md-12\" id=\"shipment-details\">\n        <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n            <nb-card>\n                <nb-card-header>\n                    UPDATE SHIPMENT DETAILS\n                    <a routerLink=\"/admin/pages/shipments-list\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-arrow-left\"></i> Back To Shipments</a>\n                </nb-card-header>\n                <nb-card-body>\n                    <div class=\"form-row\">\n                        <div *ngIf=\"isSuperadmin\" class=\"form-group col-md-3\">\n                            <label for=\"branch\" class=\"control-label\">Branch*</label>\n                            <ng-select appendTo=\"body\" formControlName=\"branch\" placeholder=\"--- Branch ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.branch?.invalid && (form?.branch?.dirty || form?.branch?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.branch?.errors?.required\">Please select a branch</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice_number\" class=\"control-label\">Invoice Number*</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"invoice_number\">\n                            <div *ngIf=\"form?.invoice_number?.invalid && (form?.invoice_number?.dirty || form?.invoice_number?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.invoice_number?.errors?.required\">Please enter invoice number</small>\n                                <small *ngIf=\"form?.invoice_number?.errors?.pattern\">Please enter valid invoice number</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"date\" class=\"control-label\">Date*</label>\n                            <input type=\"date\" class=\"form-control\" formControlName=\"date\">\n                            <div *ngIf=\"form?.date?.invalid && (form?.date?.dirty || form?.date?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.date?.errors?.required\">Please enter date</small>\n                                <small *ngIf=\"form?.date?.errors?.pattern\">Please enter valid date</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"service_type\" class=\"control-label\">Service Type*</label>\n                            <ng-select appendTo=\"body\" (change)=\"getPricesUsingCountryAndCarrrier()\" formControlName=\"service_type\" placeholder=\"--- Select ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let carrier of carriersList\" [value]=\"carrier.id\">{{carrier.carrier_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.service_type?.invalid && (form?.service_type?.dirty || form?.service_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.service_type?.errors?.required\">Please select service type</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"destination_country\" class=\"control-label\">Destination Country*</label>\n                            <ng-select appendTo=\"body\" (change)=\"getPricesUsingCountryAndCarrrier(); getPincodeDetails('reciever');\" formControlName=\"destination_country\" placeholder=\"--- Country ---\" searchable=\"true\">\n                                <ng-option *ngFor=\"let country of countriesList\" [value]=\"country.country_code\">{{country.country_name}}</ng-option>\n                            </ng-select>\n                            <div *ngIf=\"form?.destination_country?.invalid && (form?.destination_country?.dirty || form?.destination_country?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.destination_country?.errors?.required\">Please select a country</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\" *ngIf=\"isSuperadmin\">\n                            <label for=\"shipment_type\" class=\"control-label\">Shipment Type*</label>\n                            <select formControlName=\"shipment_type\" (change)=\"checkTotalCommodityValue()\" class=\"form-control\">\n                                <option value=\"B2B\">B2B</option>\n                                <option value=\"B2C\">B2C</option>\n                                <option value=\"C2C\">C2C</option>\n                            </select>\n                            <div *ngIf=\"form?.shipment_type?.invalid && (form?.shipment_type?.dirty || form?.shipment_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.shipment_type?.errors?.required\">Please select shipment type</small>\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no1\" class=\"control-label\">Tracking No 1*</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tracking_no1\">\n                            <div *ngIf=\"form?.tracking_no1?.invalid && (form?.tracking_no1?.dirty || form?.tracking_no1?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.tracking_no1?.errors?.required\">Please enter tracking no1</small>\n                                <small *ngIf=\"form?.tracking_no1?.errors?.pattern\">Please enter valid tracking number</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no2\" class=\"control-label\">Tracking No 2</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tracking_no2\">\n                            <div *ngIf=\"form?.tracking_no2?.invalid && (form?.tracking_no2?.dirty || form?.tracking_no2?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.tracking_no2?.errors?.pattern\">Please enter valid tracking number</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no3\" class=\"control-label\">Tracking No 3</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tracking_no3\">\n                            <div *ngIf=\"form?.tracking_no3?.invalid && (form?.tracking_no3?.dirty || form?.tracking_no3?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.tracking_no3?.errors?.pattern\">Please enter valid tracking number</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no4\" class=\"control-label\">Tracking No 4</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"tracking_no4\">\n                            <div *ngIf=\"form?.tracking_no4?.invalid && (form?.tracking_no4?.dirty || form?.tracking_no4?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.tracking_no4?.errors?.pattern\">Please enter valid tracking number</small>\n                            </div>\n                        </div>                         -->\n                    </div> \n                    <hr *ngIf=\"isSuperadmin\"/>                  \n                    <div class=\"form-row\" *ngIf=\"isSuperadmin\">\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"no_of_pieces\" class=\"control-label\">No Of Pieces*</label>\n                            <input type=\"tel\" (change)=\"handleNumberOfPiecesChange()\" formControlName=\"no_of_pieces\" class=\"form-control\">\n                            <div *ngIf=\"form?.no_of_pieces?.invalid && (form?.no_of_pieces?.dirty || form?.no_of_pieces?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.required\">Please enter no of pieces</small>\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.pattern\">Please enter valid number</small>\n                                <small *ngIf=\"form?.no_of_pieces?.errors?.incorrect\">No of pieces not matching</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\" *ngIf=\"isSuperadmin\">\n                        <ng-container formArrayName=\"boxes_details\">\n                            <div class=\"form-row boxes_details\" *ngFor=\"let data of boxes_details().controls; let i = index\" [formGroupName]=\"i\">\n                                <div class=\"form-group col-md-2\">\n                                    <label for=\"box_weight\" class=\"control-label\">Box*</label>\n                                    <select formControlName=\"box_weight\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\">\n                                        <option value=\"3KG\">3KG</option>\n                                        <option value=\"5KG\">5KG</option>\n                                        <option value=\"10KG\">10KG</option>\n                                        <option value=\"15KG\">15KG</option>\n                                        <option value=\"CUSTOM\">CUSTOM</option>\n                                    </select>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['box_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['box_weight']?.dirty || getBoxDetailsFormGroup(i).controls['box_weight']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['box_weight']?.errors?.required\">Select box weight</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-2\">\n                                    <label for=\"actual_weight\" class=\"control-label\">Actual Weight*</label>\n                                    <input type=\"text\" formControlName=\"actual_weight\" trim-string (change)=\"handleBoxDetailsChange()\" class=\"form-control\">\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['actual_weight']?.dirty || getBoxDetailsFormGroup(i).controls['actual_weight']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.errors?.required\">Enter actual weight</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['actual_weight']?.errors?.pattern\">Enter valid weight</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-1\">\n                                    <label for=\"width\" class=\"control-label\">Width*</label>\n                                    <input type=\"text\" formControlName=\"width\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.invalid && (getBoxDetailsFormGroup(i).controls['width']?.dirty || getBoxDetailsFormGroup(i).controls['width']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.errors?.required\">Enter width</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['width']?.errors?.pattern\">Invalid width</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-1\">\n                                    <label for=\"length\" class=\"control-label\">Length*</label>\n                                    <input type=\"text\" formControlName=\"length\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.invalid && (getBoxDetailsFormGroup(i).controls['length']?.dirty || getBoxDetailsFormGroup(i).controls['length']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.errors?.required\">Enter length</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['length']?.errors?.pattern\">Invalid length</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-1\">\n                                    <label for=\"height\" class=\"control-label\">Height*</label>\n                                    <input type=\"text\" formControlName=\"height\" (change)=\"handleBoxDetailsChange()\" class=\"form-control\" allowOnlyNumbers>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.invalid && (getBoxDetailsFormGroup(i).controls['height']?.dirty || getBoxDetailsFormGroup(i).controls['height']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.errors?.required\">Enter height</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['height']?.errors?.pattern\">Invalid height</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-2\">\n                                    <label for=\"valumetric_weight\" class=\"control-label\">Vol Weight*</label>\n                                    <input type=\"text\" formControlName=\"valumetric_weight\" class=\"form-control\" readonly>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['valumetric_weight']?.dirty || getBoxDetailsFormGroup(i).controls['valumetric_weight']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.errors?.required\">Enter vol weight</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['valumetric_weight']?.errors?.pattern\">Enter valid weight</small>\n                                    </div>\n                                </div>\n                                <div class=\"form-group col-md-2\">\n                                    <label for=\"chargeable_weight\" class=\"control-label\">Char Weight*</label>\n                                    <input type=\"text\" formControlName=\"chargeable_weight\" class=\"form-control\" readonly>\n                                    <div *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.invalid && (getBoxDetailsFormGroup(i).controls['chargeable_weight']?.dirty || getBoxDetailsFormGroup(i).controls['chargeable_weight']?.touched)\" class=\"error\">\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.errors?.required\">Enter chargeable weight</small>\n                                        <small *ngIf=\"getBoxDetailsFormGroup(i).controls['chargeable_weight']?.errors?.pattern\">Enter valid weight</small>\n                                    </div>\n                                </div>\n                            </div>     \n                        </ng-container>\n                    </div>\n                    <hr *ngIf=\"isSuperadmin\"/>\n                    <div class=\"form-row\" *ngIf=\"isSuperadmin\">\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"actual_weight\" class=\"control-label\">Actual Weight  (Kg)*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"actual_weight\" class=\"form-control\">\n                            <div *ngIf=\"form?.actual_weight?.invalid && (form?.actual_weight?.dirty || form?.actual_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.actual_weight?.errors?.required\">Please enter actual weight</small>\n                                <small *ngIf=\"form?.actual_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"valumetric_weight\" class=\"control-label\">Volumetric Weight*</label>\n                            <input type=\"text\" formControlName=\"valumetric_weight\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.valumetric_weight?.invalid && (form?.valumetric_weight?.dirty || form?.valumetric_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.valumetric_weight?.errors?.required\">Please enter weight</small>\n                                <small *ngIf=\"form?.valumetric_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-sm-4 col-md-3 col-lg-3\">\n                            <label for=\"chargable_weight\" class=\"control-label\">Chargable Weight*</label>\n                            <input type=\"text\" formControlName=\"chargable_weight\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.chargable_weight?.invalid && (form?.chargable_weight?.dirty || form?.chargable_weight?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.chargable_weight?.errors?.required\">Please enter weight</small>\n                                <small *ngIf=\"form?.chargable_weight?.errors?.pattern\">Please enter valid weight</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row\" *ngIf=\"isSuperadmin\">\n                        <div class=\"form-group col-sm-4 col-md-4 col-lg-3\">\n                            <label for=\"medicine_shipment\" class=\"control-label\">Is This Medicine Shipment*</label>\n                            <select (change)=\"calculatePrices()\" formControlName=\"medicine_shipment\" class=\"form-control\">\n                                <option value=\"YES\">YES</option>\n                                <option value=\"NO\">NO</option>\n                            </select>\n                            <div *ngIf=\"form?.medicine_shipment?.invalid && (form?.medicine_shipment?.dirty || form?.medicine_shipment?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.medicine_shipment?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"product_type\" class=\"control-label\">Product Type*</label>\n                            <select formControlName=\"product_type\" class=\"form-control\">\n                                <option value=\"NON DOCS\">NON DOCS</option>\n                                <option value=\"DOCS\">DOCS</option>\n                            </select>\n                            <div *ngIf=\"form?.product_type?.invalid && (form?.product_type?.dirty || form?.product_type?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.product_type?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                                                \n                    </div>\n                    <div class=\"form-row\" *ngIf=\"isSuperadmin\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"basic_amount\" class=\"control-label\">Basic Charges*</label>\n                            <input type=\"text\" formControlName=\"basic_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.basic_amount?.invalid && (form?.basic_amount?.dirty || form?.basic_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.basic_amount?.errors?.required\">Please enter basic charges</small>\n                                <small *ngIf=\"form?.basic_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"commercial_charges_amount\" class=\"control-label\">Commercial Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"commercial_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.commercial_charges_amount?.invalid && (form?.commercial_charges_amount?.dirty || form?.commercial_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.commercial_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"jewellery_appraisal_amount\" class=\"control-label\">Jewellery Appraisal*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"jewellery_appraisal_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.jewellery_appraisal_amount?.invalid && (form?.jewellery_appraisal_amount?.dirty || form?.jewellery_appraisal_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.jewellery_appraisal_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"pickup_charges_amount\" class=\"control-label\">Pickup Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"pickup_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.pickup_charges_amount?.invalid && (form?.pickup_charges_amount?.dirty || form?.pickup_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.pickup_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"packing_charges_amount\" class=\"control-label\">Packing Charges*</label>\n                            <input type=\"text\" (change)=\"calculatePrices()\" formControlName=\"packing_charges_amount\" class=\"form-control\" trim-string>\n                            <div *ngIf=\"form?.packing_charges_amount?.invalid && (form?.packing_charges_amount?.dirty || form?.packing_charges_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.packing_charges_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"gst_amount\" class=\"control-label\">GST(18%)*</label>\n                            <input type=\"text\" formControlName=\"gst_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.gst_amount?.invalid && (form?.gst_amount?.dirty || form?.gst_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.gst_amount?.errors?.required\">Please enter GST</small>\n                                <small *ngIf=\"form?.gst_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"other_amount\" class=\"control-label\">Others*</label>\n                            <input type=\"text\" (change)=\"handlePriceChange()\" formControlName=\"other_amount\" class=\"form-control\">\n                            <div *ngIf=\"form?.other_amount?.invalid && (form?.other_amount?.dirty || form?.other_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.other_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"total_amount\" class=\"control-label\">Total Amount*</label>\n                            <input type=\"text\" formControlName=\"total_amount\" class=\"form-control\" readonly>\n                            <div *ngIf=\"form?.total_amount?.invalid && (form?.total_amount?.dirty || form?.total_amount?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.total_amount?.errors?.required\">Please enter total amount</small>\n                                <small *ngIf=\"form?.total_amount?.errors?.pattern\">Please enter valid amount</small>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Payment*</label>\n                            <select (change)=\"handleChangeModeOfPayment()\" formControlName=\"mode_of_payment\" class=\"form-control\">\n                                <option value=\"CASH\">CASH</option>\n                                <option value=\"DEBIT/CREDIT CARD\">DEBIT/CREDIT CARD</option>\n                                <option value=\"UPI\">UPI</option>\n                                <option value=\"OTHERS\">OTHERS</option>\n                            </select>\n                            <div *ngIf=\"form?.mode_of_payment?.invalid && (form?.mode_of_payment?.dirty || form?.mode_of_payment?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.mode_of_payment?.errors?.required\">Please select a value</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"transaction_id\" class=\"control-label\">Transaction ID</label>\n                            <input type=\"text\" (blur)=\"handleChangeModeOfPayment()\" formControlName=\"transaction_id\" class=\"form-control\">\n                            <div *ngIf=\"form?.transaction_id?.invalid && (form?.transaction_id?.dirty || form?.transaction_id?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                                <small *ngIf=\"form?.transaction_id?.errors?.pattern\">Please enter valid transaction id</small>\n                            </div>\n                        </div>                                                                       \n                    </div>\n                    <hr />                     \n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_name\" class=\"col-md-4 col-form-label\">Sender Name*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_name\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_name?.invalid && (form?.sender_name?.dirty || form?.sender_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_name?.errors?.required\">Please enter sender name</small>\n                                            <small *ngIf=\"form?.sender_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_company_name\" class=\"col-md-4 col-form-label\">Company Name</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_company_name\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_company_name?.errors?.invalid && (form?.sender_company_name?.dirty || form?.sender_company_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_company_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address1\" class=\"col-md-4 col-form-label\">Address Line1*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address1\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_address1?.invalid && (form?.sender_address1?.dirty || form?.sender_address1?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address1?.errors?.required\">Please enter address line1</small>\n                                            <small *ngIf=\"form?.sender_address1?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address2\" class=\"col-md-4 col-form-label\">Address Line2*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address2\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_address2?.invalid && (form?.sender_address2?.dirty || form?.sender_address2?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address2?.errors?.required\">Please enter address line2</small>\n                                            <small *ngIf=\"form?.sender_address2?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address3\" class=\"col-md-4 col-form-label\">Address Line3</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_address3\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_address3?.errors?.invalid && (form?.sender_address3?.dirty || form?.sender_address3?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_address3?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_pincode\" class=\"col-md-4 col-form-label\">Postal Code*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" (change)=\"getPincodeDetails()\" formControlName=\"sender_pincode\" class=\"form-control\">\n                                        <div *ngIf=\"form?.sender_pincode?.invalid && (form?.sender_pincode?.dirty || form?.sender_pincode?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_pincode?.errors?.required\">Please enter pincode</small>\n                                            <small *ngIf=\"form?.sender_pincode?.errors?.pattern\">Please enter valid pincode</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_city\" class=\"col-md-4 col-form-label\">City*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_city\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.sender_city?.invalid && (form?.sender_city?.dirty || form?.sender_city?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_city?.errors?.required\">Please enter city</small>\n                                            <small *ngIf=\"form?.sender_city?.errors?.pattern\">Please enter valid city</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_state\" class=\"col-md-4 col-form-label\">State*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"sender_state\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.sender_state?.invalid && (form?.sender_state?.dirty || form?.sender_state?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_state?.errors?.required\">Please enter state</small>\n                                            <small *ngIf=\"form?.sender_state?.errors?.pattern\">Please enter valid state</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_phone_number\" class=\"col-md-4 col-form-label\">Phone Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" formControlName=\"sender_phone_number\" class=\"form-control\">\n                                        <div *ngIf=\"form?.sender_phone_number?.invalid && (form?.sender_phone_number?.dirty || form?.sender_phone_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_phone_number?.errors?.required\">Please enter phone number</small>\n                                            <small *ngIf=\"form?.sender_phone_number?.errors?.pattern\">Please enter valid phone number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_email\" class=\"col-md-4 col-form-label\">Email ID</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"email\" formControlName=\"sender_email\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_email?.invalid && (form?.sender_email?.dirty || form?.sender_email?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_email?.errors?.pattern\">Please enter valid email</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_type\" class=\"col-md-4 col-form-label\">ID Type*</label>\n                                    <div class=\"col-md-8\">\n                                        <select (change)=\"validateIDProof()\" formControlName=\"sender_id_proof_type\" class=\"form-control\">\n                                            <option value=\"\">Select</option>\n                                            <option value=\"AADHAR\">AADHAR</option>\n                                            <option value=\"PAN CARD\">PAN CARD</option>\n                                            <option value=\"GST\">GST</option>\n                                            <option value=\"PASSPORT\">PASSPORT</option>\n                                            <option value=\"OTHERS\">OTHERS</option>\n                                        </select>\n                                        <div *ngIf=\"form?.sender_id_proof_type?.invalid && (form?.sender_id_proof_type?.dirty || form?.sender_id_proof_type?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_id_proof_type?.errors?.required\">Please select a value</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_number\" class=\"col-md-4 col-form-label\">ID Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" (change)=\"validateIDProof()\" formControlName=\"sender_id_proof_number\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.sender_id_proof_number?.invalid && (form?.sender_id_proof_number?.dirty || form?.sender_id_proof_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.sender_id_proof_number?.errors?.required\">Please enter document number</small>\n                                            <small *ngIf=\"form?.sender_id_proof_number?.errors?.pattern\">Please enter valid number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_name\" class=\"col-md-4 col-form-label\">Receiver Name*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_name\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_name?.invalid && (form?.receiver_name?.dirty || form?.receiver_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_name?.errors?.required\">Please enter receiver name</small>\n                                            <small *ngIf=\"form?.receiver_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_company_name\" class=\"col-md-4 col-form-label\">Company Name</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_company_name\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_company_name?.invalid && (form?.receiver_company_name?.dirty || form?.receiver_company_name?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_company_name?.errors?.pattern\">Please enter valid name</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address1\" class=\"col-md-4 col-form-label\">Address Line1*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address1\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_address1?.invalid && (form?.receiver_address1?.dirty || form?.receiver_address1?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address1?.errors?.required\">Please enter address line1</small>\n                                            <small *ngIf=\"form?.receiver_address1?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address2\" class=\"col-md-4 col-form-label\">Address Line2*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address2\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_address2?.invalid && (form?.receiver_address2?.dirty || form?.receiver_address2?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address2?.errors?.required\">Please enter address line2</small>\n                                            <small *ngIf=\"form?.receiver_address2?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address3\" class=\"col-md-4 col-form-label\">Address Line3</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_address3\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_address3?.invalid && (form?.receiver_address3?.dirty || form?.receiver_address3?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_address3?.errors?.pattern\">Please enter valid address</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_pincode\" class=\"col-md-4 col-form-label\">Postal Code*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" (change)=\"getPincodeDetails('reciever')\" formControlName=\"receiver_pincode\" class=\"form-control\">\n                                        <div *ngIf=\"form?.receiver_pincode?.invalid && (form?.receiver_pincode?.dirty || form?.receiver_pincode?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.required\">Please enter pincode</small>\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.minLength\">Please enter valid pincode</small>\n                                            <small *ngIf=\"form?.receiver_pincode?.errors?.pattern\">Please enter valid pincode</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_city\" class=\"col-md-4 col-form-label\">City*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_city\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.receiver_city?.invalid && (form?.receiver_city?.dirty || form?.receiver_city?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_city?.errors?.required\">Please enter city</small>\n                                            <small *ngIf=\"form?.receiver_city?.errors?.pattern\">Please enter valid city</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_state\" class=\"col-md-4 col-form-label\">State*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"text\" formControlName=\"receiver_state\" class=\"form-control\" capital-string readonly>\n                                        <div *ngIf=\"form?.receiver_state?.invalid && (form?.receiver_state?.dirty || form?.receiver_state?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_state?.errors?.required\">Please enter state</small>\n                                            <small *ngIf=\"form?.receiver_state?.errors?.pattern\">Please enter valid state</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_phone_number\" class=\"col-md-4 col-form-label\">Phone Number*</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"tel\" formControlName=\"receiver_phone_number\" class=\"form-control\">\n                                        <div *ngIf=\"form?.receiver_phone_number?.invalid && (form?.receiver_phone_number?.dirty || form?.receiver_phone_number?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.required\">Please enter phone number</small>\n                                            <small *ngIf=\"form?.receiver_phone_number?.errors?.pattern\">Please enter valid phone number</small>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_email\" class=\"col-md-4 col-form-label\">Email ID</label>\n                                    <div class=\"col-md-8\">\n                                        <input type=\"email\" formControlName=\"receiver_email\" class=\"form-control\" capital-string>\n                                        <div *ngIf=\"form?.receiver_email?.invalid && (form?.receiver_email?.dirty || form?.receiver_email?.touched)\" class=\"error\">\n                                            <small *ngIf=\"form?.receiver_email?.errors?.pattern\">Please enter valid email</small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <p *ngIf=\"isSuperadmin\" class=\"justify-content-between\">COMMODITY LIST/PRODUCT LIST</p>\n                    <div class=\"table-responsive\" *ngIf=\"isSuperadmin\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th style=\"max-width: 50px;\">S.No</th>\n                                    <th style=\"min-width: 100px;\">Box No</th>\n                                    <th style=\"max-width: 250px;\">Name Of The Product</th>\n                                    <th style=\"min-width: 150px;\">HSN Code</th>\n                                    <th style=\"min-width: 100px; max-width: 150px;\">Country</th>\n                                    <th>Quantity</th>\n                                    <th style=\"min-width: 120px;\">UOM</th>\n                                    <th style=\"min-width: 100px;\">Unit Price</th>\n                                    <th>Commodity Value</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container formArrayName=\"commodity_list\">\n                                    <tr *ngFor=\"let data of commodity_list().controls; let i = index\" [formGroupName]=\"i\">\n                                        <td>{{i + 1}}</td>\n                                        <td>\n                                            <input type=\"text\" formControlName=\"box_number\" allowOnlyNumbers (change)=\"handleBoxNoChange($event, i)\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.invalid && (getCommodityFormGroup(i).controls['box_number']?.dirty || getCommodityFormGroup(i).controls['box_number']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.required\">Enter box no</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.pattern\">Enter valid no</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['box_number']?.errors?.maxValue\">Enter valid box no</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <ng-select class=\"min-250 max-250\" appendTo=\"body\" [addTag]=\"createNewCommodityOption\" (change)=\"handleChangeCommodity($event, i)\" formControlName=\"commodity_name\" placeholder=\"--- Select ---\" searchable=\"true\">\n                                                <ng-option *ngFor=\"let commodity of commodityList\" [value]=\"commodity.product_name\">{{commodity.product_name}}</ng-option>\n                                            </ng-select>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['commodity_name']?.invalid && (getCommodityFormGroup(i).controls['commodity_name']?.dirty || getCommodityFormGroup(i).controls['commodity_name']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_name']?.errors?.required\">Enter product name</small>\n                                            </div>\n                                        </td> \n                                        <td>\n                                            <input type=\"text\" formControlName=\"hsn_code\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.invalid && (getCommodityFormGroup(i).controls['hsn_code']?.dirty || getCommodityFormGroup(i).controls['hsn_code']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.errors?.required\">Enter hsn code</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['hsn_code']?.errors?.pattern\">Enter valid hsn code</small>\n                                            </div>\n                                        </td>                                       \n                                        <td>\n                                            <input type=\"text\" formControlName=\"country\" class=\"form-control\" readonly>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['country']?.invalid && (getCommodityFormGroup(i).controls['country']?.dirty || getCommodityFormGroup(i).controls['country']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['country']?.errors?.required\">Enter country</small>\n                                            </div>\n                                        </td>                                        \n                                        <td>\n                                            <input type=\"text\" (change)=\"calculateCommodityValue(i)\" formControlName=\"quantity\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.invalid && (getCommodityFormGroup(i).controls['quantity']?.dirty || getCommodityFormGroup(i).controls['quantity']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.errors?.required\">Enter quantity</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['quantity']?.errors?.pattern\">Enter valid quantity</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <select formControlName=\"uom\" class=\"form-control\">\n                                                <option value=\"PIECES\" selected>PIECES</option>\n                                                <option value=\"SET\">SET</option>\n                                                <option value=\"PAIR\">PAIR</option>\n                                                <option value=\"PACKAGE\">PACKAGE</option>\n                                                <option value=\"DOZENS\">DOZENS</option>\n                                                <option value=\"LITERS\">LITERS</option>\n                                                <option value=\"OTHERS\">OTHERS</option>\n                                            </select>\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['uom']?.invalid && (getCommodityFormGroup(i).controls['uom']?.dirty || getCommodityFormGroup(i).controls['uom']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['uom']?.errors?.required\">Select UOM</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" (change)=\"calculateCommodityValue(i)\" formControlName=\"unit_price\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.invalid && (getCommodityFormGroup(i).controls['unit_price']?.dirty || getCommodityFormGroup(i).controls['unit_price']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.errors?.required\">Enter unit price</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['unit_price']?.errors?.pattern\">Enter valid price</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <input type=\"text\" formControlName=\"commodity_value\" class=\"form-control\">\n                                            <div *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.invalid && (getCommodityFormGroup(i).controls['commodity_value']?.dirty || getCommodityFormGroup(i).controls['commodity_value']?.touched)\" class=\"error\">\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.errors?.required\">Enter commodity value</small>\n                                                <small *ngIf=\"getCommodityFormGroup(i).controls['commodity_value']?.errors?.pattern\">Enter valid value</small>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <a (click)=\"removeCommodity(i)\"><i *ngIf=\"i > 0\" class=\"fa fa-trash\"></i></a>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colspan=\"8\" class=\"text-right\"><strong>Total Commodity Value</strong></td>\n                                    <td colspan=\"2\"><strong>{{totalCommodityValue}}</strong></td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                        <a (click)=\"addCommodity()\"><span class=\"badge badge-primary mb-10 padding-5\"><i class=\"fa fa-plus\"></i> Add More</span></a>\n                    </div>                    \n                    <div class=\"form-row mt-10\">\n                        <div class=\"form-group col-md-6\" *ngIf=\"isSuperadmin\">\n                            <label for=\"commodity_items_summery\" class=\"control-label\">Summery Of The Items*</label>\n                            <textarea formControlName=\"commodity_items_summery\" class=\"form-control\"></textarea>\n                            <div *ngIf=\"form?.commodity_items_summery?.invalid && (form?.commodity_items_summery?.dirty || form?.commodity_items_summery?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.commodity_items_summery?.errors?.required\">Please enter items summery</small>\n                                <small *ngIf=\"form?.commodity_items_summery?.errors?.pattern\">Please enter valid items summery</small>\n                            </div>\n                        </div>                        \n                        <div class=\"form-group col-md-6\">\n                            <label for=\"remarks\" class=\"control-label\">Remarks(If Any)</label>\n                            <textarea formControlName=\"remarks\" class=\"form-control\" capital-string></textarea>\n                            <div *ngIf=\"form?.remarks?.invalid && (form?.remarks?.dirty || form?.remarks?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.remarks?.errors?.pattern\">Please enter valid remarks</small>\n                            </div>\n                        </div>                                                \n                    </div>\n                    <hr />\n                    <!-- <pre><code>{{ getAllErrors(updateForm) | json }}</code></pre> -->\n                    <input type=\"hidden\" formControlName=\"id\" />\n                    <button [disabled]=\"c2cMaxAmountReached || submitted\" class=\"btn btn-primary btn-sm waves-effect waves-light action-button\" type=\"submit\">Submit</button>\n                </nb-card-body>\n            </nb-card>\n        </form>\n    </div>\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, mobileRegx, addressRegx, alnumSpecialRegx, pincodeRegx, numRegx, floatRegx, alnumRegx, emailRegx, nonHTMLRegx, adhaarRegx, panCardRegx, gstnRegx, passportRegx, floatWithNegativeRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert, warning } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { PricesService } from '../../services/prices/prices.service';\nimport { getSumByKey, roundOffWeight } from '../../helpers/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'ngx-update-shipments',\n  templateUrl: './update-shipments.component.html',\n  styleUrls: ['./update-shipments.component.scss']\n})\nexport class UpdateShipmentsComponent implements OnInit {\n\n  private countriesWithoutZip = environment.COUNTRIES_WITHOUT_POSTAL_CODE;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list: any;\n  roles: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  displayMap: Boolean = false;\n  selectedFile: any;\n  currentUserData: any;\n  userBranch: any;\n  branchesList: any;\n  countriesList: any;\n  currentDate: any = new Date().toISOString().split('T')[0];\n  commodityDetails!: FormArray;\n  commodityList: any;\n  carriersList: any;\n  pricesList: any = [];\n  isSuperadmin: boolean = true;\n  shipmentID: string;\n  shipmentDetails: any;\n  showCustomDimentionsField: boolean = false;\n  noOfPieces: number = 0;\n  commoditiesLength: number = 0;\n  boxDetails: FormArray;\n  boxesCount: number = 0;\n  c2cMaxAmountReached: boolean = false;\n  totalCommodityValue: any = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private authenticateService: AuthenticateService,\n    private pricesService: PricesService,\n    private dialogService: NbDialogService,\n    private sidebarService: NbSidebarService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.shipmentID = this.route.snapshot.paramMap.get('id');\n    const accessData = this.accessService.getActionAccess('shipments-list');\n    if(accessData && accessData.length > 0 && this.shipmentID){\n      if(!accessData[0].edit){\n        this.router.navigate(['/admin/pages/access-denied']);\n      }\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }else{\n      this.router.navigate(['/admin/pages/access-denied']);\n    }\n    \n    this.toggleSidebar();\n    this.getBranchesList();\n    this.getCarriers();    \n    this.getCountries();    \n    this.getCommodityList();    \n    \n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData.role_type !== 'Super-Admin'){\n      this.userBranch = this.currentUserData.branch_id;\n      this.isSuperadmin = false;\n    }    \n\n    this.getShipmentDetails();\n\n    this.updateForm = this.formBuilder.group({\n      id: [this.shipmentID, [Validators.required]],\n      branch: [this.userBranch, [Validators.required]],\n      invoice_number: ['', [Validators.required]],\n      date: [this.currentDate, [Validators.required]],\n      service_type: ['', [Validators.required]],\n      destination_country: ['US', [Validators.required]],\n      shipment_type: ['', [Validators.required]],\n      // tracking_no1: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      // tracking_no2: ['', [Validators.pattern(nonHTMLRegx)]],\n      // tracking_no3: ['', [Validators.pattern(nonHTMLRegx)]],\n      // tracking_no4: ['', [Validators.pattern(nonHTMLRegx)]],\n      no_of_pieces: ['', [Validators.required, Validators.pattern(numRegx), Validators.maxLength(4)]],\n      boxes_details: this.formBuilder.array([]),\n      actual_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      valumetric_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      chargable_weight: [0, [Validators.required, Validators.pattern(floatRegx)]], \n      medicine_shipment: ['NO', [Validators.required]],     \n      product_type: ['NON DOCS', [Validators.required]],\n      basic_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      commercial_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      jewellery_appraisal_amount: [0, [Validators.pattern(floatRegx)]],\n      pickup_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      packing_charges_amount: [0, [Validators.pattern(floatRegx)]],\n      gst_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      other_amount: [0, [Validators.pattern(floatWithNegativeRegx)]],\n      total_amount: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      mode_of_payment: ['CASH', [Validators.required]],\n      transaction_id: ['', [Validators.pattern(nonHTMLRegx)]],\n      sender_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      sender_company_name: ['', [Validators.pattern(alnumRegx)]],\n      sender_address1: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      sender_address2: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      sender_address3: ['', [Validators.pattern(addressRegx)]],\n      sender_pincode: ['', [Validators.required, Validators.pattern(pincodeRegx)]],\n      sender_country: ['INDIA', [Validators.required, Validators.pattern(alphaRegx)]],\n      sender_state: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      sender_city: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      sender_phone_number: ['', [Validators.required, Validators.pattern(mobileRegx)]],\n      sender_email: ['', [Validators.pattern(emailRegx)]],\n      sender_id_proof_type: ['', [Validators.required]],\n      sender_id_proof_number: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      receiver_name: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n      receiver_company_name: ['', [Validators.pattern(alnumRegx)]],\n      receiver_address1: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      receiver_address2: ['', [Validators.required, Validators.pattern(addressRegx)]],\n      receiver_address3: ['', [Validators.pattern(addressRegx)]],\n      receiver_pincode: ['', [Validators.required, Validators.minLength(5)]],\n      receiver_state: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      receiver_city: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      receiver_phone_number: ['', [Validators.required, Validators.pattern(numRegx), Validators.minLength(7), Validators.maxLength(15)]],\n      receiver_email: ['', [Validators.pattern(emailRegx)]],\n      commodity_list: this.formBuilder.array([]),\n      commodity_items_summery: ['', [Validators.required]],\n      remarks: ['', [Validators.pattern(alnumSpecialRegx)]],\n    });\n    this.commodityDetails = this.updateForm.get(\"commodity_list\") as FormArray;\n    this.boxDetails = this.updateForm.get(\"boxes_details\") as FormArray;\n  }\n\n  getAllErrors(form: FormGroup | FormArray): { [key: string]: any; } | null {\n    let hasError = false;\n    const result = Object.keys(form.controls).reduce((acc, key) => {\n        const control = form.get(key);\n        const errors = (control instanceof FormGroup || control instanceof FormArray)\n            ? this.getAllErrors(control)\n            : control.errors;\n        if (errors) {\n            acc[key] = errors;\n            hasError = true;\n        }\n        return acc;\n    }, {} as { [key: string]: any; });\n    return hasError ? result : null;\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  getCommodityFormGroup(index: number): FormGroup {\n    this.commodityDetails = this.updateForm.get('commodity_list') as FormArray;\n    const formGroup = this.commodityDetails.controls[index] as FormGroup;\n    return formGroup; \n  }\n\n  commodity_list(): FormArray {\n    return this.updateForm.get(\"commodity_list\") as FormArray;\n  }\n\n  newCommodityFields(): FormGroup {\n    return this.formBuilder.group({\n      box_number: ['', [Validators.required]],\n      commodity_name: ['', [Validators.required]],\n      hsn_code: ['', [Validators.required, Validators.pattern(alnumRegx)]],\n      country: ['INDIA', [Validators.required]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      uom: ['PIECES', [Validators.required]],\n      unit_price: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      commodity_value: ['', [Validators.required, Validators.pattern(floatRegx)]],\n    })\n  }\n\n  addCommodity() {\n    this.commodityDetails.push(this.newCommodityFields());\n    this.commoditiesLength = (this.commodityDetails.value).length;\n  }\n\n  removeCommodity(index: number) {\n    this.commodityDetails.removeAt(index);\n    this.commoditiesLength = (this.commodityDetails.value).length;\n    let commodityNamesArray = this.commodityDetails.value.map((val: any) => { \n      let commodityVal = (val.commodity_name).split('(');\n      return commodityVal[0]; \n    });\n    this.updateForm.controls['commodity_items_summery'].setValue(commodityNamesArray.slice(0, 3).join(','));\n    this.checkTotalCommodityValue();\n  }\n\n  setCommodityFields(data: any) {\n    (<FormArray>this.updateForm.get('commodity_list')).clear();    \n    data.forEach((x: any) => {\n      this.commodityDetails.push(this.formBuilder.group({ \n        box_number: x.box_number,\n        commodity_name: x.commodity_name,\n        hsn_code: x.hsn_code,\n        country: x.country,\n        quantity: x.quantity,\n        uom: x.uom,\n        unit_price: x.unit_price,\n        commodity_value: x.commodity_value, \n      }))\n    });\n    this.commoditiesLength = (this.commodityDetails.value).length;\n    this.checkTotalCommodityValue();\n  }\n\n  ///////////// HANDLING DYNAMIC BOXES DETAILS /////////////\n  handleNumberOfPiecesChange = () => {\n    let no_of_pieces = parseInt(this.updateForm.value.no_of_pieces);\n    if(this.boxesCount < no_of_pieces){\n      for(let i=this.boxesCount; i < no_of_pieces; i++){\n        this.addBoxDetails();\n      }\n    }else if(this.boxesCount > no_of_pieces){\n      for(let i=this.boxesCount; i >= no_of_pieces; i--){\n        this.removeBoxDetails(i);        \n      }\n    }\n  }\n\n  handleBoxDetailsChange = () => {\n    let totalActualWeight: any = 0;\n    let totalVolumetricWeight: any = 0;\n    let totalChargeableWeight: any = 0;\n    this.boxDetails.value.map((data: any, index: any) => {\n      let boxWeight = data.box_weight;\n      let width: number;\n      let length: number;\n      let height: number;\n      if(boxWeight){\n        if(boxWeight === '3KG'){\n          width = 30;\n          length = 21;\n          height = 21;\n        }else if(boxWeight === '5KG'){\n          width = 36;\n          length = 26;\n          height = 26;\n        }else if(boxWeight === '10KG'){\n          width = 40;\n          length = 35;\n          height = 35;\n        }else if(boxWeight === '15KG'){\n          width = 60;\n          length = 35;\n          height = 35;\n        }else if(boxWeight === 'CUSTOM'){\n          width = data.width;\n          length = data.length;\n          height = data.height;\n        }\n      }\n      this.getBoxDetailsFormGroup(index).controls['width'].setValue(width);\n      this.getBoxDetailsFormGroup(index).controls['length'].setValue(length);\n      this.getBoxDetailsFormGroup(index).controls['height'].setValue(height);\n      let valumetricWeight: any = 0;\n      let actualWeight: any = data.actual_weight ? parseFloat(data.actual_weight) : 0;\n      if(width && length && height){\n        valumetricWeight = (width*length*height)/5000;\n      }\n      let chargeableWeight = roundOffWeight(actualWeight > valumetricWeight ? actualWeight : valumetricWeight);\n      this.getBoxDetailsFormGroup(index).controls['valumetric_weight'].setValue(roundOffWeight(valumetricWeight));\n      this.getBoxDetailsFormGroup(index).controls['chargeable_weight'].setValue(chargeableWeight);\n      \n      totalActualWeight = totalActualWeight + actualWeight;\n      totalVolumetricWeight = totalVolumetricWeight + valumetricWeight;\n      totalChargeableWeight = totalChargeableWeight + chargeableWeight;\n    });\n    this.updateForm.controls['actual_weight'].setValue(totalActualWeight);\n    this.updateForm.controls['valumetric_weight'].setValue(roundOffWeight(totalVolumetricWeight));\n    this.updateForm.controls['chargable_weight'].setValue(roundOffWeight(totalChargeableWeight));\n    this.calculatePrices();\n  }\n\n  calculatePrices = async() => {\n    if(this.updateForm.value.no_of_pieces){\n      let noOfPieces: number = this.noOfPieces = parseInt(this.updateForm.value.no_of_pieces);\n      let medicineShipment = this.updateForm.value.medicine_shipment;\n      let medicineShipmentValue = 'NO';\n      if(medicineShipment && medicineShipment === 'YES' && noOfPieces === 1){\n        medicineShipmentValue = 'YES'\n      }\n      this.updateForm.controls['medicine_shipment'].setValue(medicineShipmentValue);\n      let finalWeight = this.updateForm.value.chargable_weight;      \n      let priceData = this.pricesList && this.pricesList.length > 0 && this.pricesList.filter((data: any) => data.weight_from <= finalWeight && data.weight_to >= finalWeight);\n      if(priceData && priceData.length > 0){\n        let pricePerKG = medicineShipmentValue === 'YES' ? priceData[0].medicine_price_per_kg : priceData[0].price_per_kg;\n        let basicAmount = pricePerKG * finalWeight;\n        let commercialChargesAmount = this.updateForm.value.commercial_charges_amount ? parseInt(this.updateForm.value.commercial_charges_amount) : 0;\n        let jewelleryAppraisalAmount = this.updateForm.value.jewellery_appraisal_amount ? parseInt(this.updateForm.value.jewellery_appraisal_amount) : 0;\n        let pickupChargesAmount = this.updateForm.value.pickup_charges_amount ? parseInt(this.updateForm.value.pickup_charges_amount) : 0;\n        let packingChargesAmount = this.updateForm.value.packing_charges_amount ? parseInt(this.updateForm.value.packing_charges_amount) : 0;\n        let priceAmount = basicAmount + commercialChargesAmount + jewelleryAppraisalAmount + pickupChargesAmount + packingChargesAmount;\n        let gstAmount = (priceAmount*18)/100;\n        let otherAmount = this.updateForm.value.other_amount ? parseInt(this.updateForm.value.other_amount) : 0;\n        let totalAmount = Math.round(priceAmount + gstAmount + otherAmount);\n        \n        this.updateForm.controls['basic_amount'].setValue(basicAmount);\n        this.updateForm.controls['commercial_charges_amount'].setValue(commercialChargesAmount);\n        this.updateForm.controls['jewellery_appraisal_amount'].setValue(jewelleryAppraisalAmount);\n        this.updateForm.controls['pickup_charges_amount'].setValue(pickupChargesAmount);\n        this.updateForm.controls['packing_charges_amount'].setValue(packingChargesAmount);\n        this.updateForm.controls['gst_amount'].setValue(gstAmount);\n        this.updateForm.controls['total_amount'].setValue(totalAmount);\n      }\n    }\n  }\n\n  handlePriceChange = () => {\n    let basicAmount = parseInt(this.updateForm.value.basic_amount);\n    let commercialChargesAmount = parseInt(this.updateForm.value.commercial_charges_amount);\n    let jewelleryAppraisalAmount = parseInt(this.updateForm.value.jewellery_appraisal_amount);\n    let pickupChargesAmount = parseInt(this.updateForm.value.pickup_charges_amount);\n    let packingChargesAmount = parseInt(this.updateForm.value.packing_charges_amount);\n    let gstAmount = parseInt(this.updateForm.value.gst_amount);\n    let otherAmount = this.updateForm.value.other_amount ? parseInt(this.updateForm.value.other_amount) : 0;\n    let totalAmount = basicAmount + commercialChargesAmount + jewelleryAppraisalAmount + pickupChargesAmount + packingChargesAmount + gstAmount + otherAmount;\n    this.updateForm.controls['other_amount'].setValue(otherAmount);\n    this.updateForm.controls['total_amount'].setValue(totalAmount);\n  }\n\n  getBoxDetailsFormGroup(index: number): FormGroup {\n    this.boxDetails = this.updateForm.get('boxes_details') as FormArray;\n    const formGroup = this.boxDetails.controls[index] as FormGroup;\n    return formGroup; \n  }\n\n  boxes_details(): FormArray {\n    return this.updateForm.get(\"boxes_details\") as FormArray;\n  }\n\n  setBoxesDetailsFields(data: any) {\n    (<FormArray>this.updateForm.get('boxes_details')).clear();    \n    data.forEach((x: any) => {\n      this.boxDetails.push(this.formBuilder.group({ \n        box_weight: x.box_weight,\n        actual_weight: x.actual_weight,\n        width: x.width,\n        length: x.length,\n        height: x.height,\n        valumetric_weight: x.valumetric_weight,\n        chargeable_weight: x.chargeable_weight\n      }))\n    });\n    this.boxesCount = (this.boxDetails.value).length;\n  }\n\n  newBoxDetailsFields(): FormGroup {\n    return this.formBuilder.group({\n      box_weight: ['', [Validators.required]],\n      actual_weight: [0, [Validators.required, Validators.pattern(floatRegx)]],\n      width: ['', [Validators.required, Validators.pattern(numRegx)]],\n      length: ['', [Validators.required, Validators.pattern(numRegx)]],\n      height: ['', [Validators.required, Validators.pattern(numRegx)]],\n      valumetric_weight: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      chargeable_weight: ['', [Validators.required, Validators.pattern(floatRegx)]]\n    })\n  }\n\n  addBoxDetails() {  \n    this.boxDetails.push(this.newBoxDetailsFields());\n    this.boxesCount = (this.boxDetails.value).length;\n  }\n\n  removeBoxDetails(index: number) {\n    this.boxDetails.removeAt(index);\n    this.boxesCount = (this.boxDetails.value).length;\n    this.handleBoxDetailsChange();\n  }\n  ///////////// HANDLING DYNAMIC BOXES DETAILS /////////////\n\n  getShipmentDetails = async() => {\n    let resp = await this.adminService.getData('getShipmentDetails', {id: this.shipmentID});          \n    if(resp && resp.responseCode === 1){\n      this.shipmentDetails = resp.info; \n      let data = {\n        id: this.shipmentID,\n        branch: this.shipmentDetails.branch_id,\n        invoice_number: this.shipmentDetails.invoice_number,\n        date: this.shipmentDetails.date,\n        service_type: this.shipmentDetails.service_type,\n        destination_country: this.shipmentDetails.destination_country,\n        shipment_type: this.shipmentDetails.shipment_type,\n        // tracking_no1: this.shipmentDetails.tracking_no1,\n        // tracking_no2: this.shipmentDetails.tracking_no2,\n        // tracking_no3: this.shipmentDetails.tracking_no3,\n        // tracking_no4: this.shipmentDetails.tracking_no4,\n        no_of_pieces: this.shipmentDetails.no_of_pieces,      \n        boxes_details: [],      \n        actual_weight: this.shipmentDetails.actual_weight,\n        valumetric_weight: this.shipmentDetails.valumetric_weight,\n        chargable_weight: this.shipmentDetails.chargable_weight, \n        medicine_shipment: this.shipmentDetails.medicine_shipment,     \n        product_type: this.shipmentDetails.product_type,\n        basic_amount: this.shipmentDetails.basic_amount,\n        commercial_charges_amount: this.shipmentDetails.commercial_charges_amount,\n        jewellery_appraisal_amount: this.shipmentDetails.jewellery_appraisal_amount,\n        pickup_charges_amount: this.shipmentDetails.pickup_charges_amount,\n        packing_charges_amount: this.shipmentDetails.packing_charges_amount,\n        gst_amount: this.shipmentDetails.gst_amount,\n        other_amount: this.shipmentDetails.other_amount,\n        total_amount: this.shipmentDetails.total_amount,\n        mode_of_payment: this.shipmentDetails.mode_of_payment,\n        transaction_id: this.shipmentDetails.transaction_id && this.shipmentDetails.transaction_id !== 'null' ? this.shipmentDetails.transaction_id : '',\n        sender_name: this.shipmentDetails.sender_name,\n        sender_company_name: this.shipmentDetails.sender_company_name && this.shipmentDetails.sender_company_name !== 'null' ? this.shipmentDetails.sender_company_name : '',\n        sender_address1: this.shipmentDetails.sender_address1,\n        sender_address2: this.shipmentDetails.sender_address2,\n        sender_address3: this.shipmentDetails.sender_address3 && this.shipmentDetails.sender_address3 !== 'null' ? this.shipmentDetails.sender_address3 : '',\n        sender_pincode: this.shipmentDetails.sender_pincode,\n        sender_country: this.shipmentDetails.sender_country,\n        sender_state: this.shipmentDetails.sender_state,\n        sender_city: this.shipmentDetails.sender_city,\n        sender_phone_number: this.shipmentDetails.sender_phone_number,\n        sender_email: this.shipmentDetails.sender_email && this.shipmentDetails.sender_email !== 'null' ? this.shipmentDetails.sender_email : '',\n        sender_id_proof_type: this.shipmentDetails.sender_id_proof_type,\n        sender_id_proof_number: this.shipmentDetails.sender_id_proof_number,\n        receiver_name: this.shipmentDetails.receiver_name,\n        receiver_company_name: this.shipmentDetails.receiver_company_name && this.shipmentDetails.receiver_company_name !== 'null' ? this.shipmentDetails.receiver_company_name : '',\n        receiver_address1: this.shipmentDetails.receiver_address1,\n        receiver_address2: this.shipmentDetails.receiver_address2,\n        receiver_address3: this.shipmentDetails.receiver_address3 && this.shipmentDetails.receiver_address3 !== 'null' ? this.shipmentDetails.receiver_address3 : '',\n        receiver_pincode: this.shipmentDetails.receiver_pincode,\n        receiver_state: this.shipmentDetails.receiver_state,\n        receiver_city: this.shipmentDetails.receiver_city,\n        receiver_phone_number: this.shipmentDetails.receiver_phone_number,\n        receiver_email: this.shipmentDetails.receiver_email && this.shipmentDetails.receiver_email !== 'null' ? this.shipmentDetails.receiver_email : '',\n        commodity_items_summery: this.shipmentDetails.commodity_items_summery,\n        remarks: this.shipmentDetails.remarks,\n        commodity_list: []     \n      };\n      setTimeout(()=>{\n        this.setCommodityFields(Array.isArray(this.shipmentDetails.commodity_list) ? this.shipmentDetails.commodity_list : JSON.parse(this.shipmentDetails.commodity_list));\n        this.setBoxesDetailsFields(Array.isArray(this.shipmentDetails.boxes_details) ? this.shipmentDetails.boxes_details : JSON.parse(this.shipmentDetails.boxes_details));\n      }, 0);\n      this.updateForm.setValue(data);  \n      this.getPricesUsingCountryAndCarrrier();              \n    }else{\n      this.router.navigate(['/admin/pages/dashboard']);\n    }   \n  }\n\n  getBranchesList = async() => {\n    let resp = await this.adminService.getData('getBranches');          \n    if(resp && resp.responseCode === 1){\n      this.branchesList = resp.branchesList;\n    }   \n  }\n\n  getCarriers = async() => {\n    let resp = await this.pricesService.getData('getCarriers');\n    if(resp && resp.carriers){\n      this.carriersList = resp.carriers;\n    }\n  }\n\n  getCountries = async() => {\n    let resp = await this.pricesService.getData('getCountries');\n    if(resp && resp.countries){\n      this.countriesList = resp.countries;\n    }\n  }\n\n  getPricesUsingCountryAndCarrrier = async() => {\n    if(this.updateForm.value.service_type && this.updateForm.value.destination_country){\n      let reqData = {\n        carrier_id: this.updateForm.value.service_type,\n        country_code: this.updateForm.value.destination_country,\n      }\n      let resp = await this.pricesService.getData('getCarrrierZonePrices', reqData);\n      if(resp && resp.prices && resp.prices.length > 0){\n        this.pricesList = resp.prices;\n        this.calculatePrices();\n      }else{\n        await warning(\"There are no prices available for this service type ! Please and prices and try again\");\n        this.updateForm.setErrors({ 'invalid': true });\n        this.updateForm.controls['basic_amount'].setValue(0);\n        this.updateForm.controls['gst_amount'].setValue(0);\n        this.updateForm.controls['total_amount'].setValue(0);\n      }\n    }\n  }\n\n  getCommodityList = async() => {\n    let resp = await this.pricesService.getData('getCommodityList');\n    if(resp && resp.commodity_list){\n      this.commodityList = resp.commodity_list;\n    }\n  }\n\n  handleBoxNoChange = (event:any, index: number) => {\n    if(!event.target.value || !numRegx.test(event.target.value)){\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors({pattern: true});\n    }else if(event.target.value > this.updateForm.value.no_of_pieces){\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors({maxValue: true});\n    }else{\n      this.getCommodityFormGroup(index).controls['box_number'].setErrors(null);\n    }    \n  }\n\n  handleChangeModeOfPayment = () => {\n    let paymentMode = this.updateForm.value.mode_of_payment;\n    let transactionID = this.updateForm.value.transaction_id;\n    if(paymentMode){      \n      this.updateForm.controls['mode_of_payment'].setErrors(null);\n      if(paymentMode !== 'CASH' && !transactionID){\n        this.updateForm.controls['transaction_id'].setErrors({required: true});\n      }else{\n        this.updateForm.controls['transaction_id'].setErrors(null);\n      }\n    }else{\n      this.updateForm.controls['mode_of_payment'].setErrors({required: true});\n    }\n  }  \n\n  calculateCommodityValue = (index: number) => {\n    if(this.commodityDetails.controls[index].value.quantity && this.commodityDetails.controls[index].value.unit_price){\n      let commodityValue = parseFloat(this.commodityDetails.controls[index].value.quantity) * parseFloat(this.commodityDetails.controls[index].value.unit_price);\n      this.getCommodityFormGroup(index).controls['commodity_value'].setValue(commodityValue);\n    }\n    this.checkTotalCommodityValue();\n  }\n\n  checkTotalCommodityValue = async() => {\n    this.totalCommodityValue = await getSumByKey(this.updateForm.value.commodity_list, 'commodity_value');\n    this.c2cMaxAmountReached = this.updateForm.value.shipment_type === 'C2C' && this.totalCommodityValue > 24000 ? true : false;\n    if(this.c2cMaxAmountReached){\n      await errorAlert(\"Total commodity value should not exceed 24,000 for C2C shipment\");\n    }\n  }\n\n  createNewCommodityOption = (newValue: any) => {    \n    let data = {\n      product_name: newValue,\n      hsn_code: ''\n    }\n    this.commodityList.push(data);    \n  }\n\n  handleChangeCommodity = (commodityName: any, index: any) => {\n    let commodityValue = this.commodityList.filter((data:any) => data.product_name === commodityName);\n    if(commodityValue.length > 0){\n      this.getCommodityFormGroup(index).controls['hsn_code'].setValue(commodityValue[0].hsn_code);\n    }\n    let commodityNamesArray = this.commodityDetails.value.map((val: any) => { \n      let commodityVal = (val.commodity_name).split('(');\n      return commodityVal[0]; \n    });\n    this.updateForm.controls['commodity_items_summery'].setValue(commodityNamesArray.slice(0, 3).join(','));\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  getPincodeDetails = async(type = 'sender') => {\n    let country = type === 'sender' ? 'IN' : this.updateForm.value.destination_country;\n    try {      \n      if(!this.countriesWithoutZip.includes(country)){\n        let pincode = type === 'sender' ? this.updateForm.value.sender_pincode : this.updateForm.value.receiver_pincode;\n        if(pincode && pincode.length >= 3){\n          let pincodeDetails = await this.adminService.getPincodeDetails(pincode, country); \n          if(pincodeDetails && pincodeDetails.country){          \n            if(type === 'sender'){\n              this.updateForm.controls['sender_pincode'].setErrors(null);\n              this.updateForm.controls['sender_city'].setValue(pincodeDetails.city);\n              this.updateForm.controls['sender_state'].setValue(pincodeDetails.state);\n            }else{\n              let pin = this.updateForm.value.receiver_pincode;\n              if(country === 'GB'){\n                pin = pin.replace(/ /g, '').replace(/^(.*)(\\d)/, \"$1 $2\");\n              }\n              this.updateForm.controls['receiver_pincode'].setValue(pin);\n              this.updateForm.controls['receiver_pincode'].setErrors(null);\n              this.updateForm.controls['receiver_city'].setValue(pincodeDetails.city);\n              this.updateForm.controls['receiver_state'].setValue(pincodeDetails.state);\n            }  \n            return;        \n          }\n        } \n      }     \n    } catch (error) {\n    }  \n    if(type === 'sender'){\n      if(!this.countriesWithoutZip.includes(country)){\n        this.updateForm.controls['sender_pincode'].setErrors({pattern: true});\n      }      \n      this.updateForm.controls['sender_city'].setValue(null);\n      this.updateForm.controls['sender_state'].setValue(null);\n    }else{\n      if(!this.countriesWithoutZip.includes(country)){\n        this.updateForm.controls['receiver_pincode'].setErrors({pattern: true});\n      }\n      this.updateForm.controls['receiver_city'].setValue(null);\n      this.updateForm.controls['receiver_state'].setValue(null);\n    }\n    return;  \n  }\n\n  validateIDProof = () => {\n    let idProofType = this.updateForm.value.sender_id_proof_type;\n    let idProofNo = this.updateForm.value.sender_id_proof_number;    \n    if(idProofType && idProofNo){\n      if(idProofType === 'AADHAR' && !adhaarRegx.test(idProofNo)){\n        this.updateForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'PAN CARD' && !panCardRegx.test(idProofNo)){\n        this.updateForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'GSTN' && !gstnRegx.test(idProofNo)){\n        this.updateForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else if(idProofType === 'PASSPORT' && !passportRegx.test(idProofNo)){\n        this.updateForm.controls['sender_id_proof_number'].setErrors({'pattern': true});\n      }else{\n        this.updateForm.controls['sender_id_proof_number'].setErrors(null);\n      }\n    }\n  }\n\n  get form() { return this.updateForm.controls; }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.updateForm.markAllAsTouched();\n          document.getElementById('shipment-details').scrollIntoView(true);\n          this.submitted = false;\n            return;\n        }\n        let reqData = {...this.updateForm.value};\n        const addResp = await this.adminService.addOrUpdateData('updateShipmentDetails', reqData);\n        if(addResp && addResp.responseCode === 1){\n          await successAlert(\"Details updated successfully\");\n        }else if(addResp && addResp.responseCode === 0){\n          await errorAlert(addResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <form>\n            <nb-card>\n                <nb-card-header>\n                    SHIPMENT DETAILS\n                    <a routerLink=\"/admin/pages/shipments-list\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-arrow-left\"></i> Back To Shipments</a>\n                </nb-card-header>\n                <nb-card-body>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"branch\" class=\"control-label\">Branch</label><br />\n                            {{shipmentDetails.branch && shipmentDetails.branch.branch_name}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"invoice_number\" class=\"control-label\">Invoice Number</label><br />\n                            {{shipmentDetails.invoice_number}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"date\" class=\"control-label\">Date</label><br />\n                            {{shipmentDetails.date}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"service_type\" class=\"control-label\">Service Type</label><br />\n                            {{shipmentDetails.carrier && shipmentDetails.carrier.carrier_name}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"destination_country\" class=\"control-label\">Destination Country</label><br />\n                            {{shipmentDetails.country && shipmentDetails.country.country_name}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"shipment_type\" class=\"control-label\">Shipment Type</label><br />\n                            {{shipmentDetails.shipment_type}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no1\" class=\"control-label\">Tracking No 1</label><br />\n                            {{shipmentDetails.tracking_no1}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no2\" class=\"control-label\">Tracking No 2</label><br />\n                            {{shipmentDetails.tracking_no2}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no3\" class=\"control-label\">Tracking No 3</label><br />\n                            {{shipmentDetails.tracking_no3}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"tracking_no4\" class=\"control-label\">Tracking No 4</label><br />\n                            {{shipmentDetails.tracking_no4}}\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-2\">\n                            <label for=\"no_of_pieces\" class=\"control-label\">No Of Pieces : </label>&nbsp;&nbsp;{{shipmentDetails.no_of_pieces}}<br />\n                        </div>\n                    </div>\n                    <div class=\"form-row boxes_details\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-bordered\">\n                                <thead>\n                                    <tr>\n                                        <th>S.No</th>\n                                        <th>Box</th>\n                                        <th>Actual Weight</th>\n                                        <th>Width</th>\n                                        <th>Length</th>\n                                        <th>Height</th>\n                                        <th>Vol Weight</th>\n                                        <th>Char Weight</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let data of shipmentDetails.boxes_details; let i = index\">\n                                        <td>{{i + 1}}</td>\n                                        <td>\n                                            {{data.box_weight}}\n                                        </td>\n                                        <td>\n                                            {{data.actual_weight}}\n                                        </td> \n                                        <td>\n                                            {{data.width}}\n                                        </td>                                       \n                                        <td>\n                                            {{data.length}}\n                                        </td>                                        \n                                        <td>\n                                            {{data.height}}\n                                        </td>\n                                        <td>\n                                            {{data.valumetric_weight}}\n                                        </td>\n                                        <td>\n                                            {{data.chargeable_weight}}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div> \n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"actual_weight\" class=\"control-label\">Actual Weight  (Kg)</label><br />\n                            {{shipmentDetails.actual_weight}}\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"valumetric_weight\" class=\"control-label\">Volumetric Weight</label><br />\n                            {{shipmentDetails.valumetric_weight}}\n                        </div>\n                        <div class=\"form-group col-md-4\">\n                            <label for=\"chargable_weight\" class=\"control-label\">Chargable Weight</label><br />\n                            {{shipmentDetails.chargable_weight}}\n                        </div>\n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"medicine_shipment\" class=\"control-label\">Is This Medicine Shipment</label><br />\n                            {{shipmentDetails.medicine_shipment}}\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"product_type\" class=\"control-label\">Product Type</label><br />\n                            {{shipmentDetails.product_type}}\n                        </div>                                                \n                    </div>\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"basic_amount\" class=\"control-label\">Basic Charges</label><br />\n                            {{shipmentDetails.basic_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"commercial_charges_amount\" class=\"control-label\">Commercial Charges</label><br />\n                            {{shipmentDetails.commercial_charges_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"jewellery_appraisal_amount\" class=\"control-label\">Jewellery Appraisal</label><br />\n                            {{shipmentDetails.jewellery_appraisal_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"pickup_charges_amount\" class=\"control-label\">Pickup Charges</label><br />\n                            {{shipmentDetails.pickup_charges_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"packing_charges_amount\" class=\"control-label\">Packing Charges</label><br />\n                            {{shipmentDetails.packing_charges_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"gst_amount\" class=\"control-label\">GST(18%)</label><br />\n                            {{shipmentDetails.gst_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"other_amount\" class=\"control-label\">Others</label><br />\n                            {{shipmentDetails.other_amount}}\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"total_amount\" class=\"control-label\">Total Amount</label><br />\n                            {{shipmentDetails.total_amount}}\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Payment</label><br />\n                            {{shipmentDetails.mode_of_payment}}\n                        </div>                        \n                        <div class=\"form-group col-md-3\">\n                            <label for=\"transaction_id\" class=\"control-label\">Transaction ID</label><br />\n                            {{shipmentDetails.transaction_id}}\n                        </div>                                                \n                    </div>\n                    <hr />\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h6 class=\"sub-heading-text\">SENDER INFO</h6><hr />\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_name\" class=\"col-md-5 col-form-label\">Sender Name :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_name}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_company_name\" class=\"col-md-5 col-form-label\">Company Name :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_company_name}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address1\" class=\"col-md-5 col-form-label\">Address Line1 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_address1}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address2\" class=\"col-md-5 col-form-label\">Address Line2 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_address2}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_address3\" class=\"col-md-5 col-form-label\">Address Line3 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_address3}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_pincode\" class=\"col-md-5 col-form-label\">Postal Code :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_pincode}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_city\" class=\"col-md-5 col-form-label\">City :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_city}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_state\" class=\"col-md-5 col-form-label\">State :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_state}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_phone_number\" class=\"col-md-5 col-form-label\">Phone Number :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_phone_number}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_email\" class=\"col-md-5 col-form-label\">Email ID :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_email}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_type\" class=\"col-md-5 col-form-label\">ID Type :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_id_proof_type}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"sender_id_proof_number\" class=\"col-md-5 col-form-label\">ID Number :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.sender_id_proof_number}}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <h6 class=\"sub-heading-text\">RECEIVER INFO</h6><hr />\n                            <div class=\"form-row\">\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_name\" class=\"col-md-5 col-form-label\">Receiver Name :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_name}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_company_name\" class=\"col-md-5 col-form-label\">Company Name :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_company_name}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address1\" class=\"col-md-5 col-form-label\">Address Line1 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_address1}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address2\" class=\"col-md-5 col-form-label\">Address Line2 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_address2}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_address3\" class=\"col-md-5 col-form-label\">Address Line3 :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_address3}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_pincode\" class=\"col-md-5 col-form-label\">Postal Code :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_pincode}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_city\" class=\"col-md-5 col-form-label\">City :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_city}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_state\" class=\"col-md-5 col-form-label\">State :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_state}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_phone_number\" class=\"col-md-5 col-form-label\">Phone Number :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_phone_number}}\n                                    </div>\n                                </div>\n                                <div class=\"form-group row col-md-12\">\n                                    <label for=\"receiver_email\" class=\"col-md-5 col-form-label\">Email ID :</label>\n                                    <div class=\"col-md-7 mt-7\">\n                                        {{shipmentDetails.receiver_email}}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <p class=\"justify-content-between\">COMMODITY LIST/PRODUCT LIST</p>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th style=\"max-width: 50px;\">S.No</th>\n                                    <th style=\"min-width: 100px;\">Box No</th>\n                                    <th style=\"max-width: 250px;\">Name Of The Product</th>\n                                    <th style=\"min-width: 150px;\">HSN Code</th>\n                                    <th style=\"min-width: 100px; max-width: 150px;\">Country</th>\n                                    <th>Quantity</th>\n                                    <th style=\"min-width: 120px;\">UOM</th>\n                                    <th style=\"min-width: 100px;\">Unit Price</th>\n                                    <th>Commodity Value</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let data of shipmentDetails.commodity_list; let i = index\">\n                                    <td>{{i + 1}}</td>\n                                    <td>\n                                        {{data.box_number}}\n                                    </td>\n                                    <td>\n                                        {{data.commodity_name}}\n                                    </td> \n                                    <td>\n                                        {{data.hsn_code}}\n                                    </td>                                       \n                                    <td>\n                                        {{data.country}}\n                                    </td>                                        \n                                    <td>\n                                        {{data.quantity}}\n                                    </td>\n                                    <td>\n                                        {{data.uom}}\n                                    </td>\n                                    <td>\n                                        {{data.unit_price}}\n                                    </td>\n                                    <td>\n                                        {{data.commodity_value}}\n                                    </td>\n                                </tr>\n                            </tbody>\n                            <tfoot>\n                                <tr>\n                                    <td colspan=\"8\" class=\"text-right\"><strong>Total Commodity Value</strong></td>\n                                    <td><strong>{{totalCommodityValue}}</strong></td>\n                                </tr>\n                            </tfoot>\n                        </table>\n                    </div>                    \n                    <div class=\"form-row mt-10\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"commodity_items_summery\" class=\"control-label\">Summery Of The Items</label><br />\n                            {{shipmentDetails.commodity_items_summery}}\n\n                        </div>                        \n                        <div class=\"form-group col-md-6\">\n                            <label for=\"remarks\" class=\"control-label\">Remarks(If Any)</label><br />\n                            {{shipmentDetails.remarks}}\n                        </div>                                                \n                    </div>\n                </nb-card-body>\n            </nb-card>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getSumByKey } from '../../helpers/common';\n\n@Component({\n  selector: 'ngx-view-shipment-details',\n  templateUrl: './view-shipment-details.component.html',\n  styleUrls: ['./view-shipment-details.component.scss']\n})\nexport class ViewShipmentDetailsComponent implements OnInit {\n\n  userAccess = {view: true, edit: false, delete: false};\n  shipmentID: string;\n  shipmentDetails: any = [];\n  totalCommodityValue: any = 0;\n\n  constructor(\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private sidebarService: NbSidebarService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.shipmentID = this.route.snapshot.paramMap.get('id');\n    const accessData = this.accessService.getActionAccess('shipments-list');\n    if(accessData && accessData.length > 0 && this.shipmentID){\n      if(!accessData[0].view){\n        this.router.navigate(['/admin/pages/access-denied']);\n      }\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }else{\n      this.router.navigate(['/admin/pages/access-denied']);\n    }\n    \n    this.toggleSidebar();   \n\n    this.getShipmentDetails();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  getShipmentDetails = async() => {\n    let resp = await this.adminService.getData('getShipmentDetails', {id: this.shipmentID});          \n    if(resp && resp.responseCode === 1){\n      this.shipmentDetails = resp.info;             \n      this.shipmentDetails.commodity_list = Array.isArray(this.shipmentDetails.commodity_list) ? this.shipmentDetails.commodity_list : JSON.parse(this.shipmentDetails.commodity_list);\n      this.shipmentDetails.boxes_details = Array.isArray(this.shipmentDetails.boxes_details) ? this.shipmentDetails.boxes_details : JSON.parse(this.shipmentDetails.boxes_details);\n      this.totalCommodityValue = await getSumByKey(this.shipmentDetails.commodity_list, 'commodity_value');\n    }else{\n      this.router.navigate(['/admin/pages/dashboard']);\n    }   \n  }\n\n}\n","import { AbstractControl, FormGroup, ValidationErrors } from '@angular/forms';\n\nexport function ConfirmNewIsNotOld(controlName: string, matchingControlName: string){\n    return (controls: AbstractControl) => {\n        const control = controls.get(controlName);\n        const matchingControl = controls.get(matchingControlName);\n        if (matchingControl.errors && !matchingControl.errors.confirmNewIsNotOld) {\n            return;\n        }\n        if (control.value === matchingControl.value) {\n            return matchingControl.setErrors({ confirmNewIsNotOld: true });\n        } else {\n            return matchingControl.setErrors(null);\n        }\n    }\n}\n    \nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (controls: AbstractControl) => {\n        const control = controls.get(controlName);\n        const matchingControl = controls.get(matchingControlName);\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            return matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            return matchingControl.setErrors(null);\n        }\n    }\n}\n\nexport function CompareValidator(controlName: string, matchingControlName: string, type:string = 'lessthan'){\n    return (controls: AbstractControl) => {\n        const control = controls.get(controlName);\n        const matchingControl = controls.get(matchingControlName);\n        if (matchingControl.errors && !matchingControl.errors.compareFloatValidator) {\n            return;\n        }\n        let value1: number = parseFloat(control.value);\n        let value2: number = parseFloat(matchingControl.value);\n        \n        if (value1 >= value2 && type === 'lessthan') {\n            return matchingControl.setErrors({ compareValidator: true });\n        }else if (value1 <= value2 && type === 'greaterthan') {\n            return matchingControl.setErrors({ compareValidator: true });\n        } else {\n            return matchingControl.setErrors(null);\n        }\n    }\n}\n\n","<div class=\"row\">\n    <div class=\"col-lg-6\" *ngIf=\"userData.role_type === 'Super-Admin'\">\n        <nb-card>\n            <nb-card-header>\n                Change Email\n            </nb-card-header>\n            <nb-card-body>\n                <form id=\"changeEmailForm\" [formGroup]=\"changeEmailForm\">\n                    <div class=\"form-group\" [ngClass]=\"{ 'has-danger': emailForm?.email?.invalid && (emailForm?.email?.dirty || emailForm?.email?.touched) }\">\n                        <label for=\"email\">Current Email*</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{ 'form-control-danger': emailForm?.email?.invalid && (emailForm?.email?.dirty || emailForm?.email?.touched) }\" required>\n                        <div *ngIf=\"emailForm?.email?.invalid && (emailForm?.email?.dirty || emailForm?.email?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"emailForm?.email?.errors?.required\">Please enter email address</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"emailForm?.email?.errors?.pattern\">Please enter valid email address</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"button\" (click)=\"openModal(passwordModal)\" [disabled]=\"changeEmailForm?.invalid || submitted\" class=\"btn btn-primary\">Update</button>\n                    </div>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-lg-6\">\n        <nb-card>\n            <nb-card-header>\n                Change Password\n            </nb-card-header>\n            <nb-card-body>\n                <form id=\"changePswdForm\" [formGroup]=\"changePswdForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\" [ngClass]=\"{ 'has-danger': form?.old_password?.invalid && (form?.old_password?.dirty || form?.old_password?.touched) }\">\n                        <label for=\"old_password\">Current Password*</label>\n                        <input type=\"password\" class=\"form-control\" formControlName=\"old_password\" [ngClass]=\"{ 'form-control-danger': form?.old_password?.invalid && (form?.old_password?.dirty || form?.old_password?.touched) }\" required>\n                        <div *ngIf=\"form?.old_password?.invalid && (form?.old_password?.dirty || form?.old_password?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.old_password?.errors?.required\">Please enter current password</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"new_password\">New Password*</label>\n                        <input type=\"password\" class=\"form-control form-control-line\" formControlName=\"new_password\" [ngClass]=\"{ 'form-control-danger': form?.new_password?.invalid && (form?.new_password?.dirty || form?.new_password?.touched) }\" required>\n                        <div *ngIf=\"form?.new_password?.invalid && (form?.new_password?.dirty || form?.new_password?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.new_password?.errors?.required\">Please enter new password</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.new_password?.errors?.pattern\">Password must be min 8 chars including one uppercase, one special character and alphanumeric</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.new_password?.errors?.confirmNewIsNotOld\">Old and new passwords must be different</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"confirm_new_password\">Confirm New Password*</label>\n                        <input type=\"password\" class=\"form-control form-control-line\" formControlName=\"confirm_new_password\" [ngClass]=\"{ 'form-control-danger': form?.confirm_new_password?.invalid && (form?.confirm_new_password?.dirty || form?.confirm_new_password?.touched) }\"\n                            required>\n                        <div *ngIf=\"form?.confirm_new_password?.invalid && (form?.confirm_new_password?.dirty || form?.confirm_new_password?.touched)\" class=\"error\">\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.confirm_new_password?.errors?.required\">Please confirm new password</small>\n                            <small class=\"form-control-feedback\" *ngIf=\"form?.confirm_new_password?.errors?.confirmedValidator\">Password and Confirm Password must be match</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button [disabled]=\"changePswdForm?.invalid || submitted\" class=\"btn btn-primary\">Update</button>\n                    </div>\n                </form>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- MODAL -->\n<ng-template #passwordModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"confirmPswdForm\" (ngSubmit)=\"changeEmail()\">\n        <nb-card>        \n            <nb-card-header>\n            CONFIRM PASSWORD\n            <button id=\"close_password_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <p class=\"mb-1\">Please enter your password to update email address</p><br />\n                <div class=\"form-group\">\n                    <label for=\"password\">Password*</label>\n                    <input type=\"password\" class=\"form-control form-control-line\" formControlName=\"password\" autoFocus required>\n                    <div *ngIf=\"pswdForm?.password?.invalid && (pswdForm?.password?.dirty || pswdForm?.password?.touched)\" class=\"error\">\n                        <small class=\"form-control-feedback\" *ngIf=\"pswdForm?.password?.errors?.required\">Please enter password</small>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"submit\" [disabled]=\"confirmPswdForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>           \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { ConfirmedValidator, ConfirmNewIsNotOld } from '../../helpers/confirmed.validator';\nimport { passwordRegx, emailRegx } from '../../helpers/regExp';\nimport { successAlert, errorAlert, confirmAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  changePswdForm!: FormGroup;\n  changeEmailForm!: FormGroup;\n  confirmPswdForm!: FormGroup;\n  submitted = false;\n  userData: any;\n  showPswdModal: Boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private authenticateService: AuthenticateService,\n    private dialogService: NbDialogService\n  ) { }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.userData = this.authenticateService.currentUserValue;\n\n    this.changeEmailForm = this.formBuilder.group({\n      email: [this.userData.email, [Validators.required, Validators.pattern(emailRegx)]]\n    });\n\n    this.changePswdForm = this.formBuilder.group({\n      old_password: ['', [Validators.required]],\n      new_password: ['', [Validators.required, Validators.pattern(passwordRegx)]],\n      confirm_new_password: ['', [Validators.required]],\n    }, {\n      validator: [\n        ConfirmNewIsNotOld('old_password', 'new_password'), \n        ConfirmedValidator('new_password', 'confirm_new_password')\n      ]      \n    } as AbstractControlOptions\n    );\n\n    this.confirmPswdForm = this.formBuilder.group({\n      password: ['', [Validators.required]]\n    });\n  }\n\n  get emailForm() { return this.changeEmailForm.controls; }\n  get form() { return this.changePswdForm.controls; }\n  get pswdForm() { return this.confirmPswdForm.controls; }\n\n  openModal = async(dialog: TemplateRef<any>) => {\n    if (this.changeEmailForm.invalid) {\n      return;\n    }\n    if((this.userData.email).toLowerCase() === this.changeEmailForm.value.email){        \n      this.submitted = false;\n      document.getElementById(\"close_password_modal\")?.click();\n      await errorAlert('Sorry ! New and Old email should be different.');\n      return;\n    }\n\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  changeEmail = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.changeEmailForm.invalid || this.confirmPswdForm.invalid) {\n        this.submitted = false;\n        return;\n      }\n      if((this.userData.email).toLowerCase() === this.changeEmailForm.value.email){        \n        this.submitted = false;\n        document.getElementById(\"close_password_modal\")?.click();\n        await errorAlert('Sorry ! New and Old email should be different.');\n        return;\n      }\n      \n      const updateData = {\n        email: this.userData.email,\n        new_email: this.changeEmailForm.value.email,\n        password: this.confirmPswdForm.value.password\n      }\n      const data = await this.adminService.addOrUpdateData('updateEmail', updateData);\n      if(data && data.responseCode === 1){\n        if(data.accessToken){\n          let resp = this.authenticateService.setCurrentUserSubject(data);\n          if(resp){\n            await successAlert('Email updated successfully');\n            this.submitted = false;\n            this.confirmPswdForm.reset();\n            document.getElementById(\"close_password_modal\")?.click();\n            return;\n          }\n        }\n        if(await confirmAlert('Email updated successfully ! Please login again.')){\n          this.authenticateService.logout();\n        }else{\n          this.authenticateService.logout();\n        }\n      } else if(data && data.responseCode === 0){\n        await errorAlert(data.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n    this.confirmPswdForm.reset();\n    document.getElementById(\"close_password_modal\")?.click();\n  }\n\n  onSubmit = async() => {\n    try {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.changePswdForm.invalid) {\n        this.submitted = false;\n        return;\n      }\n      \n      const data = await this.adminService.addOrUpdateData('updatePassword', this.changePswdForm.value);\n      if(data && data.responseCode === 1){\n        await successAlert('Password updated successfully');\n        this.changePswdForm.reset();\n      } else if(data && data.responseCode === 0){\n        await errorAlert(data.message);\n      }else{\n        await errorAlert('Something went wrong ! Please try again.');\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }\n    this.submitted = false;\n  }\n\n}\n","import { NbMenuService } from '@nebular/theme';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(private menuService: NbMenuService) {\n  }\n\n  goToHome() {\n    this.menuService.navigateHome();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n          <h2 class=\"title\">404 Page Not Found</h2>\n          <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n          <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n            Go To Dashboard\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ngx-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  goToHome() {\n    this.router.navigate(['/admin/pages/dashboard']);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n      <nb-card>\n        <nb-card-body>\n          <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n            <h2 class=\"title\">403 Access Denied</h2>\n            <small class=\"sub-title\">Sorry ! You don't have access to this page</small>\n            <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n              Go To Dashboard\n            </button>\n          </div>\n        </nb-card-body>\n      </nb-card>\n    </div>\n  </div>\n  ","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getBankTransactions()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.view\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"transactionsList && transactionsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th *ngIf=\"isSuperAdmin\">Branch</th>\n                                <th>Date</th>\n                                <th>Transaction ID</th>\n                                <th>Mode Of Deposit</th>\n                                <th>Amount</th>                                \n                                <th>Status</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td *ngIf=\"isSuperAdmin\">\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string6\" [(ngModel)]=\"search_string6\" placeholder=\"Search\"/>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of transactionsList | smartFilter: { 'branch.branch_name': search_string1, transaction_date: search_string2, transaction_id: search_string3, mode_of_deposit: search_string4, amount: search_string5, status: search_string6 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td *ngIf=\"isSuperAdmin\">{{data.branch.branch_name}}</td>\n                                <td>{{data.transaction_date}}</td>\n                                <td>{{data.transaction_id}}</td>\n                                <td>{{data.mode_of_deposit}}</td>\n                                <td>{{data.amount}}</td>\n                                <td>\n                                    <span *ngIf=\"data.status === 'PENDING'\" class=\"badge badge-warning\">{{data.status}}</span>\n                                    <span *ngIf=\"data.status === 'REJECTED'\" class=\"badge badge-danger\">{{data.status}}</span>\n                                    <span *ngIf=\"data.status === 'APPROVED'\" class=\"badge badge-success\">{{data.status}}</span>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.transaction_proof\" (click)=\"downloadKycFiles(data.transaction_proof)\">Download Proof</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!transactionsList || transactionsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"form?.transaction_date?.invalid && (form?.transaction_date?.dirty || form?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"form?.transaction_id?.invalid && (form?.transaction_id?.dirty || form?.transaction_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"form?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_deposit\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_deposit\">\n                            <option value='CASH'>CASH</option>\n                            <option value='IMPS'>IMPS</option>\n                            <option value='NEFT'>NEFT</option>\n                            <option value='RTGS'>RTGS</option>\n                        </select>\n                        <div *ngIf=\"form?.mode_of_deposit?.invalid && (form?.mode_of_deposit?.dirty || form?.mode_of_deposit?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.mode_of_deposit?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"form?.amount?.invalid && (form?.amount?.dirty || form?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"form?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_proof\" class=\"control-label\">Upload Proof*</label>\n                            <input type=\"file\" formControlName=\"transaction_proof\" (change)=\"onFileSelect($event)\" accept=\"images/*|.pdf\" class=\"form-control\">\n                            <div *ngIf=\"form?.transaction_proof?.invalid && (form?.transaction_proof?.dirty || form?.transaction_proof?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.transaction_proof?.errors?.required\">Please select a file</small>\n                            </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted || !branchID\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"editForm?.transaction_date?.invalid && (editForm?.transaction_date?.dirty || editForm?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"editForm?.transaction_id?.invalid && (editForm?.transaction_id?.dirty || editForm?.transaction_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"editForm?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_deposit\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_deposit\">\n                            <option value='CASH'>CASH</option>\n                            <option value='IMPS'>IMPS</option>\n                            <option value='NEFT'>NEFT</option>\n                            <option value='RTGS'>RTGS</option>\n                        </select>\n                        <div *ngIf=\"editForm?.mode_of_deposit?.invalid && (editForm?.mode_of_deposit?.dirty || editForm?.mode_of_deposit?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.mode_of_deposit?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"editForm?.amount?.invalid && (editForm?.amount?.dirty || editForm?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"editForm?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"status\" class=\"control-label\">Status*</label>\n                        <select class=\"form-control\" formControlName=\"status\">\n                            <option value='PENDING'>PENDING</option>\n                            <option value='APPROVED'>APPROVED</option>\n                            <option value='REJECTED'>REJECTED</option>\n                        </select>\n                        <div *ngIf=\"editForm?.status?.invalid && (editForm?.status?.dirty || editForm?.status?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.status?.errors?.required\">Please select status</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_proof\" class=\"control-label\">Update Proof</label>\n                        <input type=\"file\" formControlName=\"transaction_proof\" (change)=\"onFileSelect($event)\" accept=\"images/*|.pdf\" class=\"form-control\">\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, floatRegx, alnumSpecialRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-bank-transactions',\n  templateUrl: './bank-transactions.component.html',\n  styleUrls: ['./bank-transactions.component.scss']\n})\nexport class BankTransactionsComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  search_string1: string = '';\n  search_string2: string = '';\n  search_string3: string = '';\n  search_string4: string = '';\n  search_string5: string = '';\n  search_string6: string = '';\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  transactionsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  currentDate: any;\n  pastDate: any;\n  selectedFiles: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('bank-transactions');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      branch_id: [],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mode_of_deposit: ['CASH', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      transaction_proof: ['', [Validators.required]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_id: [],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mode_of_deposit: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      status: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      transaction_proof: [''],\n    });\n\n    this.getBankTransactions();\n    this.getBranchesList();\n    // this.toggleSidebar();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      branch_id: data.branch_id,\n      transaction_date: data.transaction_date,\n      transaction_id: data.transaction_id,\n      mode_of_deposit: data.mode_of_deposit,\n      amount: data.amount,\n      status: data.status,\n      transaction_proof: null\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getBankTransactions = async() => {\n    try {\n      let branchID = this.searchForm.value.branch ? this.searchForm.value.branch : null;\n      if(branchID){\n        this.branchID = branchID;\n        this.addForm.controls['branch_id'].setValue(branchID);\n      }else{\n        this.addForm.controls['branch_id'].setValue(null);\n      }\n      let reqData = {\n        branch_id: branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getBankTransactions', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.transactionsList = resp.transactions;\n        this.totalCount = (resp.transactions).length;\n      }\n    } catch (error) {\n      this.transactionsList = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  downloadKycFiles = (files: any) => {\n    if(files){\n      let fileNames = files.split(',');\n      fileNames.map((fileName: any) => {\n        this.adminService.downLoadFiles('transaction-proofs', fileName);\n      });      \n    }\n    \n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFiles = event.target.files;\n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid || !this.branchID) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.addForm.value)) {\n          if(key !== 'branch_id'){\n            let value = this.addForm.value[key];\n            formData.append(key, value);\n          }\n        }\n        if(this.selectedFiles && this.selectedFiles.length > 0){\n          formData.append('file_path', 'transaction-proofs');\n          for(let i =0; i < this.selectedFiles.length; i++){\n            formData.append(\"transaction_proof\", this.selectedFiles[i], this.selectedFiles[i]['name']);\n          }\n        }\n        formData.append('branch_id', this.branchID);\n        const resp = await this.adminService.addOrUpdateData('addBankTransaction', formData);\n        if(resp && resp.responseCode === 1){\n          this.getBankTransactions();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.updateForm.value)) {\n          let value = this.updateForm.value[key];\n          formData.append(key, value);\n        }\n        if(this.selectedFiles && this.selectedFiles.length > 0){\n          formData.append('file_path', 'transaction-proofs');\n          for(let i =0; i < this.selectedFiles.length; i++){\n            formData.append(\"transaction_proof\", this.selectedFiles[i], this.selectedFiles[i]['name']);\n          }\n        }\n        // formData.append('branch_id', this.branchID);\n        const updateResp = await this.adminService.addOrUpdateData('updateBankTransaction', formData);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getBankTransactions();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this user')){\n          const deleteResp = await this.adminService.deleteData('deleteUser', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getBankTransactions();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getBranchPaymentDetails()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                                <div *ngIf=\"form?.branch?.invalid && (form?.branch?.dirty || form?.branch?.touched)\" class=\"error\">\n                                    <small *ngIf=\"form?.branch?.errors?.required\">Please select branch</small>\n                                </div>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" [disabled]=\"searchForm?.invalid\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>        \n    </div>\n</div>\n<hr />\n<div class=\"row\" *ngIf=\"branchID\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <div class=\"row\" *ngIf=\"shipmentsTotalCount > 0\">\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Total Number of Shipments</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.shipmentsTotalCount}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Total Weight</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalWeight}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Basic Amount</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalBasicAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">GST Amount</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalGSTAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Total Amount</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Commision</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalCommission | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Commision Paid</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalCommissionPaymentPaid | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Commision Due</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalCommissionDue | currency:'INR'}}</span></div>\n                        </div>                        \n                    </div>\n                    <div class=\"col-md-6 col-sm-6\">\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Cash Deposits</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{totalCashAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">NEFT/IMPS/RTGS Payments</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{totalBankOnlineAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Debit/Credit Payments:</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalCardAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">UPI Payments:</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalUPIAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Others</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalOtherAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">Branch Due</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">{{paymentDetails.totalAmount - totalCashAmount - totalBankOnlineAmount - paymentDetails.totalCardAmount - paymentDetails.totalUPIAmount - paymentDetails.totalOtherAmount | currency:'INR'}}</span></div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <label class=\"col-sm-6\">TDS</label>\n                            <div class=\"col-sm-6\">: <span class=\"ml-10 strong-text\">0</span></div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"text-center\" *ngIf=\"shipmentsTotalCount === 0\">\n                    <p>Sorry ! No shipments are available for this branch</p>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- <br />\n<div class=\"row\" *ngIf=\"branchID\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        BANK TRASANTIONS LIST\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"transactionsList && transactionsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Transaction Date</th>\n                                <th>Mode Of Deposit</th>\n                                <th>Amount</th>                                \n                            </tr>\n                        </thead>\n                        <tbody>                            \n                            <tr *ngFor=\"let data of transactionsList | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.transaction_date}}</td>\n                                <td>{{data.mode_of_deposit}}</td>\n                                <td>{{data.amount}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!transactionsList || transactionsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { getSumByKey, getSumByKeyWithFilter } from '../../helpers/common';\n\n@Component({\n  selector: 'ngx-branch-payment-details',\n  templateUrl: './branch-payment-details.component.html',\n  styleUrls: ['./branch-payment-details.component.scss']\n})\nexport class BranchPaymentDetailsComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  showModal! : boolean;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  transactionsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  currentDate: any;\n  pastDate: any;\n  paymentDetails: any;\n  shipmentsList: any;\n  shipmentsTotalCount: any = 0;\n  totalCashAmount: any = 0;\n  totalBankOnlineAmount: any = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('branch-payment-details');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    // this.searchForm = this.formBuilder.group({\n    //   from_date: [this.pastDate, Validators.required],\n    //   to_date: [this.currentDate],\n    //   branch: [],\n    // });\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n      this.searchForm = this.formBuilder.group({\n        from_date: [this.pastDate, Validators.required],\n        to_date: [this.currentDate]\n      });\n      this.getBranchPaymentDetails();\n    }else{\n      this.searchForm = this.formBuilder.group({\n        from_date: [this.pastDate, Validators.required],\n        to_date: [this.currentDate],\n        branch: [, [Validators.required]],\n      });\n    }\n\n    this.getBranchesList();\n    // this.toggleSidebar();\n  }\n\n  get form(){ return this.searchForm.controls; }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getBranchPaymentDetails = async() => {\n    try {\n      this.branchID = this.searchForm && this.searchForm.value && this.searchForm.value.branch ? this.searchForm.value.branch : this.branchID;\n      let reqData = {\n        branch_id: this.branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n\n      this.getBankTransactions();\n      this.paymentDetails = '';\n      let resp = await this.adminService.getData('getShipmentsList', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.shipmentsList = resp.shipments;\n        this.shipmentsTotalCount = (resp.shipments).length;\n        let totalWeight = await getSumByKey(this.shipmentsList, 'chargable_weight');\n        let totalBasicAmount = await getSumByKey(this.shipmentsList, 'basic_amount');\n        let totalGSTAmount = await getSumByKey(this.shipmentsList, 'gst_amount');\n        let totalAmount = await getSumByKey(this.shipmentsList, 'total_amount');\n        let totalCardAmount = await getSumByKeyWithFilter(this.shipmentsList, 'total_amount', 'mode_of_payment', 'DEBIT/CREDIT CARD');\n        let totalUPIAmount = await getSumByKeyWithFilter(this.shipmentsList, 'total_amount', 'mode_of_payment', 'UPI');\n        let totalOtherAmount = await getSumByKeyWithFilter(this.shipmentsList, 'total_amount', 'mode_of_payment', 'OTHERS');\n        let commisionsResp = await this.adminService.getData('getBranchCommissions', {branch_id: this.branchID});\n        let commisionPaymentsResp = await this.adminService.getData('getBranchCommissionPayments', reqData);\n        let totalCommissionPaymentPaid: any = 0;\n        if(commisionPaymentsResp && commisionPaymentsResp.transactions){\n          totalCommissionPaymentPaid = await getSumByKey(commisionPaymentsResp.transactions, 'amount');\n        }\n        let totalCommission: number = 0;\n        if(commisionsResp && commisionsResp.list){\n          this.shipmentsList.map((data:any) => {\n            let filterData = commisionsResp.list.filter((data1: any) => data.date >= data1.from_date && data.date <= data1.to_date && data.chargable_weight >= data1.weight_from && data.chargable_weight <= data1.weight_to);\n            totalCommission = filterData.length > 0 ? totalCommission + (parseFloat(filterData[0].commission_amount) * parseFloat(data.chargable_weight)) : 0;\n          });\n        }\n        this.paymentDetails = {\n          shipmentsTotalCount: this.shipmentsTotalCount,\n          totalWeight: totalWeight,\n          totalBasicAmount: totalBasicAmount,\n          totalGSTAmount: totalGSTAmount,\n          totalAmount: totalAmount,\n          totalCardAmount: totalCardAmount,\n          totalUPIAmount: totalUPIAmount,\n          totalOtherAmount: totalOtherAmount,\n          totalCommission: totalCommission,\n          totalCommissionPaymentPaid: totalCommissionPaymentPaid,\n          totalCommissionDue: totalCommission - totalCommissionPaymentPaid,\n        }\n      }\n    } catch (error) {\n      this.paymentDetails = '';\n    }    \n  }\n\n  getBankTransactions = async() => {\n    try {\n      this.branchID = this.searchForm && this.searchForm.value && this.searchForm.value.branch ? this.searchForm.value.branch : this.branchID;\n      let reqData = {\n        branch_id: this.branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.branch ? this.searchForm.value.to_date : null,\n        approved: true\n      };\n      \n      let resp = await this.adminService.getData('getBankTransactions', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.transactionsList = resp.transactions;\n        this.totalCount = (resp.transactions).length;\n        let cashTransactions:any = this.transactionsList.filter((data: any) => data.mode_of_deposit === 'CASH' && data.status === 'APPROVED');\n        let onlineTransactions:any = this.transactionsList.filter((data: any) => data.mode_of_deposit !== 'CASH' && data.status === 'APPROVED');\n        \n        let totalCashAmount: any = 0;\n        let totalBankOnlineAmount: any = 0;\n        if(cashTransactions.length > 0){\n          totalCashAmount = await getSumByKey(cashTransactions, 'amount');\n        }\n        if(onlineTransactions.length > 0){\n          totalBankOnlineAmount = await getSumByKey(onlineTransactions, 'amount');\n        }\n        this.totalCashAmount = totalCashAmount;\n        this.totalBankOnlineAmount = totalBankOnlineAmount;\n      }\n    } catch (error) {\n      this.transactionsList = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.view\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Weight From</th>\n                                <th>Weight To</th>\n                                <th>Commission</th>\n                                <th>From Date</th>                                \n                                <th>To Date</th>\n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { weight_from: search_string1, weight_to: search_string2, commission_amount: search_string3, from_date: search_string4, to_date: search_string5 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.weight_from}}</td>\n                                <td>{{data.weight_to}}</td>\n                                <td>{{data.commission_amount}}</td>\n                                <td>{{data.from_date}}</td>\n                                <td>{{data.to_date}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_from\" class=\"control-label\">Weight From*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"weight_from\">\n                        <div *ngIf=\"form?.weight_from?.invalid && (form?.weight_from?.dirty || form?.weight_from?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.weight_from?.errors?.required\">Please enter from weight</small>\n                            <small *ngIf=\"form?.weight_from?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_to\" class=\"control-label\">Weight To*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"weight_to\">\n                        <div *ngIf=\"form?.weight_to?.invalid && (form?.weight_to?.dirty || form?.weight_to?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.weight_to?.errors?.required\">Please enter to weight</small>\n                            <small *ngIf=\"form?.weight_to?.errors?.pattern\">Please enter valid weight</small>\n                            <small *ngIf=\"form?.weight_to?.errors?.compareValidator\">This weight should greater than weight from</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"commission_amount\" class=\"control-label\">Commission Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"commission_amount\">\n                        <div *ngIf=\"form?.commission_amount?.invalid && (form?.commission_amount?.dirty || form?.commission_amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.commission_amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"form?.commission_amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"from_date\" class=\"control-label\">From Date*</label>\n                        <input type=\"date\" class=\"form-control\" (change)=\"handleDateChange('add')\" formControlName=\"from_date\">\n                        <div *ngIf=\"form?.from_date?.invalid && (form?.from_date?.dirty || form?.from_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.from_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.from_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"to_date\" class=\"control-label\">To Date*</label>\n                        <input type=\"date\" class=\"form-control\" id=\"to_date1\" formControlName=\"to_date\">\n                        <div *ngIf=\"form?.to_date?.invalid && (form?.to_date?.dirty || form?.to_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.to_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.to_date?.errors?.pattern\">Please enter valid date</small>\n                            <small *ngIf=\"form?.to_date?.errors?.compareValidator\">This date should greater than from date</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_from\" class=\"control-label\">Weight From*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"weight_from\">\n                        <div *ngIf=\"editForm?.weight_from?.invalid && (editForm?.weight_from?.dirty || editForm?.weight_from?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.weight_from?.errors?.required\">Please enter from kg</small>\n                            <small *ngIf=\"editForm?.weight_from?.errors?.pattern\">Please enter valid weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"weight_to\" class=\"control-label\">Weight To*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"weight_to\">\n                        <div *ngIf=\"editForm?.weight_to?.invalid && (editForm?.weight_to?.dirty || editForm?.weight_to?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.weight_to?.errors?.required\">Please enter weight</small>\n                            <small *ngIf=\"editForm?.weight_to?.errors?.pattern\">Please enter valid weight</small>\n                            <small *ngIf=\"editForm?.weight_to?.errors?.compareValidator\">This weight should greater than weight from</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"commission_amount\" class=\"control-label\">Commission Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"commission_amount\">\n                        <div *ngIf=\"editForm?.commission_amount?.invalid && (editForm?.commission_amount?.dirty || editForm?.commission_amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.commission_amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"editForm?.commission_amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"from_date\" class=\"control-label\">From Date*</label>\n                        <input type=\"date\" class=\"form-control\" (change)=\"handleDateChange('update')\" formControlName=\"from_date\">\n                        <div *ngIf=\"editForm?.from_date?.invalid && (editForm?.from_date?.dirty || editForm?.from_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.from_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.from_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"to_date\" class=\"control-label\">To Date*</label>\n                        <input type=\"date\" class=\"form-control\" id=\"to_date2\" formControlName=\"to_date\">\n                        <div *ngIf=\"editForm?.to_date?.invalid && (editForm?.to_date?.dirty || editForm?.to_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.to_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.to_date?.errors?.pattern\">Please enter valid date</small>\n                            <small *ngIf=\"editForm?.to_date?.errors?.compareValidator\">This date should greater than from date</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControlOptions, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { dateRegx, floatRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CompareValidator } from '../../helpers/confirmed.validator';\n\n@Component({\n  selector: 'ngx-manage-branch-commissions',\n  templateUrl: './manage-branch-commissions.component.html',\n  styleUrls: ['./manage-branch-commissions.component.scss']\n})\nexport class ManageBranchCommissionsComponent implements OnInit {\n\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  list: any;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  branchID: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private route: ActivatedRoute,\n    private router: Router,    \n  ) { }\n\n  ngOnInit(): void {\n    this.branchID = this.route.snapshot.paramMap.get('id');\n    const accessData = this.accessService.getActionAccess('branches');\n    if(accessData && accessData.length > 0 && this.branchID){\n      if(!accessData[0].edit){\n        this.router.navigate(['/admin/pages/access-denied']);\n      }\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }else{\n      this.router.navigate(['/admin/pages/access-denied']);\n    }\n\n    this.addForm = this.formBuilder.group({\n      weight_from: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      weight_to: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      commission_amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      from_date: ['', [Validators.required, Validators.pattern(dateRegx)]],\n      to_date: ['', [Validators.required, Validators.pattern(dateRegx)]]\n    }, {\n      validator: [\n        CompareValidator('weight_from', 'weight_to'),\n        // CompareValidator('from_date', 'to_date'),\n      ]      \n    } as AbstractControlOptions\n    );\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      weight_from: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      weight_to: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      commission_amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      from_date: ['', [Validators.required, Validators.pattern(dateRegx)]],\n      to_date: ['', [Validators.required, Validators.pattern(dateRegx)]]\n    }, {\n      validator: [\n        CompareValidator('weight_from', 'weight_to'),\n        // CompareValidator('from_date', 'to_date'),\n      ]      \n    } as AbstractControlOptions\n    );\n\n    this.getBranchCommissions();\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      weight_from: data.weight_from,\n      weight_to: data.weight_to,\n      commission_amount: data.commission_amount,\n      from_date: data.from_date,\n      to_date: data.to_date,\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  handleDateChange = (type = 'add') => {\n    let fromDate: any;\n    if(type === 'add'){\n      this.addForm.controls['to_date'].setValue(null);\n      fromDate = this.addForm.value.from_date;\n    }else{\n      this.updateForm.controls['to_date'].setValue(null);\n      fromDate = this.updateForm.value.from_date;\n    }\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      if(type === 'add'){\n        document.getElementById('to_date1').setAttribute('min', date[0]);\n      }else{\n        document.getElementById('to_date2').setAttribute('min', date[0]);\n      }\n    }\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  getBranchCommissions = async() => {\n    let resp = await this.adminService.getData('getBranchCommissions', {branch_id: this.branchID});          \n    if(resp && resp.responseCode === 1){\n      this.list = resp.list;\n      this.totalCount = (resp.list).length;\n    }   \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() =>{\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let reqData = {branch_id: this.branchID, ...this.addForm.value};\n        const resp = await this.adminService.addOrUpdateData('addBranchCommission', reqData);\n        if(resp && resp.responseCode === 1){\n          this.getBranchCommissions();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateBranchCommission', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getBranchCommissions();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this user')){\n          const deleteResp = await this.adminService.deleteData('deleteBranchCommission', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getBranchCommissions();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getBranchCommissionPayments()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"transactionsList && transactionsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th *ngIf=\"isSuperAdmin\">Branch</th>\n                                <th>Date</th>\n                                <th>Transaction ID</th>\n                                <th>Mode Of Payment</th>\n                                <th>Amount</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td *ngIf=\"isSuperAdmin\">\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of transactionsList | smartFilter: { 'branch.branch_name': search_string1, transaction_date: search_string2, transaction_id: search_string3, mode_of_payment: search_string4, amount: search_string5 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td *ngIf=\"isSuperAdmin\">{{data.branch.branch_name}}</td>\n                                <td>{{data.transaction_date}}</td>\n                                <td>{{data.transaction_id}}</td>\n                                <td>{{data.mode_of_payment}}</td>\n                                <td>{{data.amount}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.transaction_proof\" (click)=\"downloadKycFiles(data.transaction_proof)\">Download Proof</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!transactionsList || transactionsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"form?.transaction_date?.invalid && (form?.transaction_date?.dirty || form?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"form?.transaction_id?.invalid && (form?.transaction_id?.dirty || form?.transaction_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"form?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_payment\">\n                            <option value='CASH'>CASH</option>\n                            <option value='UPI'>UPI</option>\n                            <option value='BANK TRANSFOR'>BANK TRANSFOR</option>\n                            <option value='OTHERS'>OTHERS</option>\n                        </select>\n                        <div *ngIf=\"form?.mode_of_payment?.invalid && (form?.mode_of_payment?.dirty || form?.mode_of_payment?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.mode_of_payment?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"form?.amount?.invalid && (form?.amount?.dirty || form?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"form?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_proof\" class=\"control-label\">Upload Proof</label>\n                            <input type=\"file\" formControlName=\"transaction_proof\" (change)=\"onFileSelect($event)\" accept=\"images/*|.pdf\" class=\"form-control\">\n                            <!-- <div *ngIf=\"form?.transaction_proof?.invalid && (form?.transaction_proof?.dirty || form?.transaction_proof?.touched)\" class=\"error\">\n                                <small *ngIf=\"form?.transaction_proof?.errors?.required\">Please select a file</small>\n                            </div> -->\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted || !branchID\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"editForm?.transaction_date?.invalid && (editForm?.transaction_date?.dirty || editForm?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"editForm?.transaction_id?.invalid && (editForm?.transaction_id?.dirty || editForm?.transaction_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_id?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"editForm?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_payment\">\n                            <option value='CASH'>CASH</option>\n                            <option value='UPI'>UPI</option>\n                            <option value='BANK TRANSFOR'>BANK TRANSFOR</option>\n                            <option value='OTHERS'>OTHERS</option>\n                        </select>\n                        <div *ngIf=\"editForm?.mode_of_payment?.invalid && (editForm?.mode_of_payment?.dirty || editForm?.mode_of_payment?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.mode_of_payment?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"editForm?.amount?.invalid && (editForm?.amount?.dirty || editForm?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"editForm?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_proof\" class=\"control-label\">Update Proof</label>\n                        <input type=\"file\" formControlName=\"transaction_proof\" (change)=\"onFileSelect($event)\" accept=\"images/*|.pdf\" class=\"form-control\">\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, floatRegx, alnumSpecialRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-branch-commission-payments',\n  templateUrl: './branch-commission-payments.component.html',\n  styleUrls: ['./branch-commission-payments.component.scss']\n})\nexport class BranchCommissionPaymentsComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  transactionsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  currentDate: any;\n  pastDate: any;\n  selectedFiles: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('branch-commission-payments');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      branch_id: [this.branchID],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mode_of_payment: ['CASH', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      transaction_proof: [],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_id: [],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mode_of_payment: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      transaction_proof: [],\n    });\n\n    this.getBranchCommissionPayments();\n    this.getBranchesList();\n    // this.toggleSidebar();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      branch_id: data.branch_id,\n      transaction_date: data.transaction_date,\n      transaction_id: data.transaction_id,\n      mode_of_payment: data.mode_of_payment,\n      amount: data.amount,\n      transaction_proof: null\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getBranchCommissionPayments = async() => {\n    try {\n      let reqData = {\n        branch_id: this.searchForm.value.branch ? this.searchForm.value.branch : null,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getBranchCommissionPayments', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.transactionsList = resp.transactions;\n        this.totalCount = (resp.transactions).length;\n      }\n    } catch (error) {\n      this.transactionsList = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  downloadKycFiles = (files: any) => {\n    if(files){\n      let fileNames = files.split(',');\n      fileNames.map((fileName: any) => {\n        this.adminService.downLoadFiles('transaction-proofs', fileName);\n      });      \n    }\n    \n  }\n\n  onFileSelect = async(event: any) => {\n    this.selectedFiles = event.target.files;\n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid || !this.branchID) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.addForm.value)) {\n          let value = this.addForm.value[key];\n          formData.append(key, value);\n        }\n        if(this.selectedFiles && this.selectedFiles.length > 0){\n          formData.append('file_path', 'branch-commission-payments');\n          for(let i =0; i < this.selectedFiles.length; i++){\n            formData.append(\"transaction_proof\", this.selectedFiles[i], this.selectedFiles[i]['name']);\n          }\n        }\n        formData.append('branch_id', this.branchID);\n        const resp = await this.adminService.addOrUpdateData('addBranchCommissionPayment', formData);\n        if(resp && resp.responseCode === 1){\n          this.getBranchCommissionPayments();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let formData = new FormData;\n        for (const key of Object.keys(this.updateForm.value)) {\n          let value = this.updateForm.value[key];\n          formData.append(key, value);\n        }\n        if(this.selectedFiles && this.selectedFiles.length > 0){\n          formData.append('file_path', 'branch-commission-payments');\n          for(let i =0; i < this.selectedFiles.length; i++){\n            formData.append(\"transaction_proof\", this.selectedFiles[i], this.selectedFiles[i]['name']);\n          }\n        }\n        // formData.append('branch_id', this.branchID);\n        const updateResp = await this.adminService.addOrUpdateData('updateBranchCommissionPayment', formData);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getBranchCommissionPayments();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteBranchCommissionPayment', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getBranchCommissionPayments();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getExpenses()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">                        \n                        <button *ngIf=\"userAccess.view\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                        <button *ngIf=\"userAccess.view && transactionsList && transactionsList.length > 0\" (click)=\"exportToExcel()\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-download\"></i> Download</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"transactionsList && transactionsList.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th *ngIf=\"isSuperAdmin\">Branch</th>\n                                <th>Date</th>\n                                <!-- <th>Transaction ID</th> -->\n                                <th>Type Of Expenses</th>\n                                <th>Mode Of Payment</th>\n                                <th>Amount</th>                                \n                                <th>Paid By</th>                                \n                                <th>Paid To</th>                                \n                                <th>Description</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td *ngIf=\"isSuperAdmin\">\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string6\" [(ngModel)]=\"search_string6\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string7\" [(ngModel)]=\"search_string7\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of transactionsList | smartFilter: { 'branch.branch_name': search_string1, transaction_date: search_string2, expense_type: search_string3, mode_of_payment: search_string4, amount: search_string5, paid_by: search_string6, paid_to: search_string7 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td *ngIf=\"isSuperAdmin\">{{data.branch.branch_name}}</td>\n                                <td>{{data.transaction_date}}</td>\n                                <!-- <td>{{data.transaction_id}}</td> -->\n                                <td>{{data.expense_type}}</td>\n                                <td>{{data.mode_of_payment}}</td>\n                                <td>{{data.amount}}</td>\n                                <td>{{data.paid_by}}</td>\n                                <td>{{data.paid_to}}</td>\n                                <td>{{data.description}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.transaction_proof\" (click)=\"downloadKycFiles(data.transaction_proof)\">Download Proof</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!transactionsList || transactionsList.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"form?.transaction_date?.invalid && (form?.transaction_date?.dirty || form?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"form?.transaction_id?.invalid && (form?.transaction_id?.dirty || form?.transaction_id?.touched)\" class=\"error\">\n                            <!-- <small *ngIf=\"form?.transaction_id?.errors?.required\">Please enter transaction id</small> -->\n                            <small *ngIf=\"form?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"expense_type\" class=\"control-label\">Expense Type*</label>\n                        <ng-select formControlName=\"expense_type\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='STATIONARY'>STATIONARY</ng-option>\n                            <ng-option value='ELECTRICITY'>ELECTRICITY</ng-option>\n                            <ng-option value='TRANSPORTATION'>TRANSPORTATION</ng-option>\n                            <ng-option value='COMMUNICATION'>COMMUNICATION</ng-option>\n                            <ng-option value='OFFICE RENT'>OFFICE RENT</ng-option>\n                            <ng-option value='PACKING MATERIALS'>PACKING MATERIALS</ng-option>\n                            <ng-option value='VEHICLE MAINTAINENCE'>VEHICLE MAINTAINENCE</ng-option>\n                            <ng-option value='ASSET PURCHASES'>ASSET PURCHASES</ng-option>\n                            <ng-option value='PRINTING MATERIALS'>PRINTING MATERIALS</ng-option>\n                            <ng-option value='OFFICE MAINTAINENCE'>OFFICE MAINTAINENCE</ng-option>\n                            <ng-option value='OTHERS'>OTHERS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.expense_type?.invalid && (form?.expense_type?.dirty || form?.expense_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.expense_type?.errors?.required\">Please select type of expense</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_payment\">\n                            <option value='CASH'>CASH</option>\n                            <option value='UPI'>UPI</option>\n                            <option value='BANK TRANSFOR'>BANK TRANSFOR</option>\n                            <option value='OTHERS'>OTHERS</option>\n                        </select>\n                        <div *ngIf=\"form?.mode_of_payment?.invalid && (form?.mode_of_payment?.dirty || form?.mode_of_payment?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.mode_of_payment?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"form?.amount?.invalid && (form?.amount?.dirty || form?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"form?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"paid_by\" class=\"control-label\">Paid By*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"paid_by\">\n                        <div *ngIf=\"form?.paid_by?.invalid && (form?.paid_by?.dirty || form?.paid_by?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.paid_by?.errors?.required\">Please enter paid by name</small>\n                            <small *ngIf=\"form?.paid_by?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"paid_to\" class=\"control-label\">Paid To*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"paid_to\">\n                        <div *ngIf=\"form?.paid_to?.invalid && (form?.paid_to?.dirty || form?.paid_to?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.paid_to?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"form?.paid_to?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.required\">Please enter description</small>\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted || !branchID\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_date\" class=\"control-label\">Transaction Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"transaction_date\">\n                        <div *ngIf=\"editForm?.transaction_date?.invalid && (editForm?.transaction_date?.dirty || editForm?.transaction_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.transaction_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_id\" class=\"control-label\">Transaction ID</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_id\">\n                        <div *ngIf=\"editForm?.transaction_id?.invalid && (editForm?.transaction_id?.dirty || editForm?.transaction_id?.touched)\" class=\"error\">\n                            <!-- <small *ngIf=\"editForm?.transaction_id?.errors?.required\">Please enter transaction id</small> -->\n                            <small *ngIf=\"editForm?.transaction_id?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_payment\" class=\"control-label\">Expense Type*</label>\n                        <ng-select formControlName=\"expense_type\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='STATIONARY'>STATIONARY</ng-option>\n                            <ng-option value='ELECTRICITY'>ELECTRICITY</ng-option>\n                            <ng-option value='TRANSPORTATION'>TRANSPORTATION</ng-option>\n                            <ng-option value='COMMUNICATION'>COMMUNICATION</ng-option>\n                            <ng-option value='OFFICE RENT'>OFFICE RENT</ng-option>\n                            <ng-option value='PACKING MATERIALS'>PACKING MATERIALS</ng-option>\n                            <ng-option value='VEHICLE MAINTAINENCE'>VEHICLE MAINTAINENCE</ng-option>\n                            <ng-option value='ASSET PURCHASES'>ASSET PURCHASES</ng-option>\n                            <ng-option value='PRINTING MATERIALS'>PRINTING MATERIALS</ng-option>\n                            <ng-option value='OFFICE MAINTAINENCE'>OFFICE MAINTAINENCE</ng-option>\n                            <ng-option value='OTHERS'>OTHERS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.expense_type?.invalid && (editForm?.expense_type?.dirty || editForm?.expense_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.expense_type?.errors?.required\">Please select type of expense</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mode_of_payment\" class=\"control-label\">Mode Of Deposit*</label>\n                        <select class=\"form-control\" formControlName=\"mode_of_payment\">\n                            <option value='CASH'>CASH</option>\n                            <option value='UPI'>UPI</option>\n                            <option value='BANK TRANSFOR'>BANK TRANSFOR</option>\n                            <option value='OTHERS'>OTHERS</option>\n                        </select>\n                        <div *ngIf=\"editForm?.mode_of_payment?.invalid && (editForm?.mode_of_payment?.dirty || editForm?.mode_of_payment?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.mode_of_payment?.errors?.required\">Please select mode of deposit</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"amount\" class=\"control-label\">Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"amount\">\n                        <div *ngIf=\"editForm?.amount?.invalid && (editForm?.amount?.dirty || editForm?.amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.amount?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"editForm?.amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"paid_by\" class=\"control-label\">Paid By*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"paid_by\">\n                        <div *ngIf=\"editForm?.paid_by?.invalid && (editForm?.paid_by?.dirty || editForm?.paid_by?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.paid_by?.errors?.required\">Please enter paid by name</small>\n                            <small *ngIf=\"editForm?.paid_by?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"paid_to\" class=\"control-label\">Paid To*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"paid_to\">\n                        <div *ngIf=\"editForm?.paid_to?.invalid && (editForm?.paid_to?.dirty || editForm?.paid_to?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.paid_to?.errors?.required\">Please enter amount</small>\n                            <small *ngIf=\"editForm?.paid_to?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.required\">Please enter description</small>\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, floatRegx, alnumSpecialRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { exportToExcel } from '../../helpers/common';\n\n\n@Component({\n  selector: 'ngx-expenses',\n  templateUrl: './expenses.component.html',\n  styleUrls: ['./expenses.component.scss']\n})\nexport class ExpensesComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  transactionsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  currentDate: any;\n  pastDate: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('expenses');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      branch_id: [this.branchID],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      expense_type: [, [Validators.required, Validators.pattern(alphaRegx)]],\n      mode_of_payment: ['CASH', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      description: [''],\n      paid_by: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      paid_to: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_id: [],\n      transaction_date: ['', [Validators.required]],\n      transaction_id: ['', [Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      expense_type: [, [Validators.required, Validators.pattern(alphaRegx)]],\n      mode_of_payment: ['CASH', [Validators.required, Validators.pattern(alphaRegx)]],\n      amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      description: [''],\n      paid_by: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n      paid_to: ['', [Validators.required, Validators.pattern(nonHTMLRegx)]],\n    });\n\n    this.getExpenses();\n    this.getBranchesList();\n    this.toggleSidebar();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  \n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      branch_id: data.branch_id,\n      transaction_date: data.transaction_date,\n      transaction_id: data.transaction_id ? data.transaction_id : '',\n      expense_type: data.expense_type,\n      mode_of_payment: data.mode_of_payment,\n      amount: data.amount,\n      description: data.description,\n      paid_by: data.paid_by,\n      paid_to: data.paid_to\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getExpenses = async() => {\n    try {\n      let branchID = this.searchForm.value.branch ? this.searchForm.value.branch : null;\n      if(branchID){\n        this.branchID = branchID;\n        this.addForm.controls['branch_id'].setValue(branchID);\n      }else{\n        this.addForm.controls['branch_id'].setValue(null);\n      }\n      let reqData = {\n        branch_id: branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getExpenses', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.transactionsList = resp.transactions;\n        this.totalCount = (resp.transactions).length;\n      }\n    } catch (error) {\n      this.transactionsList = '';\n    }    \n  }\n\n  exportToExcel = async() => {\n    if(this.transactionsList.length > 0){\n      let sheetName = 'Expenses';\n      let fileName = 'Expenses-' + new Date().getTime();\n      let list = this.transactionsList.map((data: any) => {\n        let info = {\n          'Branch Name': data.branch.branch_name,\n          'Transaction Date': data.transaction_date,\n          'Transaction ID': data.transaction_id,\n          'Expense Type': data.expense_type,\n          'Mode Of Payment': data.mode_of_payment,\n          'Amount': data.amount,\n          'Paid By': data.paid_by,\n          'Paid To': data.paid_to,\n          'Description': data.description,\n          'Created On': new Date(data.createdAt).toLocaleString(),\n          'Last Updated On': new Date(data.updatedAt).toLocaleString(),\n        };\n        return info;\n      });\n    \n      await exportToExcel(list, fileName, sheetName);\n    }\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.view){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid || !this.branchID) {\n          this.submitted = false;\n            return;\n        }\n        let reqData = {...this.addForm.value, branch_id: this.branchID};\n        const resp = await this.adminService.addOrUpdateData('addExpenses', reqData);\n        if(resp && resp.responseCode === 1){\n          this.getExpenses();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateExpenses', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getExpenses();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteExpenses', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getExpenses();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getStockPurchases()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"totalList && totalList.length > 0\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    TOTAL PURCHASE COUNT\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>BOXES 3KG</th>\n                                <th>BOXES 5KG</th>\n                                <th>BOXES 10KG</th>\n                                <th>BOXES 15KG</th>\n                                <th>TAPES</th>\n                                <th>COVERS PACKET</th>\n                                <th>BILL BOOKS</th>\n                            </tr>\n                        </thead>\n                        <tbody>                            \n                            <tr>\n                                <td>TOTAL PURCHASES</td>\n                                <td>{{total3kgCount}}</td>\n                                <td>{{total5kgCount}}</td>\n                                <td>{{total10kgCount}}</td>\n                                <td>{{total15kgCount}}</td>\n                                <td>{{totalTapesCount}}</td>\n                                <td>{{totalCoversPacketCount}}</td>\n                                <td>{{totalBillBooksCount}}</td>\n                            </tr>\n                            <tr>\n                                <td>TOTAL PURCHASES <br />({{fromDate}} - {{toDate}})</td>\n                                <td>{{total3kgFilteredCount}}</td>\n                                <td>{{total5kgFilteredCount}}</td>\n                                <td>{{total10kgFilteredCount}}</td>\n                                <td>{{total15kgFilteredCount}}</td>\n                                <td>{{totalTapesFilteredCount}}</td>\n                                <td>{{totalCoversPacketFilteredCount}}</td>\n                                <td>{{totalBillBooksFilteredCount}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Purchased Date</th>\n                                <th>Stock Type</th>\n                                <th>Box Weight</th>\n                                <th>Quantity</th>                                \n                                <th>Description</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { purchased_date: search_string1, stock_type: search_string2, box_weight: search_string3, quantity: search_string4 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.purchased_date}}</td>\n                                <td>{{data.stock_type}}</td>\n                                <td>{{data.box_weight}}</td>\n                                <td>{{data.quantity}}</td>\n                                <td>{{data.description}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"purchased_date\" class=\"control-label\">Purchased Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"purchased_date\">\n                        <div *ngIf=\"form?.purchased_date?.invalid && (form?.purchased_date?.dirty || form?.purchased_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.purchased_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.purchased_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" (change)=\"handleStockTypeChange($event)\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='BOXES'>BOXES</ng-option>\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.stock_type?.invalid && (form?.stock_type?.dirty || form?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"box_weight\" id=\"box_weight1\" class=\"control-label\">Box Weight*</label>\n                        <select class=\"form-control\" formControlName=\"box_weight\">\n                            <option value='N/A'>N/A</option>\n                            <option value='3KGS'>3KGS</option>\n                            <option value='5KGS'>5KGS</option>\n                            <option value='10KGS'>10KGS</option>\n                            <option value='15KGS'>15KGS</option>\n                        </select>\n                        <div *ngIf=\"form?.box_weight?.invalid && (form?.box_weight?.dirty || form?.box_weight?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.box_weight?.errors?.required\">Please select box weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"quantity\" class=\"control-label\">Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                        <div *ngIf=\"form?.quantity?.invalid && (form?.quantity?.dirty || form?.quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"form?.quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"purchased_date\" class=\"control-label\">Purchased Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"purchased_date\">\n                        <div *ngIf=\"editForm?.purchased_date?.invalid && (editForm?.purchased_date?.dirty || editForm?.purchased_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.purchased_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.purchased_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" (change)=\"handleStockTypeChange($event)\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='BOXES'>BOXES</ng-option>\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.stock_type?.invalid && (editForm?.stock_type?.dirty || editForm?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"box_weight\" id=\"box_weight2\" class=\"control-label\">Box Weight*</label>\n                        <select class=\"form-control\" formControlName=\"box_weight\">\n                            <option value='N/A'>N/A</option>\n                            <option value='3KGS'>3KGS</option>\n                            <option value='5KGS'>5KGS</option>\n                            <option value='10KGS'>10KGS</option>\n                            <option value='15KGS'>15KGS</option>\n                        </select>\n                        <div *ngIf=\"editForm?.box_weight?.invalid && (editForm?.box_weight?.dirty || editForm?.box_weight?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.box_weight?.errors?.required\">Please select box weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"quantity\" class=\"control-label\">Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                        <div *ngIf=\"editForm?.quantity?.invalid && (editForm?.quantity?.dirty || editForm?.quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"editForm?.quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, numRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { getSumByKeyWithFilter } from '../../helpers/common';\n\n@Component({\n  selector: 'ngx-stock-purchases',\n  templateUrl: './stock-purchases.component.html',\n  styleUrls: ['./stock-purchases.component.scss']\n})\nexport class StockPurchasesComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  list: any;\n  totalList: any;\n  currentDate: any;\n  pastDate: any;\n  total3kgCount: any = 0;\n  total5kgCount: any = 0;\n  total10kgCount: any = 0;\n  total15kgCount: any = 0;\n  totalTapesCount: any = 0;\n  totalCoversPacketCount: any = 0;\n  totalBillBooksCount: any = 0;\n  total3kgFilteredCount: any = 0;\n  total5kgFilteredCount: any = 0;\n  total10kgFilteredCount: any = 0;\n  total15kgFilteredCount: any = 0;\n  totalTapesFilteredCount: any = 0;\n  totalCoversPacketFilteredCount: any = 0;\n  totalBillBooksFilteredCount: any = 0;\n  fromDate: any;\n  toDate: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('stock-purchases');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate]\n    });\n\n    this.addForm = this.formBuilder.group({\n      purchased_date: ['', [Validators.required]],\n      stock_type: [, [Validators.required, Validators.pattern(alphaRegx)]],\n      box_weight: ['N/A', [Validators.required]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      purchased_date: ['', [Validators.required]],\n      stock_type: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      box_weight: ['', [Validators.required]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n\n    this.getStockPurchases();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      purchased_date: data.purchased_date,\n      stock_type: data.stock_type,\n      box_weight: data.box_weight,\n      quantity: data.quantity,\n      description: data.description\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleStockTypeChange = (val: any, formVal: any = 'add') => {\n    if(formVal === 'update' && val !== 'BOXES'){\n      this.updateForm.controls['box_weight'].setValue('N/A');\n    }else if(val !== 'BOXES'){\n      this.addForm.controls['box_weight'].setValue('N/A');\n    }\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  datetotimestamp = (date: any) => {\n    let time = new Date(date).getTime();\n    return time;\n  }\n\n  getStockPurchases = async() => {\n    try {\n      let now = new Date();\n      let backDate = new Date(now.setDate(now.getDate() - 30)).toISOString().split('T');\n      this.fromDate = this.searchForm.value.from_date ? this.searchForm.value.from_date : backDate;\n      this.toDate = this.searchForm.value.to_date ? this.searchForm.value.to_date : new Date().toISOString().split('T')[0];\n      \n      let resp = await this.adminService.getData('getStockPurchases');          \n      if(resp && resp.responseCode === 1){\n        this.totalList = resp.list;\n        let filteredList = this.totalList.filter((data: any) => this.datetotimestamp(this.fromDate) <= this.datetotimestamp(data.purchased_date) && this.datetotimestamp(this.toDate) >= this.datetotimestamp(data.purchased_date));\n        \n        this.list = filteredList;\n        this.totalCount = filteredList.length;\n        \n        this.total3kgCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'box_weight', '3KGS');\n        this.total5kgCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'box_weight', '5KGS');\n        this.total10kgCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'box_weight', '10KGS');\n        this.total15kgCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'box_weight', '15KGS');\n        this.totalTapesCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'stock_type', 'TAPES');\n        this.totalCoversPacketCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'stock_type', 'COVERS PACKET');\n        this.totalBillBooksCount = await getSumByKeyWithFilter(this.totalList, 'quantity', 'stock_type', 'BILL BOOKS');\n        \n        this.total3kgFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'box_weight', '3KGS');\n        this.total5kgFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'box_weight', '5KGS');\n        this.total10kgFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'box_weight', '10KGS');\n        this.total15kgFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'box_weight', '15KGS');\n        this.totalTapesFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'stock_type', 'TAPES');\n        this.totalCoversPacketFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'stock_type', 'COVERS PACKET');\n        this.totalBillBooksFilteredCount = await getSumByKeyWithFilter(this.list, 'quantity', 'stock_type', 'BILL BOOKS');\n      }\n    } catch (error) {\n      this.list = '';\n    }    \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const resp = await this.adminService.addOrUpdateData('addStockPurchases', this.addForm.value);\n        if(resp && resp.responseCode === 1){\n          this.getStockPurchases();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateStockPurchases', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getStockPurchases();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteStockPurchases', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getStockPurchases();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getStockRequests()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"list && list.length > 0\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    TOTAL STOCK COUNT\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>BOXES 3KG</th>\n                                <th>BOXES 5KG</th>\n                                <th>BOXES 10KG</th>\n                                <th>BOXES 15KG</th>\n                                <th>TAPES</th>\n                                <th>COVERS PACKET</th>\n                                <th>BILL BOOKS</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>STOCK REQUESTS</td>\n                                <td>{{total3kgRequestsCount}}</td>\n                                <td>{{total5kgRequestsCount}}</td>\n                                <td>{{total10kgRequestsCount}}</td>\n                                <td>{{total15kgRequestsCount}}</td>\n                                <td>{{totalTapesRequestsCount}}</td>\n                                <td>{{totalCoversPacketRequestsCount}}</td>\n                                <td>{{totalBillBooksRequestsCount}}</td>\n                            </tr>                            \n                            <tr>\n                                <td>APPROVED STOCK</td>\n                                <td>{{total3kgApprovedCount}}</td>\n                                <td>{{total5kgApprovedCount}}</td>\n                                <td>{{total10kgApprovedCount}}</td>\n                                <td>{{total15kgApprovedCount}}</td>\n                                <td>{{totalTapesApprovedCount}}</td>\n                                <td>{{totalCoversPacketApprovedCount}}</td>\n                                <td>{{totalBillBooksApprovedCount}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th *ngIf=\"isSuperAdmin\">Branch</th>\n                                <th>Stock Type</th>\n                                <th>Box Weight</th>\n                                <th>Request Qty</th>                                \n                                <th>Approved Qty</th>                                \n                                <th>Status</th>                                \n                                <th>Description</th>                                \n                                <th *ngIf=\"isSuperAdmin && (userAccess.edit || userAccess.delete)\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td *ngIf=\"isSuperAdmin\">\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string6\" [(ngModel)]=\"search_string6\" placeholder=\"Search\"/>\n                                </td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { 'branch.branch_name': search_string1, stock_type: search_string2, box_weight: search_string3, request_quantity: search_string4, approved_quantity: search_string5, status: search_string6 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td *ngIf=\"isSuperAdmin\">{{data.branch.branch_name}}</td>\n                                <td>{{data.stock_type}}</td>\n                                <td>{{data.box_weight}}</td>\n                                <td>{{data.request_quantity}}</td>\n                                <td>{{data.approved_quantity}}</td>\n                                <td>\n                                    <span *ngIf=\"data.status === 'PENDING'\" class=\"badge badge-warning\">{{data.status}}</span>\n                                    <span *ngIf=\"data.status === 'REJECTED'\" class=\"badge badge-danger\">{{data.status}}</span>\n                                    <span *ngIf=\"data.status === 'APPROVED'\" class=\"badge badge-info\">{{data.status}}</span>\n                                </td>\n                                <td>{{data.description}}</td>\n                                <td *ngIf=\"isSuperAdmin && (userAccess.edit || userAccess.delete)\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" (change)=\"handleStockTypeChange($event)\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='BOXES'>BOXES</ng-option>\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.stock_type?.invalid && (form?.stock_type?.dirty || form?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"box_weight\" id=\"box_weight1\" class=\"control-label\">Box Weight*</label>\n                        <select class=\"form-control\" formControlName=\"box_weight\">\n                            <option value='N/A'>N/A</option>\n                            <option value='3KGS'>3KGS</option>\n                            <option value='5KGS'>5KGS</option>\n                            <option value='10KGS'>10KGS</option>\n                            <option value='15KGS'>15KGS</option>\n                        </select>\n                        <div *ngIf=\"form?.box_weight?.invalid && (form?.box_weight?.dirty || form?.box_weight?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.box_weight?.errors?.required\">Please select box weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"quantity\" class=\"control-label\">Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                        <div *ngIf=\"form?.quantity?.invalid && (form?.quantity?.dirty || form?.quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"form?.quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" (change)=\"handleStockTypeChange($event)\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <ng-option value='BOXES'>BOXES</ng-option>\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.stock_type?.invalid && (editForm?.stock_type?.dirty || editForm?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"box_weight\" id=\"box_weight2\" class=\"control-label\">Box Weight*</label>\n                        <select class=\"form-control\" formControlName=\"box_weight\">\n                            <option value='N/A'>N/A</option>\n                            <option value='3KGS'>3KGS</option>\n                            <option value='5KGS'>5KGS</option>\n                            <option value='10KGS'>10KGS</option>\n                            <option value='15KGS'>15KGS</option>\n                        </select>\n                        <div *ngIf=\"editForm?.box_weight?.invalid && (editForm?.box_weight?.dirty || editForm?.box_weight?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.box_weight?.errors?.required\">Please select box weight</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"request_quantity\" class=\"control-label\">Request Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"request_quantity\">\n                        <div *ngIf=\"editForm?.request_quantity?.invalid && (editForm?.request_quantity?.dirty || editForm?.request_quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.request_quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"editForm?.request_quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"approved_quantity\" class=\"control-label\">Approved Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"approved_quantity\">\n                        <div *ngIf=\"editForm?.approved_quantity?.invalid && (editForm?.approved_quantity?.dirty || editForm?.approved_quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.approved_quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"editForm?.approved_quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div> \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"status\" class=\"control-label\">Status*</label>\n                        <select class=\"form-control\" formControlName=\"status\">\n                            <option value='PENDING'>PENDING</option>\n                            <option value='APPROVED'>APPROVED</option>\n                            <option value='REJECTED'>REJECTED</option>\n                        </select>\n                        <div *ngIf=\"editForm?.status?.invalid && (editForm?.status?.dirty || editForm?.status?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.status?.errors?.required\">Please select status</small>\n                        </div>\n                    </div>                   \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, numRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { getSumByKeyWithFilter, getSumByKeyWithFilters } from '../../helpers/common';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-stock-requests',\n  templateUrl: './stock-requests.component.html',\n  styleUrls: ['./stock-requests.component.scss']\n})\nexport class StockRequestsComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  list: any;\n  currentDate: any;\n  pastDate: any;\n  isSuperAdmin: boolean;\n  branchID: any;\n  branchesList: any;\n  total3kgRequestsCount: any = 0;\n  total5kgRequestsCount: any = 0;\n  total10kgRequestsCount: any = 0;\n  total15kgRequestsCount: any = 0;\n  totalTapesRequestsCount: any = 0;\n  totalCoversPacketRequestsCount: any = 0;\n  totalBillBooksRequestsCount: any = 0;\n  total3kgApprovedCount: any = 0;\n  total5kgApprovedCount: any = 0;\n  total10kgApprovedCount: any = 0;\n  total15kgApprovedCount: any = 0;\n  totalTapesApprovedCount: any = 0;\n  totalCoversPacketApprovedCount: any = 0;\n  totalBillBooksApprovedCount: any = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('stock-requests');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }else if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type === 'Super-Admin'){\n      this.isSuperAdmin = true;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      branch_id: [this.branchID],\n      stock_type: [, [Validators.required, Validators.pattern(alphaRegx)]],\n      box_weight: ['N/A', [Validators.required]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_id: ['', [Validators.required]],\n      stock_type: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      box_weight: ['', [Validators.required]],\n      request_quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      approved_quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      status: ['', [Validators.required]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n\n    this.getBranchesList();\n    this.getStockRequests();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      branch_id: data.branch_id,\n      stock_type: data.stock_type,\n      box_weight: data.box_weight,\n      request_quantity: data.request_quantity,\n      approved_quantity: data.approved_quantity,\n      status: data.status,\n      description: data.description\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleStockTypeChange = (val: any, formVal: any = 'add') => {\n    if(formVal === 'update' && val !== 'BOXES'){\n      this.updateForm.controls['box_weight'].setValue('N/A');\n    }else if(val !== 'BOXES'){\n      this.addForm.controls['box_weight'].setValue('N/A');\n    }\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  getStockRequests = async() => {\n    try {\n      let branchID = this.searchForm.value.branch ? this.searchForm.value.branch : null;\n      if(branchID){\n        this.branchID = branchID;\n        this.addForm.controls['branch_id'].setValue(branchID);\n      }else{\n        this.addForm.controls['branch_id'].setValue(null);\n      }\n      let reqData = {\n        branch_id: branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getStockRequests', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.list = resp.list;\n        this.totalCount = (resp.list).length;\n        this.total3kgRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'box_weight', '3KGS');\n        this.total5kgRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'box_weight', '5KGS');\n        this.total10kgRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'box_weight', '10KGS');\n        this.total15kgRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'box_weight', '15KGS');\n        this.totalTapesRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'stock_type', 'TAPES');\n        this.totalCoversPacketRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'stock_type', 'COVERS PACKET');\n        this.totalBillBooksRequestsCount = await getSumByKeyWithFilter(this.list, 'request_quantity', 'stock_type', 'BILL BOOKS');\n        \n        this.total3kgApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'box_weight', '3KGS', 'status' , 'APPROVED');\n        this.total5kgApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'box_weight', '5KGS', 'status' , 'APPROVED');\n        this.total10kgApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'box_weight', '10KGS', 'status' , 'APPROVED');\n        this.total15kgApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'box_weight', '15KGS', 'status' , 'APPROVED');\n        this.totalTapesApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'stock_type', 'TAPES', 'status' , 'APPROVED');\n        this.totalCoversPacketApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'stock_type', 'COVERS PACKET', 'status' , 'APPROVED');\n        this.totalBillBooksApprovedCount = await getSumByKeyWithFilters(this.list, 'approved_quantity', 'stock_type', 'BILL BOOKS', 'status' , 'APPROVED');\n      }\n    } catch (error) {\n      this.list = '';\n    }    \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let reqData = {...this.addForm.value, branch_id: this.branchID};\n        const resp = await this.adminService.addOrUpdateData('addStockRequests', reqData);\n        if(resp && resp.responseCode === 1){\n          this.getStockRequests();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateStockRequests', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getStockRequests();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteStockRequests', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getStockRequests();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { getSumByKeyWithFilter, getSumByKeyWithFilters } from '../../helpers/common';\n\n@Component({\n  selector: 'ngx-stock-availability',\n  templateUrl: './stock-availability.component.html',\n  styleUrls: ['./stock-availability.component.scss']\n})\nexport class StockAvailabilityComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  userAccess = {view: true, edit: false, delete: false};\n  currentUserData: any;\n  list: any;\n  currentDate: any;\n  pastDate: any;\n  total3kgPurchaseCount: any = 0;\n  total5kgPurchaseCount: any = 0;\n  total10kgPurchaseCount: any = 0;\n  total15kgPurchaseCount: any = 0;\n  totalTapesPurchaseCount: any = 0;\n  totalCoversPacketPurchaseCount: any = 0;\n  totalBillBooksPurchaseCount: any = 0;\n  total3kgApprovedCount: any = 0;\n  total5kgApprovedCount: any = 0;\n  total10kgApprovedCount: any = 0;\n  total15kgApprovedCount: any = 0;\n  totalTapesApprovedCount: any = 0;\n  totalCoversPacketApprovedCount: any = 0;\n  totalBillBooksApprovedCount: any = 0;\n  stockRequestsList: any;\n  stockPurchasesList: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('stock-availability');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate]\n    });\n\n    this.getStockAvailability();\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getStockAvailability = async() => {\n    this.getStockPurchases();\n    this.getStockRequests();\n  }\n\n  getStockPurchases = async() => {\n    try {      \n      let resp = await this.adminService.getData('getStockPurchases');          \n      if(resp && resp.responseCode === 1){\n        this.stockPurchasesList = resp.list;\n        this.total3kgPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'box_weight', '3KGS');\n        this.total5kgPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'box_weight', '5KGS');\n        this.total10kgPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'box_weight', '10KGS');\n        this.total15kgPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'box_weight', '15KGS');\n        this.totalTapesPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'stock_type', 'TAPES');\n        this.totalCoversPacketPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'stock_type', 'COVERS PACKET');\n        this.totalBillBooksPurchaseCount = await getSumByKeyWithFilter(this.stockPurchasesList, 'quantity', 'stock_type', 'BILL BOOKS');\n      }\n    } catch (error) {\n      this.stockPurchasesList = [];\n    }    \n  }\n\n  getStockRequests = async() => {\n    try {\n      let reqData = {\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n\n      let resp1 = await this.adminService.getData('getStockRequests', reqData);          \n      if(resp1 && resp1.responseCode === 1){\n        this.stockRequestsList = resp1.list;\n        this.total3kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '3KGS', 'status' , 'APPROVED');\n        this.total5kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '5KGS', 'status' , 'APPROVED');\n        this.total10kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '10KGS', 'status' , 'APPROVED');\n        this.total15kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '15KGS', 'status' , 'APPROVED');\n        this.totalTapesApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'TAPES', 'status' , 'APPROVED');\n        this.totalCoversPacketApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'COVERS PACKET', 'status' , 'APPROVED');\n        this.totalBillBooksApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'BILL BOOKS', 'status' , 'APPROVED');\n      }\n    } catch (error) {\n      this.stockRequestsList = [];\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getStockAvailability()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    STOCK LIST\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>BOXES 3KG</th>\n                                <th>BOXES 5KG</th>\n                                <th>BOXES 10KG</th>\n                                <th>BOXES 15KG</th>\n                                <th>TAPES</th>\n                                <th>COVERS PACKET</th>\n                                <th>BILL BOOKS</th>\n                            </tr>\n                        </thead>\n                        <tbody>                            \n                            <tr>\n                                <td>STOCK PURCHASES</td>\n                                <td>{{total3kgPurchaseCount}}</td>\n                                <td>{{total5kgPurchaseCount}}</td>\n                                <td>{{total10kgPurchaseCount}}</td>\n                                <td>{{total15kgPurchaseCount}}</td>\n                                <td>{{totalTapesPurchaseCount}}</td>\n                                <td>{{totalCoversPacketPurchaseCount}}</td>\n                                <td>{{totalBillBooksPurchaseCount}}</td>\n                            </tr>                            \n                            <tr>\n                                <td>ALLOTED STOCK</td>\n                                <td>{{total3kgApprovedCount}}</td>\n                                <td>{{total5kgApprovedCount}}</td>\n                                <td>{{total10kgApprovedCount}}</td>\n                                <td>{{total15kgApprovedCount}}</td>\n                                <td>{{totalTapesApprovedCount}}</td>\n                                <td>{{totalCoversPacketApprovedCount}}</td>\n                                <td>{{totalBillBooksApprovedCount}}</td>\n                            </tr>\n                            <tr>\n                                <td>AVAILABLE STOCK</td>\n                                <td>{{total3kgPurchaseCount - total3kgApprovedCount}}</td>\n                                <td>{{total5kgPurchaseCount - total5kgApprovedCount}}</td>\n                                <td>{{total10kgPurchaseCount - total10kgApprovedCount}}</td>\n                                <td>{{total15kgPurchaseCount - total15kgApprovedCount}}</td>\n                                <td>{{totalTapesPurchaseCount - totalTapesApprovedCount}}</td>\n                                <td>{{totalCoversPacketPurchaseCount - totalCoversPacketApprovedCount}}</td>\n                                <td>{{totalBillBooksPurchaseCount - totalBillBooksApprovedCount}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>","<div class=\"row\" *ngIf=\"isSuperAdmin\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getStockAvailability()\">\n                    <div class=\"row justify-content-md-center\">\n                        <!-- <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div> -->\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"branchID\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    STOCK LIST\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>BOXES 3KG</th>\n                                <th>BOXES 5KG</th>\n                                <th>BOXES 10KG</th>\n                                <th>BOXES 15KG</th>\n                                <th>TAPES</th>\n                                <th>COVERS PACKET</th>\n                                <th>BILL BOOKS</th>\n                            </tr>\n                        </thead>\n                        <tbody>                            \n                            <tr>\n                                <td>RECEIVED STOCK</td>\n                                <td>{{total3kgApprovedCount}}</td>\n                                <td>{{total5kgApprovedCount}}</td>\n                                <td>{{total10kgApprovedCount}}</td>\n                                <td>{{total15kgApprovedCount}}</td>\n                                <td>{{totalTapesApprovedCount}}</td>\n                                <td>{{totalCoversPacketApprovedCount}}</td>\n                                <td>{{totalBillBooksApprovedCount}}</td>\n                            </tr>\n                            <tr>\n                                <td>USED STOCK</td>\n                                <td>{{total3kgUsedCount}}</td>\n                                <td>{{total5kgUsedCount}}</td>\n                                <td>{{total10kgUsedCount}}</td>\n                                <td>{{total15kgUsedCount}}</td>\n                                <td>{{totalTapesUsedCount}}</td>\n                                <td>{{totalCoversPacketUsedCount}}</td>\n                                <td>{{totalBillBooksUsedCount}}</td>\n                            </tr>\n                            <tr>\n                                <td>AVAILABLE STOCK</td>\n                                <td>{{total3kgApprovedCount - total3kgUsedCount}}</td>\n                                <td>{{total5kgApprovedCount - total5kgUsedCount}}</td>\n                                <td>{{total10kgApprovedCount - total10kgUsedCount}}</td>\n                                <td>{{total15kgApprovedCount - total15kgUsedCount}}</td>\n                                <td>{{totalTapesApprovedCount - totalTapesUsedCount}}</td>\n                                <td>{{totalCoversPacketApprovedCount - totalCoversPacketUsedCount}}</td>\n                                <td>{{totalBillBooksApprovedCount - totalBillBooksUsedCount}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { getSumByKey, getSumByKeyWithFilter, getSumByKeyWithFilters } from '../../helpers/common';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-branch-stock-availability',\n  templateUrl: './branch-stock-availability.component.html',\n  styleUrls: ['./branch-stock-availability.component.scss']\n})\nexport class BranchStockAvailabilityComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  userAccess = {view: true, edit: false, delete: false};\n  currentUserData: any;\n  list: any;\n  currentDate: any;\n  pastDate: any;\n  total3kgUsedCount: any = 0;\n  total5kgUsedCount: any = 0;\n  total10kgUsedCount: any = 0;\n  total15kgUsedCount: any = 0;\n  totalTapesUsedCount: any = 0;\n  totalCoversPacketUsedCount: any = 0;\n  totalBillBooksUsedCount: any = 0;\n  total3kgApprovedCount: any = 0;\n  total5kgApprovedCount: any = 0;\n  total10kgApprovedCount: any = 0;\n  total15kgApprovedCount: any = 0;\n  totalTapesApprovedCount: any = 0;\n  totalCoversPacketApprovedCount: any = 0;\n  totalBillBooksApprovedCount: any = 0;\n  stockRequestsList: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  shipmentsList: any;\n  branchesList: any;\n  usedStockList: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private authenticateService: AuthenticateService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('branch-stock-availability');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n      this.getStockAvailability();\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: []\n    });\n\n    this.getBranchesList();\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  getStockAvailability = async() => {\n    this.getShipmentsByBranch();\n    this.getStockRequests();\n    this.getUsedStockList();\n  }\n\n  getShipmentsByBranch = async() => {\n    try {\n      let branchID  = this.branchID = this.searchForm && this.searchForm.value && this.searchForm.value.branch ? this.searchForm.value.branch : this.branchID;\n      if(branchID){\n        let reqData = {\n          branch_id: branchID,\n          // from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n          // to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n        };\n        let resp = await this.adminService.getData('getShipmentsByBranch', reqData);          \n        if(resp && resp.responseCode === 1){\n          this.shipmentsList = resp.shipments;\n          this.total3kgUsedCount = await getSumByKey(this.shipmentsList, 'boxes_3kg');\n          this.total5kgUsedCount = await getSumByKey(this.shipmentsList, 'boxes_5kg');\n          this.total10kgUsedCount = await getSumByKey(this.shipmentsList, 'boxes_10kg');\n          this.total15kgUsedCount = await getSumByKey(this.shipmentsList, 'boxes_15kg');\n        }\n      }\n    } catch (error) {\n      this.shipmentsList = [];\n    }    \n  }\n  getStockRequests = async() => {\n    try {\n      let branchID  = this.branchID = this.searchForm && this.searchForm.value && this.searchForm.value.branch ? this.searchForm.value.branch : this.branchID;\n      if(branchID){\n        let reqData = {\n          branch_id: branchID,\n          // from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n          // to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n        };        \n        let resp = await this.adminService.getData('getStockRequests', reqData);          \n        if(resp && resp.responseCode === 1){\n          this.stockRequestsList = resp.list;\n          this.total3kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '3KGS', 'status' , 'APPROVED');\n          this.total5kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '5KGS', 'status' , 'APPROVED');\n          this.total10kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '10KGS', 'status' , 'APPROVED');\n          this.total15kgApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'box_weight', '15KGS', 'status' , 'APPROVED');\n          this.totalTapesApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'TAPES', 'status' , 'APPROVED');\n          this.totalCoversPacketApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'COVERS PACKET', 'status' , 'APPROVED');\n          this.totalBillBooksApprovedCount = await getSumByKeyWithFilters(this.stockRequestsList, 'approved_quantity', 'stock_type', 'BILL BOOKS', 'status' , 'APPROVED');\n        }\n      }\n    } catch (error) {\n      this.stockRequestsList = [];\n    }    \n  }\n\n  getUsedStockList = async() => {\n    try {\n      let branchID  = this.branchID = this.searchForm && this.searchForm.value && this.searchForm.value.branch ? this.searchForm.value.branch : this.branchID;\n      if(branchID){\n        let reqData = {\n          branch_id: branchID,\n          // from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n          // to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n        };\n        \n        let resp = await this.adminService.getData('getUsedStockList', reqData);          \n        if(resp && resp.responseCode === 1){\n          this.usedStockList = resp.list;\n          this.totalTapesUsedCount = await getSumByKeyWithFilter(this.usedStockList, 'quantity', 'stock_type', 'TAPES');\n          this.totalCoversPacketUsedCount = await getSumByKeyWithFilter(this.usedStockList, 'quantity', 'stock_type', 'COVERS PACKET');\n          this.totalBillBooksUsedCount = await getSumByKeyWithFilter(this.usedStockList, 'quantity', 'stock_type', 'BILL BOOKS');\n        }\n      }\n    } catch (error) {\n\n    }    \n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getUsedStockList()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th *ngIf=\"isSuperAdmin\">Branch</th>\n                                <th>Stock Type</th>\n                                <th>Quantity</th>                               \n                                <th>Description</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td *ngIf=\"isSuperAdmin\">\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { 'branch.branch_name': search_string1, stock_type: search_string2, quantity: search_string3 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td *ngIf=\"isSuperAdmin\">{{data.branch.branch_name}}</td>\n                                <td>{{data.stock_type}}</td>\n                                <td>{{data.quantity}}</td>\n                                <td>{{data.description}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.branch_id?.invalid && (form?.branch_id?.dirty || form?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <!-- <ng-option value='BOXES'>BOXES</ng-option> -->\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"form?.stock_type?.invalid && (form?.stock_type?.dirty || form?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"quantity\" class=\"control-label\">Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                        <div *ngIf=\"form?.quantity?.invalid && (form?.quantity?.dirty || form?.quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"form?.quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" *ngIf=\"!isSuperAdmin\" formControlName=\"branch_id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div *ngIf=\"isSuperAdmin\" class=\"form-group col-md-6\">\n                        <label for=\"branch_id\" class=\"control-label\">Branch*</label>\n                        <ng-select formControlName=\"branch_id\" (change)=\"handleBranchChange($event)\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                            <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.branch_id?.invalid && (editForm?.branch_id?.dirty || editForm?.branch_id?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.branch_id?.errors?.required\">Please select a branch</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"stock_type\" class=\"control-label\">Stock Type*</label>\n                        <ng-select formControlName=\"stock_type\" appendTo=\"body\" placeholder=\"--- TYPE ---\" searchable=\"true\">\n                            <!-- <ng-option value='BOXES'>BOXES</ng-option> -->\n                            <ng-option value='TAPES'>TAPES</ng-option>\n                            <ng-option value='COVERS PACKET'>COVERS PACKET</ng-option>\n                            <ng-option value='BILL BOOKS'>BILL BOOKS</ng-option>\n                        </ng-select>\n                        <div *ngIf=\"editForm?.stock_type?.invalid && (editForm?.stock_type?.dirty || editForm?.stock_type?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.stock_type?.errors?.required\">Please select stock type</small>\n                        </div>\n                    </div>                    \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"quantity\" class=\"control-label\">Used Quantity*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"quantity\">\n                        <div *ngIf=\"editForm?.quantity?.invalid && (editForm?.quantity?.dirty || editForm?.quantity?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.quantity?.errors?.required\">Please enter quantity</small>\n                            <small *ngIf=\"editForm?.quantity?.errors?.pattern\">Please enter valid quantity</small>\n                        </div>\n                    </div>                   \n                    <div class=\"form-group col-md-6\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alphaRegx, numRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { getSumByKeyWithFilter, getSumByKeyWithFilters } from '../../helpers/common';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\n\n@Component({\n  selector: 'ngx-used-stock',\n  templateUrl: './used-stock.component.html',\n  styleUrls: ['./used-stock.component.scss']\n})\nexport class UsedStockComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  list: any;\n  currentDate: any;\n  pastDate: any;\n  isSuperAdmin: boolean;\n  branchID: any;\n  branchesList: any;\n  total3kgRequestsCount: any = 0;\n  total5kgRequestsCount: any = 0;\n  total10kgRequestsCount: any = 0;\n  total15kgRequestsCount: any = 0;\n  totalTapesRequestsCount: any = 0;\n  totalCoversPacketRequestsCount: any = 0;\n  totalBillBooksRequestsCount: any = 0;\n  total3kgApprovedCount: any = 0;\n  total5kgApprovedCount: any = 0;\n  total10kgApprovedCount: any = 0;\n  total15kgApprovedCount: any = 0;\n  totalTapesApprovedCount: any = 0;\n  totalCoversPacketApprovedCount: any = 0;\n  totalBillBooksApprovedCount: any = 0;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n  ) { }\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('stock-requests');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }else if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type === 'Super-Admin'){\n      this.isSuperAdmin = true;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n      branch: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      branch_id: [this.branchID],\n      stock_type: [, [Validators.required, Validators.pattern(alphaRegx)]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      branch_id: ['', [Validators.required]],\n      stock_type: ['', [Validators.required, Validators.pattern(alphaRegx)]],\n      quantity: ['', [Validators.required, Validators.pattern(numRegx)]],\n      description: ['', [Validators.pattern(nonHTMLRegx)]]\n    });\n\n    this.getBranchesList();\n    this.getUsedStockList();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      branch_id: data.branch_id,\n      stock_type: data.stock_type,\n      quantity: data.quantity,\n      description: data.description\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleStockTypeChange = (val: any, formVal: any = 'add') => {\n    if(formVal === 'update' && val !== 'BOXES'){\n      this.updateForm.controls['box_weight'].setValue('N/A');\n    }else if(val !== 'BOXES'){\n      this.addForm.controls['box_weight'].setValue('N/A');\n    }\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  getUsedStockList = async() => {\n    try {\n      let branchID = this.searchForm.value.branch ? this.searchForm.value.branch : null;\n      if(branchID){\n        this.branchID = branchID;\n        this.addForm.controls['branch_id'].setValue(branchID);\n      }else{\n        this.addForm.controls['branch_id'].setValue(null);\n      }\n      let reqData = {\n        branch_id: branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getUsedStockList', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.list = resp.list;\n        this.totalCount = (resp.list).length;\n      }\n    } catch (error) {\n      this.list = '';\n    }    \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let reqData = {...this.addForm.value, branch_id: this.branchID};\n        const resp = await this.adminService.addOrUpdateData('addUsedStock', reqData);\n        if(resp && resp.responseCode === 1){\n          this.getUsedStockList();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateUsedStock', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getUsedStockList();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteUsedStock', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getUsedStockList();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getSalaries()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i> Search</button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.view && list && list.length > 0\" (click)=\"exportToExcel()\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-download\"></i> Download</button>\n                        <button *ngIf=\"userAccess.view\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Employee Name</th>\n                                <th>Amount</th>\n                                <th>Salary Date</th>\n                                <th>Transaction ID</th>\n                                <th>ESI</th>\n                                <th>PF</th>\n                                <th>HRA</th>                                  \n                                <th>Description</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>                                \n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { employee_name: search_string1, salary_amount: search_string2, salary_date: search_string3, transaction_number: search_string4, amount: search_string5, paid_by: search_string6, paid_to: search_string7 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.employee_name}}</td>\n                                <td>{{data.salary_amount}}</td>\n                                <td>{{data.salary_date}}</td>\n                                <td>{{data.transaction_number}}</td>\n                                <td>{{data.esi}}</td>\n                                <td>{{data.pf}}</td>\n                                <td>{{data.hra}}</td>\n                                <td>{{data.description}}</td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.transaction_proof\" (click)=\"downloadKycFiles(data.transaction_proof)\">Download Proof</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"employee_name\" class=\"control-label\">Employee Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"employee_name\">\n                        <div *ngIf=\"form?.employee_name?.invalid && (form?.employee_name?.dirty || form?.employee_name?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.employee_name?.errors?.required\">Please enter name</small>\n                            <small *ngIf=\"form?.employee_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"salary_amount\" class=\"control-label\">Salary Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"salary_amount\">\n                        <div *ngIf=\"form?.salary_amount?.invalid && (form?.salary_amount?.dirty || form?.salary_amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.salary_amount?.errors?.required\">Please enter salary amount</small>\n                            <small *ngIf=\"form?.salary_amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"salary_date\" class=\"control-label\">Salary Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"salary_date\">\n                        <div *ngIf=\"form?.salary_date?.invalid && (form?.salary_date?.dirty || form?.salary_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.salary_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"form?.salary_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_number\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_number\">\n                        <div *ngIf=\"form?.transaction_number?.invalid && (form?.transaction_number?.dirty || form?.transaction_number?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.transaction_number?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"form?.transaction_number?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"esi\" class=\"control-label\">ESI</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"esi\">\n                        <div *ngIf=\"form?.esi?.invalid && (form?.esi?.dirty || form?.esi?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.esi?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"pf\" class=\"control-label\">PF</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"pf\">\n                        <div *ngIf=\"form?.pf?.invalid && (form?.pf?.dirty || form?.pf?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.pf?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"hra\" class=\"control-label\">HRA</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"hra\">\n                        <div *ngIf=\"form?.hra?.invalid && (form?.hra?.dirty || form?.hra?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.hra?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"employee_name\" class=\"control-label\">Employee Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"employee_name\">\n                        <div *ngIf=\"editForm?.employee_name?.invalid && (editForm?.employee_name?.dirty || editForm?.employee_name?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.employee_name?.errors?.required\">Please enter name</small>\n                            <small *ngIf=\"editForm?.employee_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"salary_amount\" class=\"control-label\">Salary Amount*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"salary_amount\">\n                        <div *ngIf=\"editForm?.salary_amount?.invalid && (editForm?.salary_amount?.dirty || editForm?.salary_amount?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.salary_amount?.errors?.required\">Please enter salary amount</small>\n                            <small *ngIf=\"editForm?.salary_amount?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"salary_date\" class=\"control-label\">Salary Date*</label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"salary_date\">\n                        <div *ngIf=\"editForm?.salary_date?.invalid && (editForm?.salary_date?.dirty || editForm?.salary_date?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.salary_date?.errors?.required\">Please enter date</small>\n                            <small *ngIf=\"editForm?.salary_date?.errors?.pattern\">Please enter valid date</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"transaction_number\" class=\"control-label\">Transaction ID*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"transaction_number\">\n                        <div *ngIf=\"editForm?.transaction_number?.invalid && (editForm?.transaction_number?.dirty || editForm?.transaction_number?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.transaction_number?.errors?.required\">Please enter transaction id</small>\n                            <small *ngIf=\"editForm?.transaction_number?.errors?.pattern\">Please enter valid trans id</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"esi\" class=\"control-label\">ESI</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"esi\">\n                        <div *ngIf=\"editForm?.esi?.invalid && (editForm?.esi?.dirty || editForm?.esi?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.esi?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"pf\" class=\"control-label\">PF</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"pf\">\n                        <div *ngIf=\"editForm?.pf?.invalid && (editForm?.pf?.dirty || editForm?.pf?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.pf?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"hra\" class=\"control-label\">HRA</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"hra\">\n                        <div *ngIf=\"editForm?.hra?.invalid && (editForm?.hra?.dirty || editForm?.hra?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.hra?.errors?.pattern\">Please enter valid amount</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"description\" class=\"control-label\">Description</label>\n                        <textarea class=\"form-control\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { floatRegx, alnumSpecialRegx, nonHTMLRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { exportToExcel } from '../../helpers/common';\n\n@Component({\n  selector: 'ngx-salaries',\n  templateUrl: './salaries.component.html',\n  styleUrls: ['./salaries.component.scss']\n})\nexport class SalariesComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  list: any;\n  currentDate: any;\n  pastDate: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('salaries');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],\n    });\n\n    this.addForm = this.formBuilder.group({\n      employee_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      salary_amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      salary_date: ['', [Validators.required]],\n      transaction_number: ['', [Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      esi: ['', Validators.pattern(floatRegx)],\n      pf: ['', Validators.pattern(floatRegx)],\n      hra: ['', Validators.pattern(floatRegx)],\n      description: ['', Validators.pattern(nonHTMLRegx)],\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      employee_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx)]],\n      salary_amount: ['', [Validators.required, Validators.pattern(floatRegx)]],\n      salary_date: ['', [Validators.required]],\n      transaction_number: ['', [Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      esi: ['', Validators.pattern(floatRegx)],\n      pf: ['', Validators.pattern(floatRegx)],\n      hra: ['', Validators.pattern(floatRegx)],\n      description: ['', Validators.pattern(nonHTMLRegx)],\n    });\n\n    this.getSalaries();\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      employee_name: data.employee_name,\n      salary_amount: data.salary_amount,\n      salary_date: data.salary_date,\n      transaction_number: data.transaction_number,\n      esi: data.esi ? data.esi : '',\n      pf: data.pf ? data.pf : '',\n      hra: data.hra ? data.hra : '',\n      description: data.description ? data.description : ''\n    }\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getSalaries = async() => {\n    try {\n      let reqData = {\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n      };\n      \n      let resp = await this.adminService.getData('getSalaries', reqData);          \n      if(resp && resp.responseCode === 1){\n        this.list = resp.list;\n        this.totalCount = (resp.list).length;\n      }\n    } catch (error) {\n      this.list = '';\n    }    \n  }\n\n  exportToExcel = async() => {\n    if(this.list.length > 0){\n      let sheetName = 'Salaries';\n      let fileName = 'Salaries-' + new Date().getTime();\n      let list = this.list.map((data: any) => {\n        let info = {\n          'Employee Name': data.employee_name,\n          'Amount': data.salary_amount,\n          'Salary Date': data.salary_date,\n          'Transaction ID': data.transaction_number,\n          'ESI': data.esi,\n          'PF': data.pf,\n          'HRA': data.hra,\n          'Description': data.description,\n          'Created On': new Date(data.createdAt).toLocaleString(),\n          'Last Updated On': new Date(data.updatedAt).toLocaleString(),\n        };\n        return info;\n      });\n      await exportToExcel(list, fileName, sheetName);\n    }\n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.view){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const resp = await this.adminService.addOrUpdateData('addSalaries', this.addForm.value);\n        if(resp && resp.responseCode === 1){\n          this.getSalaries();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateSalaries', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getSalaries();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteSalaries', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getSalaries();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}","import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, InjectionToken, forwardRef, PLATFORM_ID, Component, Inject, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { fromEvent, defer, Subject } from 'rxjs';\nimport { takeUntil, take, mapTo, shareReplay } from 'rxjs/operators';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getTinymce = () => {\n    const w = typeof window !== 'undefined' ? window : undefined;\n    return w && w.tinymce ? w.tinymce : null;\n};\n\nclass Events {\n    constructor() {\n        this.onBeforePaste = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onContextMenu = new EventEmitter();\n        this.onCopy = new EventEmitter();\n        this.onCut = new EventEmitter();\n        this.onDblclick = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragDrop = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDragGesture = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDrop = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onFocusIn = new EventEmitter();\n        this.onFocusOut = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onKeyPress = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onMouseDown = new EventEmitter();\n        this.onMouseEnter = new EventEmitter();\n        this.onMouseLeave = new EventEmitter();\n        this.onMouseMove = new EventEmitter();\n        this.onMouseOut = new EventEmitter();\n        this.onMouseOver = new EventEmitter();\n        this.onMouseUp = new EventEmitter();\n        this.onPaste = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onAddUndo = new EventEmitter();\n        this.onBeforeAddUndo = new EventEmitter();\n        this.onBeforeExecCommand = new EventEmitter();\n        this.onBeforeGetContent = new EventEmitter();\n        this.onBeforeRenderUI = new EventEmitter();\n        this.onBeforeSetContent = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onClearUndos = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.onDirty = new EventEmitter();\n        this.onExecCommand = new EventEmitter();\n        this.onGetContent = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onInitNgModel = new EventEmitter();\n        this.onLoadContent = new EventEmitter();\n        this.onNodeChange = new EventEmitter();\n        this.onPostProcess = new EventEmitter();\n        this.onPostRender = new EventEmitter();\n        this.onPreInit = new EventEmitter();\n        this.onPreProcess = new EventEmitter();\n        this.onProgressState = new EventEmitter();\n        this.onRedo = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onReset = new EventEmitter();\n        this.onResizeEditor = new EventEmitter();\n        this.onSaveContent = new EventEmitter();\n        this.onSetAttrib = new EventEmitter();\n        this.onObjectResizeStart = new EventEmitter();\n        this.onObjectResized = new EventEmitter();\n        this.onObjectSelected = new EventEmitter();\n        this.onSetContent = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onSubmit = new EventEmitter();\n        this.onUndo = new EventEmitter();\n        this.onVisualAid = new EventEmitter();\n    }\n}\nEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: Events, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nEvents.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.2\", type: Events, outputs: { onBeforePaste: \"onBeforePaste\", onBlur: \"onBlur\", onClick: \"onClick\", onContextMenu: \"onContextMenu\", onCopy: \"onCopy\", onCut: \"onCut\", onDblclick: \"onDblclick\", onDrag: \"onDrag\", onDragDrop: \"onDragDrop\", onDragEnd: \"onDragEnd\", onDragGesture: \"onDragGesture\", onDragOver: \"onDragOver\", onDrop: \"onDrop\", onFocus: \"onFocus\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onKeyDown: \"onKeyDown\", onKeyPress: \"onKeyPress\", onKeyUp: \"onKeyUp\", onMouseDown: \"onMouseDown\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\", onMouseMove: \"onMouseMove\", onMouseOut: \"onMouseOut\", onMouseOver: \"onMouseOver\", onMouseUp: \"onMouseUp\", onPaste: \"onPaste\", onSelectionChange: \"onSelectionChange\", onActivate: \"onActivate\", onAddUndo: \"onAddUndo\", onBeforeAddUndo: \"onBeforeAddUndo\", onBeforeExecCommand: \"onBeforeExecCommand\", onBeforeGetContent: \"onBeforeGetContent\", onBeforeRenderUI: \"onBeforeRenderUI\", onBeforeSetContent: \"onBeforeSetContent\", onChange: \"onChange\", onClearUndos: \"onClearUndos\", onDeactivate: \"onDeactivate\", onDirty: \"onDirty\", onExecCommand: \"onExecCommand\", onGetContent: \"onGetContent\", onHide: \"onHide\", onInit: \"onInit\", onInitNgModel: \"onInitNgModel\", onLoadContent: \"onLoadContent\", onNodeChange: \"onNodeChange\", onPostProcess: \"onPostProcess\", onPostRender: \"onPostRender\", onPreInit: \"onPreInit\", onPreProcess: \"onPreProcess\", onProgressState: \"onProgressState\", onRedo: \"onRedo\", onRemove: \"onRemove\", onReset: \"onReset\", onResizeEditor: \"onResizeEditor\", onSaveContent: \"onSaveContent\", onSetAttrib: \"onSetAttrib\", onObjectResizeStart: \"onObjectResizeStart\", onObjectResized: \"onObjectResized\", onObjectSelected: \"onObjectSelected\", onSetContent: \"onSetContent\", onShow: \"onShow\", onSubmit: \"onSubmit\", onUndo: \"onUndo\", onVisualAid: \"onVisualAid\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: Events, decorators: [{\n            type: Directive\n        }], propDecorators: { onBeforePaste: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onContextMenu: [{\n                type: Output\n            }], onCopy: [{\n                type: Output\n            }], onCut: [{\n                type: Output\n            }], onDblclick: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], onDragDrop: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }], onDragGesture: [{\n                type: Output\n            }], onDragOver: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onFocusIn: [{\n                type: Output\n            }], onFocusOut: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onKeyPress: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onMouseDown: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: Output\n            }], onMouseLeave: [{\n                type: Output\n            }], onMouseMove: [{\n                type: Output\n            }], onMouseOut: [{\n                type: Output\n            }], onMouseOver: [{\n                type: Output\n            }], onMouseUp: [{\n                type: Output\n            }], onPaste: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], onActivate: [{\n                type: Output\n            }], onAddUndo: [{\n                type: Output\n            }], onBeforeAddUndo: [{\n                type: Output\n            }], onBeforeExecCommand: [{\n                type: Output\n            }], onBeforeGetContent: [{\n                type: Output\n            }], onBeforeRenderUI: [{\n                type: Output\n            }], onBeforeSetContent: [{\n                type: Output\n            }], onChange: [{\n                type: Output\n            }], onClearUndos: [{\n                type: Output\n            }], onDeactivate: [{\n                type: Output\n            }], onDirty: [{\n                type: Output\n            }], onExecCommand: [{\n                type: Output\n            }], onGetContent: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], onInit: [{\n                type: Output\n            }], onInitNgModel: [{\n                type: Output\n            }], onLoadContent: [{\n                type: Output\n            }], onNodeChange: [{\n                type: Output\n            }], onPostProcess: [{\n                type: Output\n            }], onPostRender: [{\n                type: Output\n            }], onPreInit: [{\n                type: Output\n            }], onPreProcess: [{\n                type: Output\n            }], onProgressState: [{\n                type: Output\n            }], onRedo: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onReset: [{\n                type: Output\n            }], onResizeEditor: [{\n                type: Output\n            }], onSaveContent: [{\n                type: Output\n            }], onSetAttrib: [{\n                type: Output\n            }], onObjectResizeStart: [{\n                type: Output\n            }], onObjectResized: [{\n                type: Output\n            }], onObjectSelected: [{\n                type: Output\n            }], onSetContent: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onSubmit: [{\n                type: Output\n            }], onUndo: [{\n                type: Output\n            }], onVisualAid: [{\n                type: Output\n            }] } });\nconst validEvents = [\n    'onActivate',\n    'onAddUndo',\n    'onBeforeAddUndo',\n    'onBeforeExecCommand',\n    'onBeforeGetContent',\n    'onBeforeRenderUI',\n    'onBeforeSetContent',\n    'onBeforePaste',\n    'onBlur',\n    'onChange',\n    'onClearUndos',\n    'onClick',\n    'onContextMenu',\n    'onCopy',\n    'onCut',\n    'onDblclick',\n    'onDeactivate',\n    'onDirty',\n    'onDrag',\n    'onDragDrop',\n    'onDragEnd',\n    'onDragGesture',\n    'onDragOver',\n    'onDrop',\n    'onExecCommand',\n    'onFocus',\n    'onFocusIn',\n    'onFocusOut',\n    'onGetContent',\n    'onHide',\n    'onInit',\n    'onKeyDown',\n    'onKeyPress',\n    'onKeyUp',\n    'onLoadContent',\n    'onMouseDown',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onNodeChange',\n    'onObjectResizeStart',\n    'onObjectResized',\n    'onObjectSelected',\n    'onPaste',\n    'onPostProcess',\n    'onPostRender',\n    'onPreProcess',\n    'onProgressState',\n    'onRedo',\n    'onRemove',\n    'onReset',\n    'onResizeEditor',\n    'onSaveContent',\n    'onSelectionChange',\n    'onSetAttrib',\n    'onSetContent',\n    'onShow',\n    'onSubmit',\n    'onUndo',\n    'onVisualAid'\n];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Caretaker note: `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n// will be invoked upon subscription and teardown.\nconst listenTinyMCEEvent = (editor, eventName, destroy$) => fromEvent(editor, eventName).pipe(takeUntil(destroy$));\nconst bindHandlers = (ctx, editor, destroy$) => {\n    const allowedEvents = getValidEvents(ctx);\n    allowedEvents.forEach((eventName) => {\n        const eventEmitter = ctx[eventName];\n        listenTinyMCEEvent(editor, eventName.substring(2), destroy$).subscribe((event) => {\n            // Caretaker note: `ngZone.run()` runs change detection since it notifies the forked Angular zone that it's\n            // being re-entered. We don't want to run `ApplicationRef.tick()` if anyone listens to the specific event\n            // within the template. E.g. if the `onSelectionChange` is not listened within the template like:\n            // `<editor (onSelectionChange)=\"...\"></editor>`\n            // then its `observers` array will be empty, and we won't run \"dead\" change detection.\n            if (eventEmitter.observers.length > 0) {\n                ctx.ngZone.run(() => eventEmitter.emit({ event, editor }));\n            }\n        });\n    });\n};\nconst getValidEvents = (ctx) => {\n    const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n    const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter((event) => validEvents.includes(event) && !ignoredEvents.includes(event));\n    return allowedEvents;\n};\nconst parseStringProperty = (property, defaultValue) => {\n    if (typeof property === 'string') {\n        return property.split(',').map((value) => value.trim());\n    }\n    if (Array.isArray(property)) {\n        return property;\n    }\n    return defaultValue;\n};\nlet unique = 0;\nconst uuid = (prefix) => {\n    const date = new Date();\n    const time = date.getTime();\n    const random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nconst isTextarea = (element) => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst normalizePluginArray = (plugins) => {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst isNullOrUndefined = (value) => value === null || value === undefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n    script$: null,\n});\nconst CreateScriptLoader = () => {\n    let state = createState();\n    const load = (doc, url) => (state.script$ ||\n        // Caretaker note: the `script$` is a multicast observable since it's piped with `shareReplay`,\n        // so if there're multiple editor components simultaneously on the page, they'll subscribe to the internal\n        // `ReplaySubject`. The script will be loaded only once, and `ReplaySubject` will cache the result.\n        (state.script$ = defer(() => {\n            const scriptTag = doc.createElement('script');\n            scriptTag.referrerPolicy = 'origin';\n            scriptTag.type = 'application/javascript';\n            scriptTag.src = url;\n            doc.head.appendChild(scriptTag);\n            return fromEvent(scriptTag, 'load').pipe(take(1), mapTo(undefined));\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }))));\n    // Only to be used by tests.\n    const reinitialize = () => {\n        state = createState();\n    };\n    return {\n        load,\n        reinitialize,\n    };\n};\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n};\nclass EditorComponent extends Events {\n    constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n        super();\n        this.platformId = platformId;\n        this.tinymceScriptSrc = tinymceScriptSrc;\n        this.cloudChannel = '6';\n        this.apiKey = 'no-api-key';\n        this.id = '';\n        this.modelEvents = 'change input undo redo';\n        this.onTouchedCallback = noop;\n        this.destroy$ = new Subject();\n        this.initialise = () => {\n            const finalInit = Object.assign(Object.assign({}, this.init), { selector: undefined, target: this._element, inline: this.inline, readonly: this.disabled, plugins: mergePlugins((this.init && this.init.plugins), this.plugins), toolbar: this.toolbar || (this.init && this.init.toolbar), setup: (editor) => {\n                    this._editor = editor;\n                    listenTinyMCEEvent(editor, 'init', this.destroy$).subscribe(() => {\n                        this.initEditor(editor);\n                    });\n                    bindHandlers(this, editor, this.destroy$);\n                    if (this.init && typeof this.init.setup === 'function') {\n                        this.init.setup(editor);\n                    }\n                } });\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = '';\n            }\n            this.ngZone.runOutsideAngular(() => {\n                getTinymce().init(finalInit);\n            });\n        };\n        this._elementRef = elementRef;\n        this.ngZone = ngZone;\n    }\n    set disabled(val) {\n        var _a;\n        this._disabled = val;\n        if (this._editor && this._editor.initialized) {\n            if (typeof ((_a = this._editor.mode) === null || _a === void 0 ? void 0 : _a.set) === 'function') {\n                this._editor.mode.set(val ? 'readonly' : 'design');\n            }\n            else {\n                this._editor.setMode(val ? 'readonly' : 'design');\n            }\n        }\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get editor() {\n        return this._editor;\n    }\n    writeValue(value) {\n        if (this._editor && this._editor.initialized) {\n            this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n        }\n        else {\n            this.initialValue = value === null ? undefined : value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (isPlatformBrowser(this.platformId)) {\n            this.id = this.id || uuid('tiny-angular');\n            this.inline = this.inline !== undefined ? this.inline !== false : !!((_a = this.init) === null || _a === void 0 ? void 0 : _a.inline);\n            this.createElement();\n            if (getTinymce() !== null) {\n                this.initialise();\n            }\n            else if (this._element && this._element.ownerDocument) {\n                // Caretaker note: the component might be destroyed before the script is loaded and its code is executed.\n                // This will lead to runtime exceptions if `initialise` will be called when the component has been destroyed.\n                ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc())\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe(this.initialise);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        if (getTinymce() !== null) {\n            getTinymce().remove(this._editor);\n        }\n    }\n    createElement() {\n        const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n        this._element = document.createElement(this.inline ? tagName : 'textarea');\n        if (this._element) {\n            if (document.getElementById(this.id)) {\n                /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n                console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n            }\n            this._element.id = this.id;\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = 'hidden';\n            }\n            this._elementRef.nativeElement.appendChild(this._element);\n        }\n    }\n    getScriptSrc() {\n        return isNullOrUndefined(this.tinymceScriptSrc) ?\n            `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` :\n            this.tinymceScriptSrc;\n    }\n    initEditor(editor) {\n        listenTinyMCEEvent(editor, 'blur', this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.onTouchedCallback());\n        });\n        listenTinyMCEEvent(editor, this.modelEvents, this.destroy$).subscribe(() => {\n            this.ngZone.run(() => this.emitOnChange(editor));\n        });\n        if (typeof this.initialValue === 'string') {\n            this.ngZone.run(() => {\n                editor.setContent(this.initialValue);\n                if (editor.getContent() !== this.initialValue) {\n                    this.emitOnChange(editor);\n                }\n                if (this.onInitNgModel !== undefined) {\n                    this.onInitNgModel.emit(editor);\n                }\n            });\n        }\n    }\n    emitOnChange(editor) {\n        if (this.onChangeCallback) {\n            this.onChangeCallback(editor.getContent({ format: this.outputFormat }));\n        }\n    }\n}\nEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: TINYMCE_SCRIPT_SRC, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.2\", type: EditorComponent, selector: \"editor\", inputs: { cloudChannel: \"cloudChannel\", apiKey: \"apiKey\", init: \"init\", id: \"id\", initialValue: \"initialValue\", outputFormat: \"outputFormat\", inline: \"inline\", tagName: \"tagName\", plugins: \"plugins\", toolbar: \"toolbar\", modelEvents: \"modelEvents\", allowedEvents: \"allowedEvents\", ignoreEvents: \"ignoreEvents\", disabled: \"disabled\" }, providers: [EDITOR_COMPONENT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0, template: '<ng-template></ng-template>', isInline: true, styles: [\":host{display:block}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'editor',\n                    template: '<ng-template></ng-template>',\n                    styles: [':host { display: block; }'],\n                    providers: [EDITOR_COMPONENT_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TINYMCE_SCRIPT_SRC]\n                    }] }];\n    }, propDecorators: { cloudChannel: [{\n                type: Input\n            }], apiKey: [{\n                type: Input\n            }], init: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], initialValue: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], inline: [{\n                type: Input\n            }], tagName: [{\n                type: Input\n            }], plugins: [{\n                type: Input\n            }], toolbar: [{\n                type: Input\n            }], modelEvents: [{\n                type: Input\n            }], allowedEvents: [{\n                type: Input\n            }], ignoreEvents: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass EditorModule {\n}\nEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, declarations: [EditorComponent], imports: [CommonModule, FormsModule], exports: [EditorComponent] });\nEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, imports: [[CommonModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.2\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, FormsModule],\n                    declarations: [EditorComponent],\n                    exports: [EditorComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC };\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b;\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        bufferSize = (_a = configOrBufferSize.bufferSize) !== null && _a !== void 0 ? _a : Infinity;\n        windowTime = (_b = configOrBufferSize.windowTime) !== null && _b !== void 0 ? _b : Infinity;\n        refCount = !!configOrBufferSize.refCount;\n        scheduler = configOrBufferSize.scheduler;\n    }\n    else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { decode } from 'html-entities';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) { }\n  transform(value: any) {\n    return this.sanitized.bypassSecurityTrustHtml(decode(value));\n  }\n}","<div class=\"row\">\n    <div class=\"col-md-12\">   \n        <nb-card class=\"mb-0\">\n            <nb-card-body>                                \n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"getComplaints()\">\n                    <div class=\"row justify-content-md-center\">\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>From</label>\n                                <input type=\"date\" (change)=\"handleDateChange($event)\" max=\"{{currentDate}}\" class=\"form-control\" formControlName=\"from_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\">\n                            <div class=\"form-group\">\n                                <label>To</label>\n                                <input type=\"date\" id=\"to_date\" class=\"form-control\" max=\"{{currentDate}}\" formControlName=\"to_date\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-3\" *ngIf=\"isSuperAdmin\">\n                            <div class=\"form-group\">\n                                <label>Branch</label>\n                                <ng-select formControlName=\"branch\" appendTo=\"body\" placeholder=\"--- BRANCH ---\" searchable=\"true\">\n                                    <ng-option *ngFor=\"let branch of branchesList\" [value]=\"branch.id\">{{branch.branch_name}}</ng-option>\n                                </ng-select>\n                            </div> \n                        </div>\n                        <div class=\"col-md-2\">\n                            <div class=\"form-group\">\n                                <label>Invoice Number</label>\n                                <input type=\"text\" id=\"to_date\" class=\"form-control\" formControlName=\"invoice_number\">\n                            </div> \n                        </div>\n                        <div class=\"col-md-1\">\n                            <div class=\"form-group\">\n                                <label>&nbsp;</label><br>\n                                <button type=\"submit\" class=\"btn btn-primary search-button\"><i class=\"fa fa-search\"></i></button>\n                            </div> \n                        </div>\n                    </div>  \n                </form>\n            </nb-card-body>\n        </nb-card>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"d-flex justify-content-between\">\n                    <div class=\"dataTables_filter\">\n                        <select class=\"form-control form-control-sm\" (change)=\"changePageSize($event)\">\n                            <option *ngFor=\"let size of pageSizes\" value=\"{{size}}\">{{ size }}</option>\n                        </select>\n                    </div>\n                    <div class=\"dataTables_filter\">\n                        <button *ngIf=\"userAccess.edit\" (click)=\"openModal(addModal)\" class=\"btn btn-primary btn-sm action-button\"><i class=\"fa fa-plus\"></i> Add New</button>\n                    </div>\n                </div>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"table-responsive\" *ngIf=\"list && list.length > 0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th>S.No</th>\n                                <th>Branch</th>\n                                <th>Invoice No</th>\n                                <th>Customer Name</th>\n                                <th>Mobile No</th>\n                                <th>Status</th>                               \n                                <th>Description</th>                                \n                                <th *ngIf=\"userAccess.edit || userAccess.delete\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string1\" [(ngModel)]=\"search_string1\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string2\" [(ngModel)]=\"search_string2\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string3\" [(ngModel)]=\"search_string3\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string4\" [(ngModel)]=\"search_string4\" placeholder=\"Search\"/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" class=\"form-control form-control-sm\" name=\"search_string5\" [(ngModel)]=\"search_string5\" placeholder=\"Search\"/>\n                                </td>\n                                <td></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\"></td>\n                            </tr>\n                            <tr *ngFor=\"let data of list | smartFilter: { 'branch.branch_name': search_string1, transaction_date: search_string2, expense_type: search_string3, mode_of_payment: search_string4, amount: search_string5, paid_by: search_string6, paid_to: search_string7 } | paginate: { id: 'pagination_id', itemsPerPage: pageSize, currentPage: page, totalItems: totalCount }; let i = index\">\n                                <td>{{i+1}}</td>\n                                <td>{{data.branch.branch_name}}</td>\n                                <td>{{data.invoice_number}}</td>\n                                <td>{{data.customer_name}}</td>\n                                <td>{{data.mobile_number}}</td>\n                                <td>\n                                    <span *ngIf=\"data.status === 'PENDING'\" class=\"badge badge-warning\">{{data.status}}</span>\n                                    <span *ngIf=\"data.status === 'CLOSED'\" class=\"badge badge-danger\">{{data.status}}</span>\n                                </td>\n                                <td [innerHtml]=\"data.description | safeHtml\"></td>\n                                <td *ngIf=\"userAccess.edit || userAccess.delete\">\n                                    <div class=\"dropdown\">                                        \n                                        <button (click)=\"openActionDropDown(i)\" class=\"btn btn-sm\" type=\"button\">\n                                            <i class=\"fa fa-bars dropbtn\"></i>\n                                        </button>\n                                        <div id=\"actionDropDown-{{i}}\" class=\"dropdown-menu\">\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit\" (click)=\"edit(data, updateModal)\">Edit</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.edit && data.transaction_proof\" (click)=\"downloadKycFiles(data.transaction_proof)\">Download Proof</a>\n                                          <a class=\"dropdown-item\" *ngIf=\"userAccess.delete\" (click)=\"delete(data.id)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class=\"pagination-div\">\n                        <pagination-template #p=\"paginationApi\" id=\"pagination_id\" (pageChange)=\"page = $event\">\n                            <ul class=\"pagination pagination-circled mb-0\" *ngIf=\"(p.pages).length > 1\">\n                                <li class=\"page-item\" [class.disabled]=\"p.isFirstPage()\"><a class=\"page-link\" *ngIf=\"!p.isFirstPage()\" (click)=\"p.previous()\"><i\n                                        class=\"icon ion-ios-arrow-back\"></i></a></li>\n                                <li class=\"page-item\" *ngFor=\"let page of p.pages\" [class.active]=\"p.getCurrent() === page.value\">\n                                    <a class=\"page-link\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">{{\n                                    page.label }}</a>\n                                    <a class=\"page-link\" *ngIf=\"p.getCurrent() === page.value\">{{ page.label }}</a>\n                                </li>\n                                <li class=\"page-item\" [class.disabled]=\"p.isLastPage()\"><a class=\"page-link\" *ngIf=\"!p.isLastPage()\" (click)=\"p.next()\"><i\n                                        class=\"icon ion-ios-arrow-forward\"></i></a></li>\n                            </ul>\n                        </pagination-template>\n                    </div>\n                </div>\n                <p *ngIf=\"!list || list.length === 0\">No data available</p>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>\n<!-- ADD MODAL -->\n<ng-template #addModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"addForm\" (ngSubmit)=\"addFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            ADD NEW\n            <button id=\"close_add_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"invoice_number\" class=\"control-label\">Invoice Number*</label>\n                        <input type=\"text\" class=\"form-control\" (change)=\"checkInvoiceNoAvailable($event)\" formControlName=\"invoice_number\">\n                        <div *ngIf=\"form?.invoice_number?.invalid && (form?.invoice_number?.dirty || form?.invoice_number?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.invoice_number?.errors?.required\">Please enter invoice number</small>\n                            <small *ngIf=\"form?.invoice_number?.errors?.pattern\">Please enter valid invoice number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"customer_name\" class=\"control-label\">Customer Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"customer_name\">\n                        <div *ngIf=\"form?.customer_name?.invalid && (form?.customer_name?.dirty || form?.customer_name?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.customer_name?.errors?.required\">Please enter customer name</small>\n                            <small *ngIf=\"form?.customer_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mobile_number\" class=\"control-label\">Mobile Number*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"mobile_number\">\n                        <div *ngIf=\"form?.mobile_number?.invalid && (form?.mobile_number?.dirty || form?.mobile_number?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.mobile_number?.errors?.required\">Please enter mobile number</small>\n                            <small *ngIf=\"form?.mobile_number?.errors?.pattern\">Please enter valid mobile number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"description\" class=\"control-label\">Description*</label>\n                        <editor [apiKey]=\"tinymceApiKey\" [init]=\"tinymceInit\" [(ngModel)]=\"addDesc\" [ngModelOptions]=\"{standalone: true}\" (onKeyUp)=\"handleAddDescriptionChange($event)\" (onKeyDown)=\"handleAddDescriptionChange($event)\"></editor>\n                        <textarea class=\"form-control\" style=\"display: none;\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"form?.description?.invalid && (form?.description?.dirty || form?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"form?.description?.errors?.required\">Please enter description</small>\n                            <small *ngIf=\"form?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"addForm?.invalid || submitted || !invoiceNumberAvailable\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END ADD MODAL -->\n\n<!-- UPDATE MODAL -->\n<ng-template #updateModal let-data let-ref=\"dialogRef\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateFormSubmit()\">\n        <nb-card>        \n            <nb-card-header>\n            UPDATE DETAILS\n            <button id=\"close_edit_modal\" class=\"close action-button\" type=\"button\" (click)=\"ref.close()\"><span aria-hidden=\"true\">×</span></button>\n            </nb-card-header>\n            <nb-card-body>            \n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"customer_name\" class=\"control-label\">Customer Name*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"customer_name\">\n                        <div *ngIf=\"editForm?.customer_name?.invalid && (editForm?.customer_name?.dirty || editForm?.customer_name?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.customer_name?.errors?.required\">Please enter customer name</small>\n                            <small *ngIf=\"editForm?.customer_name?.errors?.pattern\">Please enter valid name</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"mobile_number\" class=\"control-label\">Mobile Number*</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"mobile_number\">\n                        <div *ngIf=\"editForm?.mobile_number?.invalid && (editForm?.mobile_number?.dirty || editForm?.mobile_number?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.mobile_number?.errors?.required\">Please enter mobile number</small>\n                            <small *ngIf=\"editForm?.mobile_number?.errors?.pattern\">Please enter valid mobile number</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"status\" class=\"control-label\">Status*</label>\n                        <select formControlName=\"status\" class=\"form-control\">\n                            <option value=\"PENDING\">PENDING</option>\n                            <option value=\"CLOSED\">CLOSED</option>\n                        </select>\n                        <div *ngIf=\"editForm?.status?.invalid && (editForm?.status?.dirty || editForm?.status?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.status?.errors?.required\">Please select status</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group col-md-12\">\n                        <label for=\"description\" class=\"control-label\">Description*</label>\n                        <editor [apiKey]=\"tinymceApiKey\" [init]=\"tinymceInit\" [(ngModel)]=\"updateDesc\" [ngModelOptions]=\"{standalone: true}\" (onKeyUp)=\"handleUpdateDescriptionChange($event)\" (onKeyDown)=\"handleUpdateDescriptionChange($event)\"></editor>\n                        <textarea class=\"form-control\" style=\"display: none;\" formControlName=\"description\"></textarea>\n                        <div *ngIf=\"editForm?.description?.invalid && (editForm?.description?.dirty || editForm?.description?.touched)\" class=\"error\">\n                            <small *ngIf=\"editForm?.description?.errors?.required\">Please enter description</small>\n                            <small *ngIf=\"editForm?.description?.errors?.pattern\">Please enter valid description</small>\n                        </div>\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer>\n                <input type=\"hidden\" formControlName=\"id\" />\n                <button type=\"button\" class=\"btn btn-danger action-button\" (click)=\"ref.close()\">Close</button>            \n                <button type=\"submit\" [disabled]=\"updateForm?.invalid || submitted\" class=\"btn btn-primary action-button\">Submit</button>            \n            </nb-card-footer>        \n        </nb-card>\n    </form>\n</ng-template>\n<!-- END UPDATE MODAL -->","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NbDialogService, NbSidebarService } from '@nebular/theme';\nimport { AdminService } from '../../services/admin/admin.service';\nimport { AccessService } from '../../services/access/access.service';\nimport { alnumSpecialRegx, mobileRegx } from '../../helpers/regExp';\nimport { deleteConfirmAlert, successAlert, errorAlert } from '../../helpers/sweetalert';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { decode } from 'html-entities';\n\n\n@Component({\n  selector: 'ngx-complaints',\n  templateUrl: './complaints.component.html',\n  styleUrls: ['./complaints.component.scss']\n})\nexport class ComplaintsComponent implements OnInit {\n\n  searchForm!: FormGroup;\n  addForm!: FormGroup;\n  updateForm!: FormGroup;\n  showModal! : boolean;\n  submitted = false;\n  userAccess = {view: true, edit: false, delete: false};\n  page: number = 1;\n  pageSize: number = 25;\n  totalCount: number = 0;\n  pageSizes = ['25', '50', '100', '200'];\n  currentUserData: any;\n  branchesList: any;\n  list: any;\n  isSuperAdmin: Boolean = true;\n  branchID: any;\n  invoiceNumberAvailable: Boolean = true;\n  currentDate: any;\n  pastDate: any;\n  addDesc: any;\n  updateDesc: any;\n  tinymceApiKey:any = '4vz3d62oru7v1dgx1oambin91x3b3b766iy05tfkdd77pxz4';\n  tinymceInit:any = {\n    height: 200,\n    menubar: false,\n    plugins: [\n    'advlist autolink lists charmap preview anchor',\n    'code fullscreen',\n    'table paste code help wordcount'\n    ],\n    toolbar:\n    'undo redo | formatselect | bold italic backcolor | \\\n    alignleft aligncenter alignright alignjustify | \\\n    bullist numlist outdent indent | removeformat'\n}\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private adminService: AdminService,\n    private accessService: AccessService,\n    private dialogService: NbDialogService,\n    private authenticateService: AuthenticateService,\n    private sidebarService: NbSidebarService,\n  ) { }\n\n\n  ngOnInit(): void {\n    const accessData = this.accessService.getActionAccess('complaints');\n    if(accessData && accessData.length > 0){\n      this.userAccess.edit = accessData[0].edit;\n      this.userAccess.delete = accessData[0].delete;\n    }\n\n    this.currentUserData = this.authenticateService.currentUserValue;\n    if(this.currentUserData && this.currentUserData.role_type && this.currentUserData.role_type !== 'Super-Admin'){\n      this.isSuperAdmin = false;\n      this.branchID = this.currentUserData.branch_id;\n    }\n\n    this.currentDate = new Date().toISOString().split('T')[0];\n    let now = new Date();\n    const backDate = new Date(now.setDate(now.getDate() - 30));\n    this.pastDate = backDate.toISOString().split('T')[0];\n    \n    this.searchForm = this.formBuilder.group({\n      from_date: [this.pastDate, Validators.required],\n      to_date: [this.currentDate],      \n      branch: [],\n      invoice_number: [],\n    });\n\n    this.addForm = this.formBuilder.group({\n      invoice_number: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      customer_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mobile_number: [, [Validators.required, Validators.pattern(mobileRegx)]],\n      description: ['', [Validators.required]]\n    });\n    this.updateForm = this.formBuilder.group({\n      id: ['', [Validators.required]],\n      customer_name: ['', [Validators.required, Validators.pattern(alnumSpecialRegx), Validators.maxLength(50)]],\n      mobile_number: [, [Validators.required, Validators.pattern(mobileRegx)]],\n      status: [, [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n\n    this.getComplaints();\n    this.getBranchesList();\n    this.toggleSidebar();\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    return false;\n  }\n\n  changePageSize = (event: any) => {    \n    this.pageSize = event.target.value;\n  }\n\n  openModal(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      {\n        context: '',\n        closeOnBackdropClick: false,\n      });\n  }\n\n  get form() { return this.addForm.controls; }\n  get editForm() { return this.updateForm.controls; }\n\n  checkInvoiceNoAvailable = async(event: any) => {\n    let resp = await this.adminService.getData('checkInvoiceNoAvailable', {invoice_number: event.target.value});          \n    if(resp && resp.responseCode === 1 && resp.info && resp.info.invoice_number){\n      this.invoiceNumberAvailable = true;\n    }else{\n      this.invoiceNumberAvailable = false;\n      await errorAlert(\"Sorry ! Invoice number not exists, please provide valid no\");\n    }\n  }\n\n  edit = (data: any, modalVal: any) => {\n    const updateData = {\n      id: data.id,\n      customer_name: data.customer_name,\n      mobile_number: data.mobile_number,\n      status: data.status,\n      description: data.description\n    }\n    this.updateDesc = decode(data.description);\n    this.updateForm.setValue(updateData);\n    this.openModal(modalVal);\n  }\n\n  handleAddDescriptionChange = (data: any) => {\n    if(this.addDesc){\n      this.addForm.controls['description'].setValue(this.addDesc);\n    }else{      \n      this.addForm.controls['description'].setValue(null);\n    } \n    this.addForm.controls['description'].markAsTouched();   \n  }\n\n  handleUpdateDescriptionChange = (data: any) => {\n    if(this.updateDesc){\n      this.updateForm.controls['description'].setValue(this.updateDesc);\n    }else{      \n      this.updateForm.controls['description'].setValue(null);\n    } \n    this.updateForm.controls['description'].markAsTouched();   \n  }\n\n  handleBranchChange = (branchID: any) => {\n    this.branchID = branchID ? branchID : null;\n  }\n\n  handleDateChange = (event: any) => {\n    this.searchForm.controls['to_date'].setValue(null);\n    let fromDate = this.searchForm.value.from_date;\n    if(fromDate){\n      let now = new Date(fromDate);\n      const futureDate = new Date(now.setDate(now.getDate()));\n      let date: any = futureDate.toISOString().split('T');\n      document.getElementById('to_date').setAttribute('min', date[0]);\n    }\n  }\n\n  getComplaints = async() => {\n    try {\n      let branchID = this.branchID = this.searchForm.value.branch ? this.searchForm.value.branch : null;\n      let reqData = {\n        branch_id: branchID,\n        from_date: this.searchForm.value.from_date ? this.searchForm.value.from_date : null,\n        to_date: this.searchForm.value.to_date ? this.searchForm.value.to_date : null,\n        invoice_number: this.searchForm.value.invoice_number ? this.searchForm.value.invoice_number : null,\n      };\n      let resp = await this.adminService.getData('getComplaints', reqData);          \n      if(resp && resp.responseCode === 1 && resp.list){\n        this.list = resp.list;\n        this.totalCount = (resp.list).length;\n      }\n    } catch (error) {\n      this.list = '';\n    }    \n  }\n\n  getBranchesList = async() => {\n    try {\n      let resp = await this.adminService.getData('getBranches');          \n      if(resp && resp.responseCode === 1){\n        this.branchesList = resp.branchesList;\n      }\n    } catch (error) {\n      this.branchesList = {};\n    }    \n  }\n\n  openActionDropDown = (i: any) => {       \n    let dropdowns = document.getElementsByClassName(\"dropdown-menu\");\n    for (let i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    } \n    document.getElementById(\"actionDropDown-\" + i).classList.toggle(\"show\");\n  }\n\n  addFormSubmit = async() => {\n    try {\n      if(this.userAccess.view){\n        this.submitted = true;\n        // stop here if form is invalid\n        if (this.addForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        let reqData = {...this.addForm.value};\n        const resp = await this.adminService.addOrUpdateData('addComplaints', reqData);\n        if(resp && resp.responseCode === 1){\n          this.getComplaints();\n          await successAlert(\"Details added successfully\")\n        }else if(resp && resp.responseCode === 0){\n          await errorAlert(resp.message);\n        }else{\n          await errorAlert(\"Details adding has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    this.addForm.reset();\n    document.getElementById(\"close_add_modal\")?.click()\n  }\n\n  updateFormSubmit = async() => {\n    try {\n      if(this.userAccess.edit){\n        this.submitted = true;\n        //stop here if form is invalid\n        if (this.updateForm.invalid) {\n          this.submitted = false;\n            return;\n        }\n        const updateResp = await this.adminService.addOrUpdateData('updateComplaints', this.updateForm.value);\n        if(updateResp && updateResp.responseCode === 1){\n          this.getComplaints();\n          await successAlert(\"Details updated successfully\")\n        }else if(updateResp && updateResp.responseCode === 0){\n          await errorAlert(updateResp.message);\n        }else{\n          await errorAlert(\"Details updating has failed ! Please try again\");\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n    this.submitted = false;\n    document.getElementById(\"close_edit_modal\")?.click()\n  }\n\n  delete = async(id: String) => {\n    try {\n      if(this.userAccess.delete){\n        if(await deleteConfirmAlert('Want to delete this')){\n          const deleteResp = await this.adminService.deleteData('deleteComplaints', id);\n          if(deleteResp && deleteResp.responseCode === 1){\n            this.getComplaints();\n            await successAlert(\"Details deleted successfully\")\n          }else{\n            await errorAlert(\"Details deleting has failed ! Please try again\")\n          }\n        }\n      }else{\n        await errorAlert(\"Access Forbidden ! Please contact administrator\");\n      }\n    } catch (error) {\n      await errorAlert(error.message ? error.message : 'Something went wrong ! Please try again');\n    }    \n  }\n\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { PagesComponent } from './pages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ModulesListComponent } from './modules-list/modules-list.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { BranchesComponent } from './branches/branches.component';\nimport { UsersComponent } from './users/users.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { CarriersComponent } from './carriers/carriers.component';\nimport { CarrierZonesComponent } from './carrier-zones/carrier-zones.component';\nimport { PricesComponent } from './prices/prices.component';\nimport { CommodityListComponent } from './commodity-list/commodity-list.component';\nimport { AddShipmentsComponent } from './add-shipments/add-shipments.component';\nimport { EmptyTrackingShipmentsComponent } from './empty-tracking-shipments/empty-tracking-shipments.component';\nimport { ShipmentsListComponent } from './shipments-list/shipments-list.component';\nimport { UpdateShipmentsComponent } from './update-shipments/update-shipments.component';\nimport { ViewShipmentDetailsComponent } from './view-shipment-details/view-shipment-details.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\nimport { BankTransactionsComponent } from './bank-transactions/bank-transactions.component';\nimport { BranchPaymentDetailsComponent } from './branch-payment-details/branch-payment-details.component';\nimport { ManageBranchCommissionsComponent } from './manage-branch-commissions/manage-branch-commissions.component';\nimport { BranchCommissionPaymentsComponent } from './branch-commission-payments/branch-commission-payments.component';\nimport { ExpensesComponent } from './expenses/expenses.component';\nimport { StockPurchasesComponent } from './stock-purchases/stock-purchases.component';\nimport { StockRequestsComponent } from './stock-requests/stock-requests.component';\nimport { StockAvailabilityComponent } from './stock-availability/stock-availability.component';\nimport { BranchStockAvailabilityComponent } from './branch-stock-availability/branch-stock-availability.component';\nimport { UsedStockComponent } from './used-stock/used-stock.component';\nimport { SalariesComponent } from './salaries/salaries.component';\nimport { ComplaintsComponent } from './complaints/complaints.component';\n\nimport { AuthGuard } from '../helpers/auth.guard';\n\nconst routes: Routes = [{\n  path: '',\n  component: PagesComponent,\n  canActivate: [AuthGuard],\n  children: [\n    {\n      path: '',\n      redirectTo: 'dashboard',\n      pathMatch: 'full',\n    },\n    {\n      path: 'dashboard',\n      component: DashboardComponent,\n    },\n    {\n      path: 'modules-list',\n      component: ModulesListComponent,\n    },\n    {\n      path: 'roles',\n      component: RolesComponent,\n    },\n    {\n      path: 'branches',\n      component: BranchesComponent,\n    },\n    {\n      path: 'manage-branch-commissions/:id',\n      component: ManageBranchCommissionsComponent,\n    },\n    {\n      path: 'users',\n      component: UsersComponent,\n    },\n    {\n      path: 'countries',\n      component: CountriesComponent,\n    },\n    {\n      path: 'carriers',\n      component: CarriersComponent,\n    },\n    {\n      path: 'carrier-zones',\n      component: CarrierZonesComponent,\n    },\n    {\n      path: 'prices',\n      component: PricesComponent,\n    },\n    {\n      path: 'commodity-list',\n      component: CommodityListComponent,\n    },\n    {\n      path: 'add-shipments',\n      component: AddShipmentsComponent,\n    },\n    {\n      path: 'empty-tracking-shipments',\n      component: EmptyTrackingShipmentsComponent,\n    },\n    {\n      path: 'shipments-list',\n      component: ShipmentsListComponent,\n    },\n    {\n      path: 'update-shipments/:id',\n      component: UpdateShipmentsComponent,\n    },\n    {\n      path: 'view-shipment-details/:id',\n      component: ViewShipmentDetailsComponent,\n    },\n    {\n      path: 'bank-transactions',\n      component: BankTransactionsComponent,\n    },\n    {\n      path: 'branch-payment-details',\n      component: BranchPaymentDetailsComponent,\n    },    \n    {\n      path: 'branch-commission-payments',\n      component: BranchCommissionPaymentsComponent,\n    },\n    {\n      path: 'expenses',\n      component: ExpensesComponent,\n    },\n    {\n      path: 'stock-purchases',\n      component: StockPurchasesComponent,\n    },\n    {\n      path: 'stock-requests',\n      component: StockRequestsComponent,\n    },\n    {\n      path: 'stock-availability',\n      component: StockAvailabilityComponent,\n    },\n    {\n      path: 'branch-stock-availability',\n      component: BranchStockAvailabilityComponent,\n    },\n    {\n      path: 'used-stock',\n      component: UsedStockComponent,\n    },\n    {\n      path: 'salaries',\n      component: SalariesComponent,\n    },\n    {\n      path: 'complaints',\n      component: ComplaintsComponent,\n    },\n    {\n      path: 'settings',\n      component: SettingsComponent,\n    },\n    {\n      path: 'access-denied',\n      component: AccessDeniedComponent,\n    },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbTabsetModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbListModule,\n  NbCheckboxModule,\n  NbIconModule,\n  NbMenuModule,\n  NbInputModule,\n  NbDatepickerModule,  \n} from '@nebular/theme';\nimport { NbDateFnsDateModule } from '@nebular/date-fns';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { PagesComponent } from './pages.component';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FilterPipe } from '../helpers/table-filter.pipe';\nimport { SmartFilterPipe } from '../helpers/table-smart-filter.pipe';\nimport { SafeHtmlPipe } from '../helpers/safe-html.pipe';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ModulesListComponent } from './modules-list/modules-list.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { BranchesComponent } from './branches/branches.component';\nimport { UsersComponent } from './users/users.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { CarriersComponent } from './carriers/carriers.component';\nimport { CarrierZonesComponent } from './carrier-zones/carrier-zones.component';\nimport { PricesComponent } from './prices/prices.component';\nimport { AddShipmentsComponent } from './add-shipments/add-shipments.component';\nimport { ShipmentsListComponent } from './shipments-list/shipments-list.component';\nimport { CommodityListComponent } from './commodity-list/commodity-list.component';\nimport { EmptyTrackingShipmentsComponent } from './empty-tracking-shipments/empty-tracking-shipments.component';\nimport { UpdateShipmentsComponent } from './update-shipments/update-shipments.component';\nimport { ViewShipmentDetailsComponent } from './view-shipment-details/view-shipment-details.component';\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\nimport { BankTransactionsComponent } from './bank-transactions/bank-transactions.component';\nimport { BranchPaymentDetailsComponent } from './branch-payment-details/branch-payment-details.component';\nimport { ManageBranchCommissionsComponent } from './manage-branch-commissions/manage-branch-commissions.component';\nimport { BranchCommissionPaymentsComponent } from './branch-commission-payments/branch-commission-payments.component';\nimport { ExpensesComponent } from './expenses/expenses.component';\nimport { StockPurchasesComponent } from './stock-purchases/stock-purchases.component';\nimport { StockRequestsComponent } from './stock-requests/stock-requests.component';\nimport { StockAvailabilityComponent } from './stock-availability/stock-availability.component';\nimport { BranchStockAvailabilityComponent } from './branch-stock-availability/branch-stock-availability.component';\nimport { UsedStockComponent } from './used-stock/used-stock.component';\nimport { SalariesComponent } from './salaries/salaries.component';\nimport { ComplaintsComponent } from './complaints/complaints.component';\n\n\n@NgModule({\n  declarations: [\n    PagesComponent,\n    DashboardComponent,\n    ModulesListComponent,\n    NotFoundComponent,\n    FilterPipe,\n    SmartFilterPipe,\n    SafeHtmlPipe,\n    RolesComponent,\n    BranchesComponent,\n    UsersComponent,\n    SettingsComponent,\n    CountriesComponent,\n    CarriersComponent,\n    CarrierZonesComponent,\n    PricesComponent,\n    AddShipmentsComponent,\n    ShipmentsListComponent,    \n    CommodityListComponent,\n    EmptyTrackingShipmentsComponent,\n    UpdateShipmentsComponent,\n    ViewShipmentDetailsComponent,\n    AccessDeniedComponent,\n    BankTransactionsComponent,\n    BranchPaymentDetailsComponent,\n    ManageBranchCommissionsComponent,\n    BranchCommissionPaymentsComponent,\n    ExpensesComponent,\n    StockPurchasesComponent,\n    StockRequestsComponent,\n    StockAvailabilityComponent,\n    BranchStockAvailabilityComponent,\n    UsedStockComponent,\n    SalariesComponent,\n    ComplaintsComponent,        \n  ],\n  imports: [\n    SharedModule,\n    NgSelectModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    PagesRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    NbActionsModule,\n    NbButtonModule,\n    NbInputModule,\n    NbCardModule,\n    NbTabsetModule,\n    NbRadioModule,\n    NbSelectModule,\n    NbListModule,\n    NbCheckboxModule,\n    NbIconModule,\n    NbDatepickerModule,    \n    Ng2SmartTableModule,\n    NgxPaginationModule,\n    NbDateFnsDateModule.forRoot({\n      parseOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n      formatOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n    }),\n    EditorModule\n  ],  \n  providers: [\n  ]\n})\nexport class PagesModule {\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;"]}