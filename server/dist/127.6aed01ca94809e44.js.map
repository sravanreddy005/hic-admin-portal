{"version":3,"file":"127.6aed01ca94809e44.js","mappings":"wNAaO,IAAMA,EAAb,MAAM,QAEJC,0DAFWD,8BAAaE,iGARbC,uBAAsB,sBAE3BA,sBAAyB,mBAE7BA,ssn4CAISH,GAAb,qECDkBG,oBAA2EA,sCAA0BA,+BACrGA,oBAAwEA,4CAAgCA,kCAF1GA,kBACEA,0BACAA,0BACJA,8BAF0CA,qHACAA,yIAOpCA,oBAA8EA,iCAAqBA,kCADvGA,kBACIA,0BACJA,8BAD0CA,+HCX1D,MAAMC,EAAiB,CAAC,CACtBC,KAAM,GACNC,UAAWN,EACXO,SAAU,CACR,CACEF,KAAM,QACNC,UCDN,MAAM,QAOJE,YACUC,EACAC,EACAC,EACAC,GAHAC,mBACAA,sBACAA,2BACAA,cAVHA,gBAAY,EACZA,eAAW,EACXA,gBAAa,GAWZA,KAAKF,oBAAoBG,cAAeC,aAAQF,KAAKF,oBAAoBK,mBAC3EH,KAAKD,OAAOK,SAAS,CAAC,2BAI5BhB,WACEY,KAAKK,UAAYL,KAAKJ,YAAYU,MAAM,CACtCC,MAAO,CAAC,GAAI,CAACC,cAAqBA,aAClCC,SAAU,CAAC,GAAI,CAACD,kBAKhBE,WAAS,OAAOV,KAAKK,UAAUM,SAEnCC,WACEZ,KAAKa,WAAY,EAEbb,KAAKK,UAAUS,SAInBd,KAAKF,oBAAoBiB,MAAMf,KAAKK,UAAUW,OAAOC,UAAU,CAC7DC,KAAOC,IACFA,GAA8B,IAAtBA,EAAKC,cACdpB,KAAKK,UAAUgB,QACfrB,KAAKD,OAAOK,SAAS,CAAC,4BAEtBJ,KAAKH,eAAeyB,UAAU,gBAAgB,SADzCC,GAAiC,IAAtBJ,EAAKC,aACmCD,EAAKK,QAEL,wCAG5DC,MAAQC,UACN1B,KAAK2B,YAAgB,MAAHJ,OAAG,EAAHA,EAAKC,SAAa,MAAHE,OAAG,EAAHH,EAAKC,QAAoB,QAAVI,EAAG,MAAHL,OAAG,EAAHA,EAAKE,aAAKI,eAAEL,QAC5DxB,KAAKH,eAAeyB,UAAU,gBAAgB,SAAUtB,KAAK2B,aAE/DG,SAAU,SAlBV9B,KAAKa,WAAY,gDAjCVkB,GAAczC,wEAAdyC,EAAc1C,41BFd3BC,mBAAS,UAATA,CAAS,UAATA,CAAS,UAATA,CAAS,UAATA,CAAS,UAATA,CAAS,UAMoBA,mBAAOA,QACxBA,kBAA8BA,mCAAY0C,eAExC1C,iBACEA,oBACAA,wBAIFA,QAEAA,kBACEA,qBACAA,wBAGFA,QACAA,eAAM,SAENA,sBAAqGA,oBAAOA,6BAlBxGA,wCAGkGA,4MAC9FA,gNAOqFA,8NACrFA,kOAMcA,ucEXvByC,GAAb,IDWI,CACEvC,KAAM,KACNC,UEnBN,MAAM,QAEJE,YACUI,iBAGVkC,YACEjC,KAAKD,OAAOK,SAAS,CAAC,8DAPb8B,GAAiB5C,sCAAjB4C,EAAiB7C,yQCR9BC,iBAAiB,UAAjBA,CAAiB,YAAjBA,CAAiB,iBAAjBA,CAAiB,UAAjBA,CAAiB,UAKWA,8BAAkBA,QACpCA,mBAAyBA,uDAA2CA,QACpEA,oBAAQA,gCAAS0C,gBACf1C,+BACFA,sUDDG4C,GAAb,OF4BO,IAAMC,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsB7C,IACtB6C,QAECD,GAAb,GIYaE,EAAb,MAAM,sDAAOA,4DAbF,CACPC,IACAC,KACAC,KACAC,KACAC,MACAC,MACAC,MACAC,MACAC,IACAX,MAGSE,GAAb","names":["AuthComponent","ngOnInit","selectors","i0","routes","path","component","children","constructor","formBuilder","toasterService","authenticateService","router","this","isLoggedIn","isEmpty","currentUserValue","navigate","loginForm","group","email","Validators","password","form","controls","onSubmit","submitted","invalid","login","value","subscribe","next","data","responseCode","reset","showToast","r","message","error","err","errMessage","e","_a","complete","LoginComponent","ctx","goToLogin","NotFoundComponent","AuthRoutingModule","RouterModule","AuthModule","SharedModule","CommonModule","ReactiveFormsModule","FormsModule","NbLayoutModule","NbCardModule","NbInputModule","NbAlertModule","ThemeModule"],"sourceRoot":"webpack:///","sources":["./src/app/auth/auth.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/not-found/not-found.component.ts","./src/app/auth/not-found/not-found.component.html","./src/app/auth/auth.module.ts"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation  } from '@angular/core';\n\n@Component({\n  selector: 'ngx-pages',\n  styleUrls: ['auth.component.scss'],\n  template: `<nb-layout windowMode>\n    <nb-layout-column>\n        <app-loader></app-loader>\n        <router-outlet></router-outlet>\n    </nb-layout-column>\n  </nb-layout>`,\n  encapsulation: ViewEncapsulation.None, \n})\nexport class AuthComponent implements OnInit {\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<section>\n  <div class=\"container\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card shadow-2-strong\" style=\"border-radius: 1rem;\">\n          <div class=\"card-body p-5 text-center\">\n            <h3 class=\"mb-5\">Sign in</h3>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n              <!-- Email input -->\n              <div class=\"form-outline mb-4\">\n                <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" autoFocus nbInput fullWidth status=\"{{form?.email?.invalid && (form?.email?.dirty || form?.email?.touched) ? 'danger' : ''}}\" id=\"form1Example1\" class=\"form-control\" />\n                <div *ngIf=\"form?.email?.invalid && (form?.email?.dirty || form?.email?.touched)\" class=\"error\">\n                  <small class=\"form-control-feedback\" *ngIf=\"form?.email?.errors?.required\">Please enter email address</small>\n                  <small class=\"form-control-feedback\" *ngIf=\"form?.email?.errors?.email\">Please enter valid email address</small>\n              </div>\n              </div>            \n              <!-- Password input -->\n              <div class=\"form-outline mb-4\">\n                <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" nbInput fullWidth status=\"{{form?.password?.invalid && (form?.password?.dirty || form?.password?.touched) ? 'danger' : ''}}\" id=\"form1Example2\" class=\"form-control\" />\n                <div *ngIf=\"form?.password?.invalid && (form?.password?.dirty || form?.password?.touched)\" class=\"error\">\n                    <small class=\"form-control-feedback\" *ngIf=\"form?.password?.errors?.required\">Please enter password</small>\n                </div>\n              </div>  \n              <br /><br />                     \n              <!-- Submit button -->\n              <button type=\"submit\" [disabled]=\"loginForm?.invalid || submitted\" class=\"btn btn-primary btn-block\">Sign in</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n// import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n// import { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: 'login',\n      component: LoginComponent,\n    },\n    // {\n    //   path: 'forgot-password',\n    //   component: ForgotPasswordComponent,\n    // },\n    // {\n    //   path: 'reset-password',\n    //   component: ResetPasswordComponent,\n    // },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },    \n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToasterService } from '../../services/toaster/toaster.service';\nimport { AuthenticateService } from '../../services/authentication/authenticate.service';\nimport { Authenticate as AuthenticateModel } from '../../models/authenticate.model';\nimport {isEmpty} from \"lodash\";\n\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public submitted = false;\n  public isErrors = false;\n  public errMessage = '';\n  public isLoggedIn!: Observable<AuthenticateModel>; \n  public loginForm!: FormGroup;\n\n  constructor(    \n    private formBuilder: FormBuilder,\n    private toasterService: ToasterService,\n    private authenticateService: AuthenticateService,\n    private router: Router,\n    \n  ) { \n      if (this.authenticateService.isLoggedIn && !isEmpty(this.authenticateService.currentUserValue)) { \n        this.router.navigate(['/admin/pages/dashboard']);\n      }\n   }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get form() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      this.submitted = false;\n        return;\n    }    \n    this.authenticateService.login(this.loginForm.value).subscribe({\n      next: (data : any) => {\n        if(data && data.responseCode === 1){\n          this.loginForm.reset();\n          this.router.navigate(['/admin/pages/dashboard']);\n        } else if(data && data.responseCode === 0){\n          this.toasterService.showToast('slash-outline','danger', data.message);\n        }else{\n          this.toasterService.showToast('slash-outline','danger', 'An error occured ! Please try again');\n        }\n      },\n      error: (err) => {     \n        this.errMessage = err?.message ? err?.message : err?.error?.message;\n        this.toasterService.showToast('slash-outline','danger', this.errMessage);\n      },\n      complete: () => {}\n    });\n    this.submitted = false;    \n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(\n    private router: Router,\n  ) {}\n\n  goToLogin() {\n    this.router.navigate(['/auth/login']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n          <h2 class=\"title\">404 Page Not Found</h2>\n          <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n          <button (click)=\"goToLogin()\" type=\"button\" class=\"btn btn-primary btn-block\">\n            Take Me To Login\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule  } from '@angular/forms';\n\n\nimport {\n  NbLayoutModule,\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbIconModule,\n  NbInputModule,\n  NbAlertModule\n} from '@nebular/theme';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    NotFoundComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent\n  ],\n  imports: [\n    SharedModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NbLayoutModule,\n    NbCardModule,\n    NbInputModule,\n    NbAlertModule,\n    ThemeModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n"]}